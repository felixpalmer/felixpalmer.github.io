"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1234],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>k});var l=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,l)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,l,n=function(e,t){if(null==e)return{};var a,l,n={},r=Object.keys(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)a=r[l],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=l.createContext({}),p=function(e){var t=l.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return l.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},u=l.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(a),u=n,k=c["".concat(s,".").concat(u)]||c[u]||m[u]||r;return a?l.createElement(k,i(i({ref:t},d),{},{components:a})):l.createElement(k,i({ref:t},d))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,i=new Array(r);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:n,i[1]=o;for(var p=2;p<r;p++)i[p]=a[p];return l.createElement.apply(null,i)}return l.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2972:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var l=a(83117),n=(a(67294),a(3905));const r={},i="Tile3DLayer",o={unversionedId:"api-reference/geo-layers/tile-3d-layer",id:"api-reference/geo-layers/tile-3d-layer",title:"Tile3DLayer",description:"The Tile3DLayer renders 3d tiles data formatted according to the 3D Tiles Specification and ESRI I3S ,",source:"@site/../docs/api-reference/geo-layers/tile-3d-layer.md",sourceDirName:"api-reference/geo-layers",slug:"/api-reference/geo-layers/tile-3d-layer",permalink:"/deck.gl/docs/api-reference/geo-layers/tile-3d-layer",draft:!1,editUrl:"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/geo-layers/tile-3d-layer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TileLayer",permalink:"/deck.gl/docs/api-reference/geo-layers/tile-layer"},next:{title:"TripsLayer",permalink:"/deck.gl/docs/api-reference/geo-layers/trips-layer"}},s={},p=[{value:"Installation",id:"installation",level:2},{value:"Properties",id:"properties",level:2},{value:"Render Options",id:"render-options",level:3},{value:"<code>opacity</code> (Number, Optional)",id:"opacity",level:5},{value:"<code>pointSize</code> (Number, Optional)",id:"pointsize",level:5},{value:"Data Properties",id:"data-properties",level:3},{value:"<code>data</code> (String)",id:"data",level:5},{value:"<code>loader</code> (Object)",id:"loader",level:5},{value:"<code>loadOptions</code> (Object, Optional)",id:"loadoptions",level:5},{value:"<code>pickable</code> (Boolean, Optional)",id:"pickable",level:5},{value:"Data Accessors",id:"data-accessors",level:3},{value:"<code>getPointColor</code> (Function|Array, Optional)",id:"getpointcolor",level:5},{value:"Callbacks",id:"callbacks",level:3},{value:"<code>onTilesetLoad</code> (Function, optional)",id:"ontilesetload",level:5},{value:"<code>onTileLoad</code> (Function, optional)",id:"ontileload",level:5},{value:"<code>onTileUnload</code> (Function, optional)",id:"ontileunload",level:5},{value:"<code>onTileError</code> (Function, optional)",id:"ontileerror",level:5},{value:"<code>_getMeshColor</code> (Function, optional)",id:"_getmeshcolor",level:5},{value:"Sub Layers",id:"sub-layers",level:2},{value:"Remarks",id:"remarks",level:2},{value:"Source",id:"source",level:2}],d={toc:p},c="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(c,(0,l.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"tile3dlayer"},"Tile3DLayer"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"Tile3DLayer")," renders 3d tiles data formatted according to the ",(0,n.kt)("a",{parentName:"p",href:"https://www.opengeospatial.org/standards/3DTiles"},"3D Tiles Specification")," and ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Esri/i3s-spec"},(0,n.kt)("inlineCode",{parentName:"a"},"ESRI I3S"))," ,\nwhich is supported by the ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/modules/3d-tiles/docs/api-reference/tiles-3d-loader"},"Tiles3DLoader"),"."),(0,n.kt)("p",null,"Tile3DLayer is a ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/composite-layer"},"CompositeLayer"),". Base on each tile type, it uses a ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/layers/point-cloud-layer"},"PointCloudLayer"),", a ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/mesh-layers/scenegraph-layer"},"ScenegraphLayer")," or ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/mesh-layers/simple-mesh-layer"},"SimpleMeshLayer")," to render."),(0,n.kt)("p",null,"References"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification"},"3D Tiles"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Esri/i3s-spec"},"ESRI I3S"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Load a 3D tiles dataset from ION server. ",(0,n.kt)("a",{parentName:"strong",href:"https://cesium.com/docs/tutorials/getting-started/#your-first-app"},"Set up Ion account"),";")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"import DeckGL from '@deck.gl/react';\nimport {CesiumIonLoader} from '@loaders.gl/3d-tiles';\nimport {Tile3DLayer} from '@deck.gl/geo-layers';\n\nfunction App({viewState}) {\n  const layer = new Tile3DLayer({\n    id: 'tile-3d-layer',\n    // tileset json file url\n    data: 'https://assets.cesium.com/43978/tileset.json',\n    loader: CesiumIonLoader,\n    // https://cesium.com/docs/rest-api/\n    loadOptions: {\n      'cesium-ion': {accessToken: '<ion_access_token_for_your_asset>'}\n    },\n    onTilesetLoad: (tileset) => {\n      // Recenter to cover the tileset\n      const {cartographicCenter, zoom} = tileset;\n      this.setState({\n          viewState: {\n            ...this.state.viewState,\n            longitude: cartographicCenter[0],\n            latitude: cartographicCenter[1],\n            zoom\n          }\n      });\n    },\n    // override scenegraph subLayer prop\n    _subLayerProps: {\n      scenegraph: {_lighting: 'flat'}\n    }\n  });\n\n  return <DeckGL viewState={viewState} layers={[layer]} />;\n}\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Load I3S Tiles")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"import DeckGL from '@deck.gl/react';\nimport {I3SLoader} from '@loaders.gl/i3s';\nimport {Tile3DLayer} from '@deck.gl/geo-layers';\n\nfunction App({viewState}) {\n  const layer = new Tile3DLayer({\n    id: 'tile-3d-layer',\n    // Tileset entry point: Indexed 3D layer file url\n    data: 'https://tiles.arcgis.com/tiles/z2tnIkrLQ2BRzr6P/arcgis/rest/services/SanFrancisco_Bldgs/SceneServer/layers/0',\n    loader: I3SLoader\n  });\n\n  return <DeckGL viewState={viewState} layers={[layer]} />;\n}\n")),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)("p",null,"To install the dependencies:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm install deck.gl\n# or\nnpm install @deck.gl/core @deck.gl/layers @deck.gl/mesh-layers @deck.gl/geo-layers\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"import {Tile3DLayer} from '@deck.gl/geo-layers';\nnew Tile3DLayer({});\n")),(0,n.kt)("p",null,"To use pre-bundled scripts:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://unpkg.com/deck.gl@^8.0.0/dist.min.js"><\/script>\n\x3c!-- or --\x3e\n<script src="https://unpkg.com/@deck.gl/core@^8.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/layers@^8.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/mesh-layers@^8.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/geo-layers@^8.0.0/dist.min.js"><\/script>\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"new deck.Tile3DLayer({});\n")),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("p",null,"Inherits from all ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/layer"},"Base Layer")," and ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/composite-layer"},"CompositeLayer")," properties."),(0,n.kt)("p",null,"Along with other options as below,"),(0,n.kt)("h3",{id:"render-options"},"Render Options"),(0,n.kt)("h5",{id:"opacity"},(0,n.kt)("inlineCode",{parentName:"h5"},"opacity")," (Number, Optional)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default ",(0,n.kt)("inlineCode",{parentName:"li"},"1.0"))),(0,n.kt)("p",null,"The opacity of the layer. The same as defined in ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/layer"},"layer"),"."),(0,n.kt)("h5",{id:"pointsize"},(0,n.kt)("inlineCode",{parentName:"h5"},"pointSize")," (Number, Optional)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default ",(0,n.kt)("inlineCode",{parentName:"li"},"1.0"))),(0,n.kt)("p",null,"Global radius of all points in pixels.\nThis value is only applied when ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#introduction"},"tile format")," is ",(0,n.kt)("inlineCode",{parentName:"p"},"pnts"),"."),(0,n.kt)("h3",{id:"data-properties"},"Data Properties"),(0,n.kt)("h5",{id:"data"},(0,n.kt)("inlineCode",{parentName:"h5"},"data")," (String)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A URL to fetch tiles entry point of ",(0,n.kt)("inlineCode",{parentName:"li"},"3D Tiles")," ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#tileset-json"},"Tileset JSON")," file or ",(0,n.kt)("inlineCode",{parentName:"li"},"Indexed 3D Scene Layer")," file ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/Esri/i3s-spec"},"I3S"),".")),(0,n.kt)("h5",{id:"loader"},(0,n.kt)("inlineCode",{parentName:"h5"},"loader")," (Object)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default ",(0,n.kt)("a",{parentName:"li",href:"https://loaders.gl/modules/3d-tiles/docs/api-reference/tiles-3d-loader"},(0,n.kt)("inlineCode",{parentName:"a"},"Tiles3DLoader")))),(0,n.kt)("p",null,"A loader which is used to decode the fetched tiles. Available options are ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/modules/3d-tiles/docs/api-reference/tiles-3d-loader"},(0,n.kt)("inlineCode",{parentName:"a"},"CesiumIonLoader"),",",(0,n.kt)("inlineCode",{parentName:"a"},"Tiles3DLoader")),", ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/modules/i3s/docs/api-reference/i3s-loader"},(0,n.kt)("inlineCode",{parentName:"a"},"I3SLoader")),"."),(0,n.kt)("h5",{id:"loadoptions"},(0,n.kt)("inlineCode",{parentName:"h5"},"loadOptions")," (Object, Optional)"),(0,n.kt)("p",null,"On top of the ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/layer#loadoptions"},"default options"),", also support the following keys:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"[loader.id]")," passing options to the loader defined by the ",(0,n.kt)("inlineCode",{parentName:"li"},"loader")," prop."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"tileset"),": Forward parameters to the ",(0,n.kt)("a",{parentName:"li",href:"https://loaders.gl/modules/tiles/docs/api-reference/tileset-3d#constructor-1"},(0,n.kt)("inlineCode",{parentName:"a"},"Tileset3D"))," instance after fetching the tileset metadata.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"import {CesiumIonLoader} from '@loaders.gl/3d-tiles';\nimport {Tile3DLayer} from '@deck.gl/geo-layers';\n\nconst layer = new Tile3DLayer({\n  id: 'tile-3d-layer',\n  // tileset json file url\n  data: 'https://assets.cesium.com/43978/tileset.json',\n  loader: CesiumIonLoader,\n  loadOptions: {\n    tileset: {\n      throttleRequests: false,\n    },\n    'cesium-ion': {accessToken: '<ion_access_token_for_your_asset>'}\n  }\n})\n")),(0,n.kt)("h5",{id:"pickable"},(0,n.kt)("inlineCode",{parentName:"h5"},"pickable")," (Boolean, Optional)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: false")),(0,n.kt)("p",null,"When ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/developer-guide/custom-layers/picking"},(0,n.kt)("inlineCode",{parentName:"a"},"picking"))," is enabled, ",(0,n.kt)("inlineCode",{parentName:"p"},"info.object")," will be a ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/docs/specifications/category-3d-tiles#tileheader-fields"},"Tile3DHeader")," object."),(0,n.kt)("h3",{id:"data-accessors"},"Data Accessors"),(0,n.kt)("h5",{id:"getpointcolor"},(0,n.kt)("inlineCode",{parentName:"h5"},"getPointColor")," (Function|Array, Optional)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Default ",(0,n.kt)("inlineCode",{parentName:"p"},"[0, 0, 0, 255]")),(0,n.kt)("p",{parentName:"li"},"The rgba color at the target, in ",(0,n.kt)("inlineCode",{parentName:"p"},"r, g, b, [a]"),". Each component is in the 0-255 range.\nThis value is only applied when ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#introduction"},"tile format")," is ",(0,n.kt)("inlineCode",{parentName:"p"},"pnts")," and no ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/AnalyticalGraphicsInc/3d-tiles/blob/master/specification/TileFormats/PointCloud/README.md#point-colors"},"color properties")," are defined in point cloud tile file."))),(0,n.kt)("h3",{id:"callbacks"},"Callbacks"),(0,n.kt)("h5",{id:"ontilesetload"},(0,n.kt)("inlineCode",{parentName:"h5"},"onTilesetLoad")," (Function, optional)"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"onTilesetLoad")," is a function that is called when Tileset JSON file is loaded. ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#tileset-json"},"Tileset")," object is passed in the callback."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"onTilesetLoad: (tileset) => {}"))),(0,n.kt)("h5",{id:"ontileload"},(0,n.kt)("inlineCode",{parentName:"h5"},"onTileLoad")," (Function, optional)"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"onTileLoad")," is a function that is called when a tile in the tileset hierarchy is loaded. ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/modules/3d-tiles/modules/3d-tiles/docs/api-reference/tile-3d"},"Tile3D")," object is passed in the callback."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"onTileLoad: (tileHeader) => {}"))),(0,n.kt)("h5",{id:"ontileunload"},(0,n.kt)("inlineCode",{parentName:"h5"},"onTileUnload")," (Function, optional)"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"onTileUnload")," is a function that is called when a tile is unloaded. ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/modules/3d-tiles/modules/3d-tiles/docs/api-reference/tile-3d"},"Tile3D")," object is passed in the callback."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"onTileUnload: (tileHeader) => {}"))),(0,n.kt)("h5",{id:"ontileerror"},(0,n.kt)("inlineCode",{parentName:"h5"},"onTileError")," (Function, optional)"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"onTileError")," is a function that is called when a tile failed to load."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"onTileError: (tileHeader, url, message) => {}"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"url"),": the url of the failed tile."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"message"),": the error message.")))),(0,n.kt)("h5",{id:"_getmeshcolor"},(0,n.kt)("inlineCode",{parentName:"h5"},"_getMeshColor")," (Function, optional)"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"_getMeshColor")," is a function which allows to change color of mesh based on properties of ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/docs/specifications/category-3d-tiles#tileheader-fields"},"tileHeader")," object.\nIt recieves ",(0,n.kt)("inlineCode",{parentName:"p"},"tileHeader")," object as argument and return type is array of ","[r, g, b]"," values in the 0-255 range.\nThis value is only applied when tile format is ",(0,n.kt)("inlineCode",{parentName:"p"},"mesh"),".\nCan be used only for I3S debugging purposes."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"_getMeshColor: (tileHeader) => [255, 255, 255]"))),(0,n.kt)("h2",{id:"sub-layers"},"Sub Layers"),(0,n.kt)("p",null,"The Tile3DLayer renders the following sublayers based on tile ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#introduction"},"format"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"scenegraph")," - a ",(0,n.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/mesh-layers/scenegraph-layer"},"ScenegraphLayer")," rendering all the tiles with Batched 3D Model format (",(0,n.kt)("inlineCode",{parentName:"li"},"b3dm"),") or Instanced 3D Model format (",(0,n.kt)("inlineCode",{parentName:"li"},"i3dm"),").",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"_lighting")," is default to ",(0,n.kt)("inlineCode",{parentName:"li"},"pbr"),"."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"pointcloud")," - a ",(0,n.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/layers/point-cloud-layer"},"PointCloudLayer")," rendering all the tiles with Point Cloud format (",(0,n.kt)("inlineCode",{parentName:"li"},"pnts"),")."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"mesh")," - a ",(0,n.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/mesh-layers/simple-mesh-layer"},"SimpleMeshLayer")," rendering all the tiles ESRI ",(0,n.kt)("inlineCode",{parentName:"li"},"MeshPyramids")," data.")),(0,n.kt)("p",null,"Follow ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/composite-layer#_subLayerProp"},"CompositeLayer")," and example in this layer doc to see how to override sub layer props."),(0,n.kt)("h2",{id:"remarks"},"Remarks"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The ",(0,n.kt)("inlineCode",{parentName:"li"},"Tile3DLayer")," can be rendered in multiple views. A tile is loaded if it is required by any of the viewports, and shared across all views via a single cache system.")),(0,n.kt)("h2",{id:"source"},"Source"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/visgl/deck.gl/tree/9.0-release/modules/geo-layers/src/tile-3d-layer"},"modules/geo-layers/src/tile-3d-layer")))}m.isMDXComponent=!0}}]);
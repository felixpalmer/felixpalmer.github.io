"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1716],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},s=Object.keys(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)r=s[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var i=a.createContext({}),c=function(e){var t=a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(r),d=n,f=u["".concat(i,".").concat(d)]||u[d]||m[d]||s;return r?a.createElement(f,l(l({ref:t},p),{},{components:r})):a.createElement(f,l({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=r.length,l=new Array(s);l[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[u]="string"==typeof e?e:n,l[1]=o;for(var c=2;c<s;c++)l[c]=r[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},73494:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const s={},l="generateLayerTests",o={unversionedId:"api-reference/test-utils/generate-layer-tests",id:"api-reference/test-utils/generate-layer-tests",title:"generateLayerTests",description:"This utility generates a series of test cases to be used with testLayer that checks the conformance of a layer class.",source:"@site/../docs/api-reference/test-utils/generate-layer-tests.md",sourceDirName:"api-reference/test-utils",slug:"/api-reference/test-utils/generate-layer-tests",permalink:"/deck.gl/docs/api-reference/test-utils/generate-layer-tests",draft:!1,editUrl:"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/test-utils/generate-layer-tests.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"@deck.gl/test-utils",permalink:"/deck.gl/docs/api-reference/test-utils/overview"},next:{title:"testLayer",permalink:"/deck.gl/docs/api-reference/test-utils/test-layer"}},i={},c=[{value:"Example",id:"example",level:2},{value:"Usage",id:"usage",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"generatelayertests"},"generateLayerTests"),(0,n.kt)("p",null,"This utility generates a series of test cases to be used with ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/test-utils/test-layer"},"testLayer")," that checks the conformance of a layer class."),(0,n.kt)("h2",{id:"example"},"Example"),(0,n.kt)("p",null,"Example of layer unit tests using ",(0,n.kt)("inlineCode",{parentName:"p"},"tape"),". The test utility itself is test framework agnostic."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"import test from 'tape-promise/tape';\nimport {testLayer, generateLayerTests} from '@deck.gl/test-utils';\nimport {GeoJsonLayer} from '@deck.gl/layers';\n\ntest('GeoJsonLayer#tests', t => {\n  \n  const testCases = generateLayerTests({\n    Layer: GeoJsonLayer,\n    sampleProps: {\n      data: SAMPLE_GEOJSON\n    },\n    assert: ({layer, subLayers}) => {\n      t.ok(layer.state.features, 'should update features');\n      t.is(subLayers.length, layer.props.stroked ? 2 : 1, 'correct number of sublayers');\n    }\n  });\n\n  testLayer({Layer: GeoJsonLayer, testCases});\n\n  t.end();\n});\n")),(0,n.kt)("h2",{id:"usage"},"Usage"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"generateLayerTests({Layer, sampleProps, assert, onError});\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Layer")," (Object) - the layer component class to test"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"sampleProps")," (Object, Optional) - a list of props to use as the basis for all generated tests. Can be used to supply a meaningful set of ",(0,n.kt)("inlineCode",{parentName:"li"},"data"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"assert")," (Function, optional) - callback when checking a condition. Receives two arguments:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"condition")," - a value that is expected to be truthy"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"comment")," (String) - information about the check"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"onBeforeUpdate")," - custom callback to be added to each ",(0,n.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/test-utils/test-layer"},"test case"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"onAfterUpdate")," - custom callback to be added to each ",(0,n.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/test-utils/test-layer"},"test case"),".")))}m.isMDXComponent=!0}}]);
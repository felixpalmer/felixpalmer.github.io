"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[4501],{47160:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"api-reference/widgets/context-menu-widget","title":"ContextMenuWidget (Experimental)","description":"Displays a context menu on right-click events with customizable menu items based on picked objects.","source":"@site/../docs/api-reference/widgets/context-menu-widget.md","sourceDirName":"api-reference/widgets","slug":"/api-reference/widgets/context-menu-widget","permalink":"/deck.gl/docs/api-reference/widgets/context-menu-widget","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/widgets/context-menu-widget.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"CompassWidget","permalink":"/deck.gl/docs/api-reference/widgets/compass-widget"},"next":{"title":"FpsWidget","permalink":"/deck.gl/docs/api-reference/widgets/fps-widget"}}');var s=t(74848),c=t(28453);const d={},r="ContextMenuWidget (Experimental)",o={},l=[{value:"Usage",id:"usage",level:2},{value:"Types",id:"types",level:2},{value:"<code>ContextMenuWidgetProps</code>",id:"contextmenuwidgetprops",level:3},{value:"<code>ContextWidgetMenuItem</code>",id:"contextwidgetmenuitem",level:3},{value:"Behavior",id:"behavior",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"contextmenuwidget-experimental",children:"ContextMenuWidget (Experimental)"})}),"\n",(0,s.jsx)(n.p,{children:"Displays a context menu on right-click events with customizable menu items based on picked objects."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {ContextMenuWidget} from '@deck.gl/widgets';\n"})}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import {Deck} from '@deck.gl/core';\nimport {ContextMenuWidget} from '@deck.gl/widgets';\n\nconst deck = new Deck({\n  widgets: [\n    new ContextMenuWidget({\n      getMenuItems: (info, widget) => {\n        if (info.object) {\n        const name = info.object.properties.name;\n          return [\n            {key: 'name', label: name},\n            {key: 'delete', label: 'Delete'}\n          ];\n        }\n        return [{label: 'Add Point', key: 'add'}];\n      },\n      onMenuItemSelected: (key, pickInfo) => {\n        if (key === 'add') addPoint(pickInfo);  \n        if (key === 'delete') deletePoint(pickInfo);  \n      }\n    })\n  ]\n});\n"})}),"\n",(0,s.jsx)(n.h2,{id:"types",children:"Types"}),"\n",(0,s.jsx)(n.h3,{id:"contextmenuwidgetprops",children:(0,s.jsx)(n.code,{children:"ContextMenuWidgetProps"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ContextMenuWidget"})," accepts the generic ",(0,s.jsx)(n.a,{href:"/deck.gl/docs/api-reference/core/widget#widgetprops",children:(0,s.jsx)(n.code,{children:"WidgetProps"})})," and:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getMenuItems"})," (function) - ",(0,s.jsx)(n.strong,{children:"Required."})," Function that returns menu items based on the picked object. Receives ",(0,s.jsx)(n.code,{children:"PickingInfo"})," and returns an array of ",(0,s.jsx)(n.code,{children:"ContextWidgetMenuItem"})," objects or ",(0,s.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"onMenuItemSelected"})," (function, optional) - Callback invoked when a menu item is selected. Receives the selected item key and ",(0,s.jsx)(n.code,{children:"PickingInfo"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"visible"})," (boolean, default ",(0,s.jsx)(n.code,{children:"false"}),") - Controls visibility of the context menu."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"position"})," (object, default ",(0,s.jsx)(n.code,{children:"{x: 0, y: 0}"}),") - Screen position where the menu appears."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"menuItems"})," (array, default ",(0,s.jsx)(n.code,{children:"[]"}),") - Current menu items to display."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"contextwidgetmenuitem",children:(0,s.jsx)(n.code,{children:"ContextWidgetMenuItem"})}),"\n",(0,s.jsx)(n.p,{children:"Menu item definition:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"label"})," (string) - Display text for the menu item"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"key"})," (string) - Unique identifier for the menu item"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"behavior",children:"Behavior"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Right-click events trigger the context menu"}),"\n",(0,s.jsx)(n.li,{children:"Menu items are dynamically generated based on what was clicked"}),"\n",(0,s.jsx)(n.li,{children:"Click elsewhere to hide the menu"}),"\n",(0,s.jsx)(n.li,{children:"Menu automatically positions itself at the cursor location"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>r});var i=t(96540);const s={},c=i.createContext(s);function d(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);
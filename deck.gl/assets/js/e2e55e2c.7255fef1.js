"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[4832],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var i=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=i.createContext({}),c=function(e){var t=i.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},s=function(e){var t=c(e.components);return i.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(r),m=n,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||o;return r?i.createElement(f,a(a({ref:t},s),{},{components:r})):i.createElement(f,a({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,a=new Array(o);a[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:n,a[1]=l;for(var c=2;c<o;c++)a[c]=r[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,r)}m.displayName="MDXCreateElement"},99204:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=r(87462),n=(r(67294),r(3905));const o={},a="OrbitView",l={unversionedId:"api-reference/core/orbit-view",id:"api-reference/core/orbit-view",title:"OrbitView",description:"The OrbitView class is a subclass of View that creates a 3D camera that rotates around a target position. It is usually used for the examination of a 3D scene in non-geospatial use cases.",source:"@site/../docs/api-reference/core/orbit-view.md",sourceDirName:"api-reference/core",slug:"/api-reference/core/orbit-view",permalink:"/deck.gl/docs/api-reference/core/orbit-view",draft:!1,editUrl:"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/core/orbit-view.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"OrthographicView",permalink:"/deck.gl/docs/api-reference/core/orthographic-view"},next:{title:"Controller",permalink:"/deck.gl/docs/api-reference/core/controller"}},p={},c=[{value:"Constructor",id:"constructor",level:2},{value:"<code>orbitAxis</code> (String, optional)",id:"orbitaxis",level:5},{value:"<code>projectionMatrix</code> (Array16, optional)",id:"projectionmatrix",level:5},{value:"<code>fovy</code> (Number, optional)",id:"fovy",level:5},{value:"<code>near</code> (Number, optional)",id:"near",level:5},{value:"<code>far</code> (Number, optional)",id:"far",level:5},{value:"<code>orthographic</code> (Boolean)",id:"orthographic",level:5},{value:"View State",id:"view-state",level:2},{value:"Controller",id:"controller",level:2},{value:"Source",id:"source",level:2}],s={toc:c},d="wrapper";function u(e){let{components:t,...r}=e;return(0,n.kt)(d,(0,i.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"orbitview"},"OrbitView"),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"OrbitView")," class is a subclass of ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/view"},"View")," that creates a 3D camera that rotates around a target position. It is usually used for the examination of a 3D scene in non-geospatial use cases."),(0,n.kt)("p",null,"It's recommended that you read the ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/developer-guide/views"},"Views and Projections guide")," before using this class."),(0,n.kt)("div",{style:{position:"relative",height:450}}),(0,n.kt)("div",{style:{position:"absolute",transform:"translateY(-450px)",paddingLeft:"inherit",paddingRight:"inherit",left:0,right:0}},(0,n.kt)("iframe",{height:"450",style:{width:"100%"},scrolling:"no",title:"deck.gl OrbitView",src:"https://codepen.io/vis-gl/embed/gOLprOZ?height=450&theme-id=light&default-tab=result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},"See the Pen ",(0,n.kt)("a",{href:"https://codepen.io/vis-gl/pen/gOLprOZ"},"deck.gl OrbitView")," by vis.gl (",(0,n.kt)("a",{href:"https://codepen.io/vis-gl"},"@vis-gl"),") on ",(0,n.kt)("a",{href:"https://codepen.io"},"CodePen"),".")),(0,n.kt)("h2",{id:"constructor"},"Constructor"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"import {OrbitView} from '@deck.gl/core';\nconst view = new OrbitView({id, ...});\n")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"OrbitView")," takes the same parameters as the ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/view"},"View")," superclass constructor, plus the following:"),(0,n.kt)("h5",{id:"orbitaxis"},(0,n.kt)("inlineCode",{parentName:"h5"},"orbitAxis")," (String, optional)"),(0,n.kt)("p",null,"Axis with 360 degrees rotating freedom, either ",(0,n.kt)("inlineCode",{parentName:"p"},"'Y'")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"'Z'"),", default to ",(0,n.kt)("inlineCode",{parentName:"p"},"'Z'"),"."),(0,n.kt)("h5",{id:"projectionmatrix"},(0,n.kt)("inlineCode",{parentName:"h5"},"projectionMatrix")," (Array","[16]",", optional)"),(0,n.kt)("p",null,"Projection matrix."),(0,n.kt)("p",null,"If ",(0,n.kt)("inlineCode",{parentName:"p"},"projectionMatrix")," is not supplied, the ",(0,n.kt)("inlineCode",{parentName:"p"},"View")," class will build a projection matrix from the following parameters:"),(0,n.kt)("h5",{id:"fovy"},(0,n.kt)("inlineCode",{parentName:"h5"},"fovy")," (Number, optional)"),(0,n.kt)("p",null,"Field of view covered by camera, in the perspective case. In degrees. Default ",(0,n.kt)("inlineCode",{parentName:"p"},"50"),"."),(0,n.kt)("h5",{id:"near"},(0,n.kt)("inlineCode",{parentName:"h5"},"near")," (Number, optional)"),(0,n.kt)("p",null,"Distance of near clipping plane. Default ",(0,n.kt)("inlineCode",{parentName:"p"},"0.1"),"."),(0,n.kt)("h5",{id:"far"},(0,n.kt)("inlineCode",{parentName:"h5"},"far")," (Number, optional)"),(0,n.kt)("p",null,"Distance of far clipping plane. Default ",(0,n.kt)("inlineCode",{parentName:"p"},"1000"),"."),(0,n.kt)("h5",{id:"orthographic"},(0,n.kt)("inlineCode",{parentName:"h5"},"orthographic")," (Boolean)"),(0,n.kt)("p",null,"Whether to create an orthographic or perspective projection matrix. Default is ",(0,n.kt)("inlineCode",{parentName:"p"},"false")," (perspective projection)."),(0,n.kt)("h2",{id:"view-state"},"View State"),(0,n.kt)("p",null,"To render, ",(0,n.kt)("inlineCode",{parentName:"p"},"OrbitView")," needs to be used together with a ",(0,n.kt)("inlineCode",{parentName:"p"},"viewState")," with the following parameters:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"target")," (Number","[3]",", optional) - The world position at the center of the viewport. Default ",(0,n.kt)("inlineCode",{parentName:"li"},"[0, 0, 0]"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"rotationOrbit")," (Number, optional) - Rotating angle around orbit axis. Default ",(0,n.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"rotationX")," (Number, optional) - Rotating angle around X axis. Default ",(0,n.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"zoom")," (Number, optional) - The zoom level of the viewport. ",(0,n.kt)("inlineCode",{parentName:"li"},"zoom: 0")," maps one unit distance to one pixel on screen, and increasing ",(0,n.kt)("inlineCode",{parentName:"li"},"zoom")," by ",(0,n.kt)("inlineCode",{parentName:"li"},"1")," scales the same object to twice as large. Default ",(0,n.kt)("inlineCode",{parentName:"li"},"0"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"minZoom")," (Number, optional) - The min zoom level of the viewport. Default ",(0,n.kt)("inlineCode",{parentName:"li"},"-Infinity"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"maxZoom")," (Number, optional) - The max zoom level of the viewport. Default ",(0,n.kt)("inlineCode",{parentName:"li"},"Infinity"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"minRotationX")," (Number, optional) - The min rotating angle around X axis. Default ",(0,n.kt)("inlineCode",{parentName:"li"},"-90"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"maxRotationX")," (Number, optional) - The max rotating angle around X axis. Default ",(0,n.kt)("inlineCode",{parentName:"li"},"90"),".")),(0,n.kt)("h2",{id:"controller"},"Controller"),(0,n.kt)("p",null,"By default, ",(0,n.kt)("inlineCode",{parentName:"p"},"OrbitView")," uses the ",(0,n.kt)("inlineCode",{parentName:"p"},"OrbitController")," to handle interactivity. To enable the controller, use:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"const view = new OrbitView({id: '3d-scene', controller: true});\n")),(0,n.kt)("p",null,"Visit the ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/orbit-controller"},"OrbitController")," documentation for a full list of supported options."),(0,n.kt)("h2",{id:"source"},"Source"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/visgl/deck.gl/blob/master/modules/core/src/views/orbit-view.ts"},"modules/core/src/views/orbit-view.ts")))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[843],{3905:(r,e,t)=>{t.d(e,{Zo:()=>l,kt:()=>p});var n=t(67294);function o(r,e,t){return e in r?Object.defineProperty(r,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):r[e]=t,r}function i(r,e){var t=Object.keys(r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(r);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),t.push.apply(t,n)}return t}function a(r){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){o(r,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(t,e))}))}return r}function u(r,e){if(null==r)return{};var t,n,o=function(r,e){if(null==r)return{};var t,n,o={},i=Object.keys(r);for(n=0;n<i.length;n++)t=i[n],e.indexOf(t)>=0||(o[t]=r[t]);return o}(r,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(r);for(n=0;n<i.length;n++)t=i[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(r,t)&&(o[t]=r[t])}return o}var c=n.createContext({}),s=function(r){var e=n.useContext(c),t=e;return r&&(t="function"==typeof r?r(e):a(a({},e),r)),t},l=function(r){var e=s(r.components);return n.createElement(c.Provider,{value:e},r.children)},f="mdxType",y={inlineCode:"code",wrapper:function(r){var e=r.children;return n.createElement(n.Fragment,{},e)}},m=n.forwardRef((function(r,e){var t=r.components,o=r.mdxType,i=r.originalType,c=r.parentName,l=u(r,["components","mdxType","originalType","parentName"]),f=s(t),m=o,p=f["".concat(c,".").concat(m)]||f[m]||y[m]||i;return t?n.createElement(p,a(a({ref:e},l),{},{components:t})):n.createElement(p,a({ref:e},l))}));function p(r,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof r||o){var i=t.length,a=new Array(i);a[0]=m;var u={};for(var c in e)hasOwnProperty.call(e,c)&&(u[c]=e[c]);u.originalType=r,u[f]="string"==typeof r?r:o,a[1]=u;for(var s=2;s<i;s++)a[s]=t[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1449:(r,e,t)=>{t.d(e,{DL:()=>l,Ht:()=>m,Tu:()=>c,lF:()=>f,ot:()=>s,rQ:()=>n,vi:()=>y,vs:()=>p,xm:()=>a,yu:()=>u,zL:()=>i});var n=6371008.8,o={centimeters:100*n,centimetres:100*n,degrees:n/111325,feet:3.28084*n,inches:39.37*n,kilometers:n/1e3,kilometres:n/1e3,meters:n,metres:n,miles:n/1609.344,millimeters:1e3*n,millimetres:1e3*n,nauticalmiles:n/1852,radians:1,yards:1.0936*n};function i(r,e,t){void 0===t&&(t={});var n={type:"Feature"};return(0===t.id||t.id)&&(n.id=t.id),t.bbox&&(n.bbox=t.bbox),n.properties=e||{},n.geometry=r,n}function a(r,e,t){if(void 0===t&&(t={}),!r)throw new Error("coordinates is required");if(!Array.isArray(r))throw new Error("coordinates must be an Array");if(r.length<2)throw new Error("coordinates must be at least 2 numbers long");if(!h(r[0])||!h(r[1]))throw new Error("coordinates must contain numbers");return i({type:"Point",coordinates:r},e,t)}function u(r,e,t){void 0===t&&(t={});for(var n=0,o=r;n<o.length;n++){var a=o[n];if(a.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var u=0;u<a[a.length-1].length;u++)if(a[a.length-1][u]!==a[0][u])throw new Error("First and last Position are not equivalent.")}return i({type:"Polygon",coordinates:r},e,t)}function c(r,e,t){if(void 0===t&&(t={}),r.length<2)throw new Error("coordinates must be an array of two or more positions");return i({type:"LineString",coordinates:r},e,t)}function s(r,e,t){return void 0===t&&(t={}),i({type:"MultiPoint",coordinates:r},e,t)}function l(r,e){void 0===e&&(e="kilometers");var t=o[e];if(!t)throw new Error(e+" units is invalid");return r*t}function f(r,e){void 0===e&&(e="kilometers");var t=o[e];if(!t)throw new Error(e+" units is invalid");return r/t}function y(r){return 180*(r%(2*Math.PI))/Math.PI}function m(r){return r%360*Math.PI/180}function p(r,e,t){if(void 0===e&&(e="kilometers"),void 0===t&&(t="kilometers"),!(r>=0))throw new Error("length must be a positive number");return l(f(r,e),t)}function h(r){return!isNaN(r)&&null!==r&&!Array.isArray(r)}},36987:(r,e,t)=>{t.d(e,{c9:()=>n,nK:()=>o,wA:()=>i});t(1449);function n(r){if(!r)throw new Error("coord is required");if(!Array.isArray(r)){if("Feature"===r.type&&null!==r.geometry&&"Point"===r.geometry.type)return r.geometry.coordinates;if("Point"===r.type)return r.coordinates}if(Array.isArray(r)&&r.length>=2&&!Array.isArray(r[0])&&!Array.isArray(r[1]))return r;throw new Error("coord must be GeoJSON Point or an Array of numbers")}function o(r,e,t){if(!r)throw new Error("No feature passed");if(!t)throw new Error(".featureOf() requires a name");if(!r||"Feature"!==r.type||!r.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!r.geometry||r.geometry.type!==e)throw new Error("Invalid input to "+t+": must be a "+e+", given "+r.geometry.type)}function i(r){return"Feature"===r.type?r.geometry:r}},31025:(r,e,t)=>{t.d(e,{Z:()=>a});var n=t(1449),o=t(36987);function i(r,e){var t=(0,n.Ht)(r[1]),o=(0,n.Ht)(e[1]),i=(0,n.Ht)(e[0]-r[0]);i>Math.PI&&(i-=2*Math.PI),i<-Math.PI&&(i+=2*Math.PI);var a=Math.log(Math.tan(o/2+Math.PI/4)/Math.tan(t/2+Math.PI/4)),u=Math.atan2(i,a);return((0,n.vi)(u)+360)%360}const a=function(r,e,t){var n;return void 0===t&&(t={}),(n=t.final?i((0,o.c9)(e),(0,o.c9)(r)):i((0,o.c9)(r),(0,o.c9)(e)))>180?-(360-n):n}},85290:(r,e,t)=>{t.d(e,{Z:()=>i});var n=t(1449),o=t(36987);const i=function(r,e,t){void 0===t&&(t={});var i=(0,o.c9)(r),a=(0,o.c9)(e);a[0]+=a[0]-i[0]>180?-360:i[0]-a[0]>180?360:0;var u=function(r,e,t){var o=t=void 0===t?n.rQ:Number(t),i=r[1]*Math.PI/180,a=e[1]*Math.PI/180,u=a-i,c=Math.abs(e[0]-r[0])*Math.PI/180;c>Math.PI&&(c-=2*Math.PI);var s=Math.log(Math.tan(a/2+Math.PI/4)/Math.tan(i/2+Math.PI/4)),l=Math.abs(s)>1e-11?u/s:Math.cos(i);return Math.sqrt(u*u+l*l*c*c)*o}(i,a);return(0,n.vs)(u,"meters",t.units)}}}]);
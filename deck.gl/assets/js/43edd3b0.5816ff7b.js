"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[7202],{23247:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"api-reference/widgets/compass-widget","title":"CompassWidget","description":"This widget visualizes bearing and pitch. Click it once to reset bearing to 0, click it a second time to reset pitch to 0. Supports Map and Globe view.","source":"@site/../docs/api-reference/widgets/compass-widget.md","sourceDirName":"api-reference/widgets","slug":"/api-reference/widgets/compass-widget","permalink":"/deck.gl/docs/api-reference/widgets/compass-widget","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/widgets/compass-widget.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"ZoomWidget","permalink":"/deck.gl/docs/api-reference/widgets/zoom-widget"},"next":{"title":"FullscreenWidget","permalink":"/deck.gl/docs/api-reference/widgets/fullscreen-widget"}}');var n=t(74848),d=t(28453);const o={},c="CompassWidget",l={},r=[{value:"Props",id:"props",level:2},{value:"<code>id</code> (string, optional)",id:"id",level:4},{value:"<code>viewId</code> (string, optional)",id:"viewid",level:4},{value:"<code>placement</code> (string, optional)",id:"placement",level:4},{value:"<code>label</code> (string, optional)",id:"label",level:4},{value:"<code>transitionDuration</code> (number, optional)",id:"transitionduration",level:4},{value:"<code>style</code> (object, optional)",id:"style",level:4},{value:"<code>className</code> (string, optional)",id:"classname",level:4}];function a(e){const i={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",...(0,d.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"compasswidget",children:"CompassWidget"})}),"\n",(0,n.jsx)(i.p,{children:"This widget visualizes bearing and pitch. Click it once to reset bearing to 0, click it a second time to reset pitch to 0. Supports Map and Globe view."}),"\n",(0,n.jsx)(i.h2,{id:"props",children:"Props"}),"\n",(0,n.jsxs)(i.h4,{id:"id",children:[(0,n.jsx)(i.code,{children:"id"})," (string, optional)"]}),"\n",(0,n.jsxs)(i.p,{children:["Default: ",(0,n.jsx)(i.code,{children:"'compass'"})]}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"id"})," must be unique among all your widgets at a given time. It's recommended to set ",(0,n.jsx)(i.code,{children:"id"})," explicitly. The ",(0,n.jsx)(i.code,{children:"id"})," is used to match widgets between updates, ensuring deck.gl can distinguish between them. A default ",(0,n.jsx)(i.code,{children:"id"})," is assigned based on widget type, so if you have multiple widgets of the same type (e.g., two ",(0,n.jsx)(i.code,{children:"compass"})," widgets), you need to provide a custom ",(0,n.jsx)(i.code,{children:"id"})," for at least one."]}),"\n",(0,n.jsxs)(i.h4,{id:"viewid",children:[(0,n.jsx)(i.code,{children:"viewId"})," (string, optional)"]}),"\n",(0,n.jsxs)(i.p,{children:["Default: ",(0,n.jsx)(i.code,{children:"null"})]}),"\n",(0,n.jsxs)(i.p,{children:["The ",(0,n.jsx)(i.code,{children:"viewId"})," prop controls how a widget interacts with views. If ",(0,n.jsx)(i.code,{children:"viewId"})," is defined, the widget is placed in that view and interacts exclusively with it; otherwise, it is placed in the root widget container and affects all views."]}),"\n",(0,n.jsxs)(i.h4,{id:"placement",children:[(0,n.jsx)(i.code,{children:"placement"})," (string, optional)"]}),"\n",(0,n.jsxs)(i.p,{children:["Default: ",(0,n.jsx)(i.code,{children:"'top-left'"})]}),"\n",(0,n.jsxs)(i.p,{children:["Widget position within the view relative to the map container. Valid options are ",(0,n.jsx)(i.code,{children:"top-left"}),", ",(0,n.jsx)(i.code,{children:"top-right"}),", ",(0,n.jsx)(i.code,{children:"bottom-left"}),", ",(0,n.jsx)(i.code,{children:"bottom-right"}),", or ",(0,n.jsx)(i.code,{children:"fill"}),"."]}),"\n",(0,n.jsxs)(i.h4,{id:"label",children:[(0,n.jsx)(i.code,{children:"label"})," (string, optional)"]}),"\n",(0,n.jsx)(i.p,{children:"Tooltip message displayed while hovering a mouse over the widget."}),"\n",(0,n.jsxs)(i.p,{children:["Default: ",(0,n.jsx)(i.code,{children:"'Compass'"})]}),"\n",(0,n.jsxs)(i.h4,{id:"transitionduration",children:[(0,n.jsx)(i.code,{children:"transitionDuration"})," (number, optional)"]}),"\n",(0,n.jsxs)(i.p,{children:["Default: ",(0,n.jsx)(i.code,{children:"200"})]}),"\n",(0,n.jsx)(i.p,{children:"Bearing and pitch reset transition duration in milliseconds."}),"\n",(0,n.jsxs)(i.h4,{id:"style",children:[(0,n.jsx)(i.code,{children:"style"})," (object, optional)"]}),"\n",(0,n.jsxs)(i.p,{children:["Default: ",(0,n.jsx)(i.code,{children:"{}"})]}),"\n",(0,n.jsxs)(i.p,{children:["Additional CSS styles for the widget. camelCase CSS properties (e.g. ",(0,n.jsx)(i.code,{children:"backgroundColor"}),") and kabab-case CSS variables are accepted (e.g. ",(0,n.jsx)(i.code,{children:"--button-size"}),")."]}),"\n",(0,n.jsxs)(i.h4,{id:"classname",children:[(0,n.jsx)(i.code,{children:"className"})," (string, optional)"]}),"\n",(0,n.jsxs)(i.p,{children:["Default: ",(0,n.jsx)(i.code,{children:"undefined"})]}),"\n",(0,n.jsxs)(i.p,{children:["Class name to attach to the widget element. The element has the default class name of ",(0,n.jsx)(i.code,{children:"deck-widget deck-compass-widget"}),"."]})]})}function h(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>o,x:()=>c});var s=t(96540);const n={},d=s.createContext(n);function o(e){const i=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(d.Provider,{value:i},e.children)}}}]);
"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[5787],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>f});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),s=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},g=function(e){var t=s(e.components);return i.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),p=s(n),u=r,f=p["".concat(c,".").concat(u)]||p[u]||d[u]||a;return n?i.createElement(f,l(l({ref:t},g),{},{components:n})):i.createElement(f,l({ref:t},g))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var s=2;s<a;s++)l[s]=n[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},82232:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var i=n(87462),r=(n(67294),n(3905));const a={},l="Using Lighting",o={unversionedId:"developer-guide/using-lighting",id:"developer-guide/using-lighting",title:"Using Lighting",description:"A deck.gl lighting effect is a visual approximation of environment illumination based on simplified models to make rendering appear more realistic.",source:"@site/../docs/developer-guide/using-lighting.md",sourceDirName:"developer-guide",slug:"/developer-guide/using-lighting",permalink:"/deck.gl/docs/developer-guide/using-lighting",draft:!1,editUrl:"https://github.com/visgl/deck.gl/tree/master/website/../docs/developer-guide/using-lighting.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Loading Data",permalink:"/deck.gl/docs/developer-guide/loading-data"},next:{title:"Performance Optimization",permalink:"/deck.gl/docs/developer-guide/performance"}},c={},s=[{value:"Constructing A Lighting Effect Instance",id:"constructing-a-lighting-effect-instance",level:2},{value:"Constructing A Material Instance",id:"constructing-a-material-instance",level:2},{value:"Using Materials",id:"using-materials",level:2},{value:"Using Effects",id:"using-effects",level:2},{value:"Pure JS",id:"pure-js",level:3},{value:"React",id:"react",level:3},{value:"Remarks",id:"remarks",level:2}],g={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,i.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"using-lighting"},"Using Lighting"),(0,r.kt)("p",null,"A deck.gl lighting effect is a visual approximation of environment illumination based on simplified models to make rendering appear more realistic."),(0,r.kt)("p",null,"To enable lighting in deck.gl, it is required that both the lighting effect and material instances are properly instantiated."),(0,r.kt)("iframe",{height:"450",style:{width:"100%;"},scrolling:"no",title:"deck.gl LightingEffect Demo",src:"https://codepen.io/vis-gl/embed/ZZwrZz/?height=450&theme-id=light&default-tab=result",frameborder:"no",allowtransparency:"true",allowfullscreen:"true"},"See the Pen ",(0,r.kt)("a",{href:"https://codepen.io/vis-gl/pen/ZZwrZz/"},"deck.gl LightingEffect Demo")," by vis.gl (",(0,r.kt)("a",{href:"https://codepen.io/vis-gl"},"@vis-gl"),") on ",(0,r.kt)("a",{href:"https://codepen.io"},"CodePen"),"."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Interactive demo of LightingEffect")),(0,r.kt)("h2",{id:"constructing-a-lighting-effect-instance"},"Constructing A Lighting Effect Instance"),(0,r.kt)("p",null,"A ",(0,r.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/lighting-effect"},"LightingEffect")," can be instantiated with a ",(0,r.kt)("inlineCode",{parentName:"p"},"lights")," object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import {AmbientLight, PointLight, DirectionalLight, LightingEffect} from '@deck.gl/core';\n\n// create ambient light source\nconst ambientLight = new AmbientLight({\n  color: [255, 255, 255],\n  intensity: 1.0\n});\n// create point light source\nconst pointLight = new PointLight({\n  color: [255, 255, 255],\n  intensity: 2.0,\n  // use coordinate system as the same as view state\n  position: [-125, 50.5, 5000]\n});\n// create directional light source\nconst directionalLight = new DirectionalLight({\n  color: [255, 255, 255],\n  intensity: 1.0,\n  direction: [-3, -9, -1]\n});\n// create lighting effect with light sources\nconst lightingEffect = new LightingEffect({ambientLight, pointLight, directionalLight});\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"lights")," has all the light sources that the lighting effect uses to build the visualization. Users typically specify the following types of light sources:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/core/ambient-light"},"AmbientLight")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/core/point-light"},"PointLight")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/core/directional-light"},"DirectionalLight")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/core/camera-light"},"CameraLight")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/core/sun-light"},"SunLight"))),(0,r.kt)("h2",{id:"constructing-a-material-instance"},"Constructing A Material Instance"),(0,r.kt)("p",null,"A material is a plain JavaScript object representing a lighting model specified per layer. Properties are ",(0,r.kt)("inlineCode",{parentName:"p"},"ambient")," (number 0-1), ",(0,r.kt)("inlineCode",{parentName:"p"},"diffuse")," (number 0-1), ",(0,r.kt)("inlineCode",{parentName:"p"},"shininess")," (number > 0), ",(0,r.kt)("inlineCode",{parentName:"p"},"specularColor")," (array ","[0-255, 0-255, 0-255]","). Setting a material property to the value ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," will set all properties to their defaults, which are:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"{\n  ambient: 0.35,\n  diffuse: 0.6,\n  shininess: 32,\n  specularColor: [30, 30, 30]\n}\n")),(0,r.kt)("h2",{id:"using-materials"},"Using Materials"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"new GeoJsonLayer({\n  id: 'geojson-layer',\n  // layer props\n  ...\n  // lighting only applies to extruded polygons\n  extruded: true,\n  // specify material properties per layer\n  material\n});\n")),(0,r.kt)("p",null,"Refer to each layer's ",(0,r.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/layers/"},"documentation")," to see if the material prop is supported."),(0,r.kt)("h2",{id:"using-effects"},"Using Effects"),(0,r.kt)("h3",{id:"pure-js"},"Pure JS"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import {Deck, LightingEffect} from '@deck.gl/core';\nimport {GeoJsonLayer} from '@deck.gl/layers';\n\nconst lightingEffect = new LightingEffect({\n  ...\n});\n\nconst INITIAL_VIEW_STATE = {\n  latitude: 49.254,\n  longitude: -123.13,\n  zoom: 11,\n  pitch: 45\n};\nconst deckgl = new Deck({\n  canvas: 'my-deck-canvas',\n  initialViewState: INITIAL_VIEW_STATE,\n  controller: true,\n  // add lighting effect to deck\n  effects: [lightingEffect],\n  layers: [new GeoJsonLayer({\n    ...\n  })]\n});\n")),(0,r.kt)("h3",{id:"react"},"React"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import DeckGL from '@deck.gl/react';\nimport {LightingEffect} from '@deck.gl/core';\nimport {GeoJsonLayer} from '@deck.gl/layers';\n\nconst lightingEffect = new LightingEffect({\n  ...\n});\n\nconst INITIAL_VIEW_STATE = {\n  latitude: 49.254,\n  longitude: -123.13,\n  zoom: 11,\n  pitch: 45\n};\n\n<DeckGL\n  initialViewState={INITIAL_VIEW_STATE}\n  controller={true}\n  effects={[lightingEffect]}\n  layers={[new GeoJsonLayer({\n    ...\n  })]}\n/>\n")),(0,r.kt)("h2",{id:"remarks"},"Remarks"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A default lighting effect is created in deck when user doesn't provide one."),(0,r.kt)("li",{parentName:"ul"},"A default material is created in layers which support material prop."),(0,r.kt)("li",{parentName:"ul"},"Lighting is only applied to extruded polygons or point clouds.")))}d.isMDXComponent=!0}}]);
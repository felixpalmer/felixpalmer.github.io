"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[5316],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),u=l,g=d["".concat(s,".").concat(u)]||d[u]||m[u]||r;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:l,i[1]=o;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},63277:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(83117),l=(n(67294),n(3905));const r={},i="ScenegraphLayer",o={unversionedId:"api-reference/mesh-layers/scenegraph-layer",id:"api-reference/mesh-layers/scenegraph-layer",title:"ScenegraphLayer",description:"The ScenegraphLayer renders a number of instances of a complete glTF scenegraph.",source:"@site/../docs/api-reference/mesh-layers/scenegraph-layer.md",sourceDirName:"api-reference/mesh-layers",slug:"/api-reference/mesh-layers/scenegraph-layer",permalink:"/deck.gl/docs/api-reference/mesh-layers/scenegraph-layer",draft:!1,editUrl:"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/mesh-layers/scenegraph-layer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ScatterplotLayer",permalink:"/deck.gl/docs/api-reference/layers/scatterplot-layer"},next:{title:"ScreenGridLayer",permalink:"/deck.gl/docs/api-reference/aggregation-layers/screen-grid-layer"}},s={},p=[{value:"Installation",id:"installation",level:2},{value:"Properties",id:"properties",level:2},{value:"Mesh",id:"mesh",level:3},{value:"<code>scenegraph</code> (URL|Object|Promise)",id:"scenegraph",level:5},{value:"<code>loadOptions</code> (Object, optional)",id:"loadoptions",level:5},{value:"Render Options",id:"render-options",level:3},{value:"<code>sizeScale</code> (Number, optional) transition-enabled",id:"sizescale",level:5},{value:"<code>_animations</code> (Object, optional)",id:"_animations",level:5},{value:"<code>getScene</code> (Function, optional)",id:"getscene",level:5},{value:"<code>getAnimator</code> (Function, optional)",id:"getanimator",level:5},{value:"<code>_lighting</code> (String, optional)",id:"_lighting",level:5},{value:"<code>_imageBasedLightingEnvironment</code> (Function or GLTFEnvironment, optional)",id:"_imagebasedlightingenvironment",level:5},{value:"Data Accessors",id:"data-accessors",level:3},{value:"<code>getPosition</code> (Function, optional) transition-enabled",id:"getposition",level:5},{value:"<code>getColor</code> (Function|Array, optional) transition-enabled",id:"getcolor",level:5},{value:"<code>getOrientation</code> (Function|Array, optional)",id:"getorientation",level:5},{value:"<code>getScale</code> (Function|Array, optional)",id:"getscale",level:5},{value:"<code>getTranslation</code> (Function|Array, optional)",id:"gettranslation",level:5},{value:"<code>getTransformMatrix</code> (Function|Array, optional)",id:"gettransformmatrix",level:5},{value:"<code>sizeMinPixels</code> (Number, optional)",id:"sizeminpixels",level:5},{value:"<code>sizeMaxPixels</code> (Number, optional)",id:"sizemaxpixels",level:5},{value:"Source",id:"source",level:2}],c={toc:p},d="wrapper";function m(e){let{components:t,...n}=e;return(0,l.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"scenegraphlayer"},"ScenegraphLayer"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"<ScenegraphLayerDemo />\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"ScenegraphLayer")," renders a number of instances of a complete glTF scenegraph."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import DeckGL from '@deck.gl/react';\nimport {ScenegraphLayer} from '@deck.gl/mesh-layers';\n\nfunction App({data, viewState}) {\n  /**\n   * Data format:\n   * [\n   *   {name: 'Colma (COLM)', address: '365 D Street, Colma CA 94014', exits: 4214, coordinates: [-122.466233, 37.684638]},\n   *   ...\n   * ]\n   */\n  const layer = new ScenegraphLayer({\n    id: 'scenegraph-layer',\n    data,\n    pickable: true,\n    scenegraph: 'https://raw.githubusercontent.com/KhronosGroup/glTF-Sample-Models/master/2.0/BoxAnimated/glTF-Binary/BoxAnimated.glb',\n    getPosition: d => d.coordinates,\n    getOrientation: d => [0, Math.random() * 180, 90],\n    _animations: {\n      '*': {speed: 5}\n    },\n    sizeScale: 500,\n    _lighting: 'pbr'\n  });\n\n  return <DeckGL viewState={viewState}\n    layers={[layer]}\n    getTooltip={({object}) => object && `${object.name}\\n${object.address}`} />;\n}\n")),(0,l.kt)("h2",{id:"installation"},"Installation"),(0,l.kt)("p",null,"To install the dependencies from NPM:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install deck.gl\n# or\nnpm install @deck.gl/core @deck.gl/mesh-layers\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"import {ScenegraphLayer} from '@deck.gl/mesh-layers';\nnew ScenegraphLayer({});\n")),(0,l.kt)("p",null,"To use pre-bundled scripts:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://unpkg.com/deck.gl@^8.0.0/dist.min.js"><\/script>\n\x3c!-- or --\x3e\n<script src="https://unpkg.com/@deck.gl/core@^8.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/mesh-layers@^8.0.0/dist.min.js"><\/script>\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"new deck.ScenegraphLayer({});\n")),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("p",null,"Inherits from all ",(0,l.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/layer"},"Base Layer")," properties."),(0,l.kt)("h3",{id:"mesh"},"Mesh"),(0,l.kt)("h5",{id:"scenegraph"},(0,l.kt)("inlineCode",{parentName:"h5"},"scenegraph")," (URL|Object|Promise)"),(0,l.kt)("p",null,"The geometry to render for each data object.\nCan be a URL of an object. You need to provide the ",(0,l.kt)("inlineCode",{parentName:"p"},"fetch")," function to load the object.\nCan also be a luma.gl ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/visgl/luma.gl/blob/8.5-release/modules/experimental/docs/api-reference/scenegraph/scenegraph-node.md"},"ScenegraphNode"),", or a ",(0,l.kt)("inlineCode",{parentName:"p"},"Promise")," that resolves to one.\nThe layer calls ",(0,l.kt)("em",{parentName:"p"},"delete()")," on ",(0,l.kt)("em",{parentName:"p"},"scenegraph")," when a new one is provided or the layer is finalized."),(0,l.kt)("h5",{id:"loadoptions"},(0,l.kt)("inlineCode",{parentName:"h5"},"loadOptions")," (Object, optional)"),(0,l.kt)("p",null,"On top of the ",(0,l.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/layer#loadoptions"},"default options"),", also accepts options for the following loaders:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://loaders.gl/modules/gltf/docs/api-reference/gltf-loader"},"GLTFLoader")," if the ",(0,l.kt)("inlineCode",{parentName:"li"},"scenegraph")," prop is an URL")),(0,l.kt)("h3",{id:"render-options"},"Render Options"),(0,l.kt)("h5",{id:"sizescale"},(0,l.kt)("inlineCode",{parentName:"h5"},"sizeScale")," (Number, optional) ",(0,l.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Default ",(0,l.kt)("inlineCode",{parentName:"li"},"1"),".")),(0,l.kt)("p",null,"Multiplier to scale each geometry by."),(0,l.kt)("h5",{id:"_animations"},(0,l.kt)("inlineCode",{parentName:"h5"},"_animations")," (Object, optional)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Default ",(0,l.kt)("inlineCode",{parentName:"li"},"undefined"),". (No animations are running).")),(0,l.kt)("p",null,"An object used to configure animations playing. ",(0,l.kt)("em",{parentName:"p"},"keys")," can be one of the following:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"number")," for index number"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("em",{parentName:"li"},"name")," for animation name"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"*")," to affect all animations\nEach value is an object with:"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"playing")," (Boolean) default ",(0,l.kt)("inlineCode",{parentName:"li"},"true")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"speed")," (Number) speed multiplier, default ",(0,l.kt)("inlineCode",{parentName:"li"},"1"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"startTime")," (Number) start time, default ",(0,l.kt)("inlineCode",{parentName:"li"},"0"),".\nAnimations are parsed automatically from ",(0,l.kt)("inlineCode",{parentName:"li"},"glTF")," files.")),(0,l.kt)("h5",{id:"getscene"},(0,l.kt)("inlineCode",{parentName:"h5"},"getScene")," (Function, optional)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"scenegraph => (scenegraph && scenegraph.scenes ? scenegraph.scenes[0] : scenegraph)"))),(0,l.kt)("p",null,"If you have multiple scenes you can select the scene you want to use.\nOnly triggers when scenegraph property changes."),(0,l.kt)("h5",{id:"getanimator"},(0,l.kt)("inlineCode",{parentName:"h5"},"getAnimator")," (Function, optional)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"scenegraph => scenegraph && scenegraph.animator"))),(0,l.kt)("p",null,"Return ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," to disable animation or provide your custom animator.\nOnly triggers when scenegraph property changes."),(0,l.kt)("h5",{id:"_lighting"},(0,l.kt)("inlineCode",{parentName:"h5"},"_lighting")," (String, optional)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"flat"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Experimental")," lighting support, can be:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"flat"),": No light calculation. Works well with any textured object."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"pbr")," Uses ",(0,l.kt)("inlineCode",{parentName:"li"},"glTF")," PBR model. Works well with ",(0,l.kt)("inlineCode",{parentName:"li"},"glTF")," models.")),(0,l.kt)("p",null,"Only read when scenegraph property changes.\nUses ",(0,l.kt)("a",{parentName:"p",href:"/deck.gl/docs/developer-guide/using-lighting"},"global light configuration")," from deck."),(0,l.kt)("h5",{id:"_imagebasedlightingenvironment"},(0,l.kt)("inlineCode",{parentName:"h5"},"_imageBasedLightingEnvironment")," (Function or GLTFEnvironment, optional)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"null"))),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Experimental")," Can be:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A ",(0,l.kt)("inlineCode",{parentName:"li"},"GLTFEnvironment")," object."),(0,l.kt)("li",{parentName:"ul"},"A function that takes ",(0,l.kt)("inlineCode",{parentName:"li"},"{gl, layer}")," as first argument and returns a ",(0,l.kt)("inlineCode",{parentName:"li"},"GLTFEnvironment"),".")),(0,l.kt)("p",null,"Only read when scenegraph property changes."),(0,l.kt)("h3",{id:"data-accessors"},"Data Accessors"),(0,l.kt)("h5",{id:"getposition"},(0,l.kt)("inlineCode",{parentName:"h5"},"getPosition")," (",(0,l.kt)("a",{parentName:"h5",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Function"),", optional) ",(0,l.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"object => object.position"))),(0,l.kt)("p",null,"Method called to retrieve the center position for each object in the ",(0,l.kt)("inlineCode",{parentName:"p"},"data")," stream."),(0,l.kt)("h5",{id:"getcolor"},(0,l.kt)("inlineCode",{parentName:"h5"},"getColor")," (",(0,l.kt)("a",{parentName:"h5",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Function"),"|Array, optional) ",(0,l.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"[0, 0, 0, 255]"))),(0,l.kt)("p",null,"The rgba color is in the format of ",(0,l.kt)("inlineCode",{parentName:"p"},"[r, g, b, [a]]"),". Each channel is a number between 0-255 and ",(0,l.kt)("inlineCode",{parentName:"p"},"a")," is 255 if not supplied. Only used if ",(0,l.kt)("inlineCode",{parentName:"p"},"texture")," is empty."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If an array is provided, it is used as the color for all objects."),(0,l.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each object to retrieve its color.")),(0,l.kt)("h5",{id:"getorientation"},(0,l.kt)("inlineCode",{parentName:"h5"},"getOrientation")," (",(0,l.kt)("a",{parentName:"h5",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Function"),"|Array, optional)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"[0, 0, 0]"))),(0,l.kt)("p",null,"Object orientation defined as a vec3 of Euler angles, ",(0,l.kt)("inlineCode",{parentName:"p"},"[pitch, yaw, roll]")," in degrees. This will be composed with layer's ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/visgl/deck.gl/blob/master/docs/api-reference/core/layer.md#modelmatrix-number16-optional"},(0,l.kt)("inlineCode",{parentName:"a"},"modelMatrix")),"."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If an array is provided, it is used as the orientation for all objects."),(0,l.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each object to retrieve its orientation.")),(0,l.kt)("h5",{id:"getscale"},(0,l.kt)("inlineCode",{parentName:"h5"},"getScale")," (",(0,l.kt)("a",{parentName:"h5",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Function"),"|Array, optional)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"[1, 1, 1]"))),(0,l.kt)("p",null,"Scaling factor on the mesh along each axis."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If an array is provided, it is used as the scale for all objects."),(0,l.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each object to retrieve its scale.")),(0,l.kt)("h5",{id:"gettranslation"},(0,l.kt)("inlineCode",{parentName:"h5"},"getTranslation")," (",(0,l.kt)("a",{parentName:"h5",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Function"),"|Array, optional)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"[0, 0, 0]"))),(0,l.kt)("p",null,"Translation of the mesh along each axis. Offset from the center position given by ",(0,l.kt)("inlineCode",{parentName:"p"},"getPosition"),". ",(0,l.kt)("inlineCode",{parentName:"p"},"[x, y, z]")," in meters."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If an array is provided, it is used as the offset for all objects."),(0,l.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each object to retrieve its offset.")),(0,l.kt)("h5",{id:"gettransformmatrix"},(0,l.kt)("inlineCode",{parentName:"h5"},"getTransformMatrix")," (",(0,l.kt)("a",{parentName:"h5",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Function"),"|Array, optional)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"null"))),(0,l.kt)("p",null,"Explicitly define a 4x4 column-major model matrix for the mesh. If provided, will override\n",(0,l.kt)("inlineCode",{parentName:"p"},"getOrientation"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"getScale"),", ",(0,l.kt)("inlineCode",{parentName:"p"},"getTranslation"),". This will be composed with layer's ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/visgl/deck.gl/blob/master/docs/api-reference/core/layer.md#modelmatrix-number16-optional"},(0,l.kt)("inlineCode",{parentName:"a"},"modelMatrix")),"."),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"If an array is provided, it is used as the transform matrix for all objects."),(0,l.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each object to retrieve its transform matrix.")),(0,l.kt)("h5",{id:"sizeminpixels"},(0,l.kt)("inlineCode",{parentName:"h5"},"sizeMinPixels")," (Number, optional)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"0"))),(0,l.kt)("p",null,"The minimum size in pixels for one unit of the scene."),(0,l.kt)("h5",{id:"sizemaxpixels"},(0,l.kt)("inlineCode",{parentName:"h5"},"sizeMaxPixels")," (Number, optional)"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Default: ",(0,l.kt)("inlineCode",{parentName:"li"},"Number.MAX_SAFE_INTEGER"))),(0,l.kt)("p",null,"The maximum size in pixels for one unit of the scene."),(0,l.kt)("h2",{id:"source"},"Source"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://github.com/visgl/deck.gl/tree/master/modules/mesh-layers/src/scenegraph-layer"},"modules/mesh-layers/src/scenegraph-layer")))}m.isMDXComponent=!0}}]);
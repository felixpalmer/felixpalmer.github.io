"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[7538],{59021:(t,e,i)=>{i.d(e,{wG:()=>n,WZ:()=>N,GU:()=>Q,dj:()=>U,ct:()=>E,OT:()=>o,ap:()=>s,Ny:()=>r});const n={CLOCKWISE:1,COUNTER_CLOCKWISE:-1};function r(t,e,i={}){const n=function(t,e={}){return Math.sign(s(t,e))}(t,i);return n!==e&&(function(t,e){const{start:i=0,end:n=t.length,size:r=2}=e,s=(n-i)/r,o=Math.floor(s/2);for(let u=0;u<o;++u){const e=i+u*r,n=i+(s-1-u)*r;for(let i=0;i<r;++i){const r=t[e+i];t[e+i]=t[n+i],t[n+i]=r}}}(t,i),!0)}function s(t,e={}){const{start:i=0,end:n=t.length}=e,r=e.size||2;let s=0;for(let o=i,u=n-r;o<n;o+=r)s+=(t[o]-t[u])*(t[o+1]+t[u+1]),u=o;return s/2}function o(t,e,i=2,n){const r=e&&e.length,s=r?e[0]*i:t.length;let o=u(t,0,s,i,!0,n&&n[0]);const h=[];if(!o||o.next===o.prev)return h;let a,p,f,x,v,b,_;if(r&&(o=function(t,e,i,n,r){const s=[];let o,c,h,a,p;for(o=0,c=e.length;o<c;o++)h=e[o]*n,a=o<c-1?e[o+1]*n:t.length,p=u(t,h,a,n,!1,r&&r[o+1]),p===p.next&&(p.steiner=!0),s.push(y(p));for(s.sort(d),o=0;o<s.length;o++)g(s[o],i),i=l(i,i.next);return i}(t,e,o,i,n)),t.length>80*i){x=p=t[0],v=f=t[1];for(let e=i;e<s;e+=i)b=t[e],_=t[e+1],b<x&&(x=b),_<v&&(v=_),b>p&&(p=b),_>f&&(f=_);a=Math.max(p-x,f-v),a=0!==a?1/a:0}return c(o,h,i,x,v,a),h}function u(t,e,i,n,r,o){let u,l;if(void 0===o&&(o=s(t,{start:e,end:i,size:n})),r===o<0)for(u=e;u<i;u+=n)l=M(u,t[u],t[u+1],l);else for(u=i-n;u>=e;u-=n)l=M(u,t[u],t[u+1],l);return l&&k(l,l.next)&&(G(l),l=l.next),l}function l(t,e){if(!t)return t;e||(e=t);let i,n=t;do{if(i=!1,n.steiner||!k(n,n.next)&&0!==m(n.prev,n,n.next))n=n.next;else{if(G(n),n=e=n.prev,n===n.next)break;i=!0}}while(i||n!==e);return e}function c(t,e,i,n,r,s,o){if(!t)return;!o&&s&&function(t,e,i,n){let r=t;do{null===r.z&&(r.z=v(r.x,r.y,e,i,n)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==t);r.prevZ.nextZ=null,r.prevZ=null,function(t){let e,i,n,r,s,o,u,l,c=1;do{for(r=t,t=null,l=null,n=0;r;){for(n++,o=r,s=0,i=0;i<c&&(s++,o=o.nextZ,o);i++);for(u=c;s>0||u>0&&o;)0!==s&&(0===u||!o||r.z<=o.z)?(e=r,r=r.nextZ,s--):(e=o,o=o.nextZ,u--),l?l.nextZ=e:t=e,e.prevZ=l,l=e;r=o}l.nextZ=null,c*=2}while(n>1)}(r)}(t,n,r,s);let u,d,g=t;for(;t.prev!==t.next;)if(u=t.prev,d=t.next,s?a(t,n,r,s):h(t))e.push(u.i/i),e.push(t.i/i),e.push(d.i/i),G(t),t=d.next,g=d.next;else if((t=d)===g){o?1===o?c(t=p(l(t),e,i),e,i,n,r,s,2):2===o&&f(t,e,i,n,r,s):c(l(t),e,i,n,r,s,1);break}}function h(t){const e=t.prev,i=t,n=t.next;if(m(e,i,n)>=0)return!1;let r=t.next.next;for(;r!==t.prev;){if(b(e.x,e.y,i.x,i.y,n.x,n.y,r.x,r.y)&&m(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function a(t,e,i,n){const r=t.prev,s=t,o=t.next;if(m(r,s,o)>=0)return!1;const u=r.x<s.x?r.x<o.x?r.x:o.x:s.x<o.x?s.x:o.x,l=r.y<s.y?r.y<o.y?r.y:o.y:s.y<o.y?s.y:o.y,c=r.x>s.x?r.x>o.x?r.x:o.x:s.x>o.x?s.x:o.x,h=r.y>s.y?r.y>o.y?r.y:o.y:s.y>o.y?s.y:o.y,a=v(u,l,e,i,n),p=v(c,h,e,i,n);let f=t.prevZ,d=t.nextZ;for(;f&&f.z>=a&&d&&d.z<=p;){if(f!==t.prev&&f!==t.next&&b(r.x,r.y,s.x,s.y,o.x,o.y,f.x,f.y)&&m(f.prev,f,f.next)>=0)return!1;if(f=f.prevZ,d!==t.prev&&d!==t.next&&b(r.x,r.y,s.x,s.y,o.x,o.y,d.x,d.y)&&m(d.prev,d,d.next)>=0)return!1;d=d.nextZ}for(;f&&f.z>=a;){if(f!==t.prev&&f!==t.next&&b(r.x,r.y,s.x,s.y,o.x,o.y,f.x,f.y)&&m(f.prev,f,f.next)>=0)return!1;f=f.prevZ}for(;d&&d.z<=p;){if(d!==t.prev&&d!==t.next&&b(r.x,r.y,s.x,s.y,o.x,o.y,d.x,d.y)&&m(d.prev,d,d.next)>=0)return!1;d=d.nextZ}return!0}function p(t,e,i){let n=t;do{const r=n.prev,s=n.next.next;!k(r,s)&&C(r,n,n.next,s)&&B(r,s)&&B(s,r)&&(e.push(r.i/i),e.push(n.i/i),e.push(s.i/i),G(n),G(n.next),n=t=s),n=n.next}while(n!==t);return l(n)}function f(t,e,i,n,r,s){let o=t;do{let t=o.next.next;for(;t!==o.prev;){if(o.i!==t.i&&_(o,t)){let u=L(o,t);return o=l(o,o.next),u=l(u,u.next),c(o,e,i,n,r,s),void c(u,e,i,n,r,s)}t=t.next}o=o.next}while(o!==t)}function d(t,e){return t.x-e.x}function g(t,e){if(e=function(t,e){let i=e;const n=t.x,r=t.y;let s,o=-1/0;do{if(r<=i.y&&r>=i.next.y&&i.next.y!==i.y){const t=i.x+(r-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(t<=n&&t>o){if(o=t,t===n){if(r===i.y)return i;if(r===i.next.y)return i.next}s=i.x<i.next.x?i:i.next}}i=i.next}while(i!==e);if(!s)return null;if(n===o)return s;const u=s,l=s.x,c=s.y;let h,a=1/0;i=s;do{n>=i.x&&i.x>=l&&n!==i.x&&b(r<c?n:o,r,l,c,r<c?o:n,r,i.x,i.y)&&(h=Math.abs(r-i.y)/(n-i.x),B(i,t)&&(h<a||h===a&&(i.x>s.x||i.x===s.x&&x(s,i)))&&(s=i,a=h)),i=i.next}while(i!==u);return s}(t,e),e){const i=L(e,t);l(e,e.next),l(i,i.next)}}function x(t,e){return m(t.prev,t,e.prev)<0&&m(e.next,t,t.next)<0}function v(t,e,i,n,r){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*r)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*r)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function y(t){let e=t,i=t;do{(e.x<i.x||e.x===i.x&&e.y<i.y)&&(i=e),e=e.next}while(e!==t);return i}function b(t,e,i,n,r,s,o,u){return(r-o)*(e-u)-(t-o)*(s-u)>=0&&(t-o)*(n-u)-(i-o)*(e-u)>=0&&(i-o)*(s-u)-(r-o)*(n-u)>=0}function _(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let i=t;do{if(i.i!==t.i&&i.next.i!==t.i&&i.i!==e.i&&i.next.i!==e.i&&C(i,i.next,t,e))return!0;i=i.next}while(i!==t);return!1}(t,e)&&(B(t,e)&&B(e,t)&&function(t,e){let i=t,n=!1;const r=(t.x+e.x)/2,s=(t.y+e.y)/2;do{i.y>s!=i.next.y>s&&i.next.y!==i.y&&r<(i.next.x-i.x)*(s-i.y)/(i.next.y-i.y)+i.x&&(n=!n),i=i.next}while(i!==t);return n}(t,e)&&(m(t.prev,t,e.prev)||m(t,e.prev,e))||k(t,e)&&m(t.prev,t,t.next)>0&&m(e.prev,e,e.next)>0)}function m(t,e,i){return(e.y-t.y)*(i.x-e.x)-(e.x-t.x)*(i.y-e.y)}function k(t,e){return t.x===e.x&&t.y===e.y}function C(t,e,i,n){const r=w(m(t,e,i)),s=w(m(t,e,n)),o=w(m(i,n,t)),u=w(m(i,n,e));return r!==s&&o!==u||(!(0!==r||!A(t,i,e))||(!(0!==s||!A(t,n,e))||(!(0!==o||!A(i,t,n))||!(0!==u||!A(i,e,n)))))}function A(t,e,i){return e.x<=Math.max(t.x,i.x)&&e.x>=Math.min(t.x,i.x)&&e.y<=Math.max(t.y,i.y)&&e.y>=Math.min(t.y,i.y)}function w(t){return t>0?1:t<0?-1:0}function B(t,e){return m(t.prev,t,t.next)<0?m(t,e,t.next)>=0&&m(t,t.prev,e)>=0:m(t,e,t.prev)<0||m(t,t.next,e)<0}function L(t,e){const i=new I(t.i,t.x,t.y),n=new I(e.i,e.x,e.y),r=t.next,s=e.prev;return t.next=e,e.prev=t,i.next=r,r.prev=i,n.next=i,i.prev=n,s.next=n,n.prev=s,n}function M(t,e,i,n){const r=new I(t,e,i);return n?(r.next=n.next,r.prev=n,n.next.prev=r,n.next=r):(r.prev=r,r.next=r),r}function G(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function I(t,e,i){this.i=t,this.x=e,this.y=i,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function S(t,e,i,n,r=[]){let s,o;if(8&i)s=(n[3]-t[1])/(e[1]-t[1]),o=3;else if(4&i)s=(n[1]-t[1])/(e[1]-t[1]),o=1;else if(2&i)s=(n[2]-t[0])/(e[0]-t[0]),o=2;else{if(!(1&i))return null;s=(n[0]-t[0])/(e[0]-t[0]),o=0}for(let u=0;u<t.length;u++)r[u]=(1&o)===u?n[o]:s*(e[u]-t[u])+t[u];return r}function P(t,e){let i=0;return t[0]<e[0]?i|=1:t[0]>e[2]&&(i|=2),t[1]<e[1]?i|=4:t[1]>e[3]&&(i|=8),i}function R(t,e){const i=e.length,n=t.length;if(n>0){let r=!0;for(let s=0;s<i;s++)if(t[n-i+s]!==e[s]){r=!1;break}if(r)return!1}for(let r=0;r<i;r++)t[n+r]=e[r];return!0}function O(t,e){const i=e.length;for(let n=0;n<i;n++)t[n]=e[n]}function Z(t,e,i,n,r=[]){const s=n+e*i;for(let o=0;o<i;o++)r[o]=t[s+o];return r}function U(t,e){const{size:i=2,broken:n=!1,gridResolution:r=10,gridOffset:s=[0,0],startIndex:o=0,endIndex:u=t.length}=e||{},l=(u-o)/i;let c=[];const h=[c],a=Z(t,0,i,o);let p,f;const d=D(a,r,s,[]),g=[];R(c,a);for(let x=1;x<l;x++){for(p=Z(t,x,i,o,p),f=P(p,d);f;){S(a,p,f,d,g);const t=P(g,d);t&&(S(a,g,t,d,g),f=t),R(c,g),O(a,g),H(d,r,f),n&&c.length>i&&(c=[],h.push(c),R(c,a)),f=P(p,d)}R(c,p),O(a,p)}return n?h:h[0]}const z=0,V=1;function j(t,e){for(let i=0;i<e.length;i++)t.push(e[i]);return t}function N(t,e=null,i){if(!t.length)return[];const{size:n=2,gridResolution:r=10,gridOffset:s=[0,0],edgeTypes:o=!1}=i||{},u=[],l=[{pos:t,types:o?new Array(t.length/n).fill(V):null,holes:e||[]}],c=[[],[]];let h=[];for(;l.length;){const{pos:t,types:e,holes:i}=l.shift();T(t,n,i[0]||t.length,c),h=D(c[0],r,s,h);const a=P(c[1],h);if(a){let r=$(t,e,n,0,i[0]||t.length,h,a);const s={pos:r[0].pos,types:r[0].types,holes:[]},u={pos:r[1].pos,types:r[1].types,holes:[]};l.push(s,u);for(let l=0;l<i.length;l++)r=$(t,e,n,i[l],i[l+1]||t.length,h,a),r[0]&&(s.holes.push(s.pos.length),s.pos=j(s.pos,r[0].pos),o&&(s.types=j(s.types,r[0].types))),r[1]&&(u.holes.push(u.pos.length),u.pos=j(u.pos,r[1].pos),o&&(u.types=j(u.types,r[1].types)))}else{const n={positions:t};o&&(n.edgeTypes=e),i.length&&(n.holeIndices=i),u.push(n)}}return u}function $(t,e,i,n,r,s,o){const u=(r-n)/i,l=[],c=[],h=[],a=[],p=[];let f,d,g;const x=Z(t,u-1,i,n);let v=Math.sign(8&o?x[1]-s[3]:x[0]-s[2]),y=e&&e[u-1],b=0,_=0;for(let m=0;m<u;m++)f=Z(t,m,i,n,f),d=Math.sign(8&o?f[1]-s[3]:f[0]-s[2]),g=e&&e[n/i+m],d&&v&&v!==d&&(S(x,f,o,s,p),R(l,p)&&h.push(y),R(c,p)&&a.push(y)),d<=0?(R(l,f)&&h.push(g),b-=d):h.length&&(h[h.length-1]=z),d>=0?(R(c,f)&&a.push(g),_+=d):a.length&&(a[a.length-1]=z),O(x,f),v=d,y=g;return[b?{pos:l,types:e&&h}:null,_?{pos:c,types:e&&a}:null]}function D(t,e,i,n){const r=Math.floor((t[0]-i[0])/e)*e+i[0],s=Math.floor((t[1]-i[1])/e)*e+i[1];return n[0]=r,n[1]=s,n[2]=r+e,n[3]=s+e,n}function H(t,e,i){8&i?(t[1]+=e,t[3]+=e):4&i?(t[1]-=e,t[3]-=e):2&i?(t[0]+=e,t[2]+=e):1&i&&(t[0]-=e,t[2]-=e)}function T(t,e,i,n){let r=1/0,s=-1/0,o=1/0,u=-1/0;for(let l=0;l<i;l+=e){const e=t[l],i=t[l+1];r=e<r?e:r,s=e>s?e:s,o=i<o?i:o,u=i>u?i:u}return n[0][0]=r,n[0][1]=o,n[1][0]=s,n[1][1]=u,n}const F=85.051129;function E(t,e){const{size:i=2,startIndex:n=0,endIndex:r=t.length,normalize:s=!0}=e||{},o=t.slice(n,r);q(o,i,0,r-n);const u=U(o,{size:i,broken:!0,gridResolution:360,gridOffset:[-180,-180]});if(s)for(const l of u)K(l,i);return u}function Q(t,e=null,i){const{size:n=2,normalize:r=!0,edgeTypes:s=!1}=i||{};e=e||[];const o=[],u=[];let l=0,c=0;for(let a=0;a<=e.length;a++){const r=e[a]||t.length,s=c,h=W(t,n,l,r);for(let e=h;e<r;e++)o[c++]=t[e];for(let e=l;e<h;e++)o[c++]=t[e];q(o,n,s,c),X(o,n,s,c,null==i?void 0:i.maxLatitude),l=r,u[a]=c}u.pop();const h=N(o,u,{size:n,gridResolution:360,gridOffset:[-180,-180],edgeTypes:s});if(r)for(const a of h)K(a.positions,n);return h}function W(t,e,i,n){let r=-1,s=-1;for(let o=i+1;o<n;o+=e){const e=Math.abs(t[o]);e>r&&(r=e,s=o-1)}return s}function X(t,e,i,n,r=F){const s=t[i],o=t[n-e];if(Math.abs(s-o)>180){const n=Z(t,0,e,i);n[0]+=360*Math.round((o-s)/360),R(t,n),n[1]=Math.sign(n[1])*r,R(t,n),n[0]=s,R(t,n)}}function q(t,e,i,n){let r,s=t[0];for(let o=i;o<n;o+=e){r=t[o];const e=r-s;(e>180||e<-180)&&(r-=360*Math.round(e/360)),t[o]=s=r}}function K(t,e){let i;const n=t.length/e;for(let s=0;s<n&&(i=t[s*e],(i+180)%360==0);s++);const r=360*-Math.round(i/360);if(0!==r)for(let s=0;s<n;s++)t[s*e]+=r}},41708:(t,e,i)=>{i.d(e,{Z:()=>s});var n=i(41199),r=i(53563);class s{constructor(t){this.id=void 0,this.topology=void 0,this.vertexCount=void 0,this.indices=void 0,this.attributes=void 0,this.userData={};const{attributes:e={},indices:i=null,vertexCount:s=null}=t;this.id=t.id||(0,n.hQ)("geometry"),this.topology=t.topology,i&&(this.indices=ArrayBuffer.isView(i)?{value:i,size:1}:i),this.attributes={};for(const[n,o]of Object.entries(e)){const t=ArrayBuffer.isView(o)?{value:o}:o;(0,r.h)(ArrayBuffer.isView(t.value),`${this._print(n)}: must be typed array or object with value as typed array`),"POSITION"!==n&&"positions"!==n||t.size||(t.size=3),"indices"===n?((0,r.h)(!this.indices),this.indices=t):this.attributes[n]=t}this.indices&&void 0!==this.indices.isIndexed&&(this.indices=Object.assign({},this.indices),delete this.indices.isIndexed),this.vertexCount=s||this._calculateVertexCount(this.attributes,this.indices)}getVertexCount(){return this.vertexCount}getAttributes(){return this.indices?{indices:this.indices,...this.attributes}:this.attributes}_print(t){return`Geometry ${this.id} attribute ${t}`}_setAttributes(t,e){return this}_calculateVertexCount(t,e){if(e)return e.value.length;let i=1/0;for(const n of Object.values(t)){const{value:t,size:e,constant:r}=n;!r&&t&&e>=1&&(i=Math.min(i,t.length/e))}return(0,r.h)(Number.isFinite(i)),i}}},70138:(t,e,i)=>{i.d(e,{H:()=>d});var n=i(41199);function r(t,e,i){if(t===e)return!0;if(!i||!t||!e)return!1;if(Array.isArray(t)){if(!Array.isArray(e)||t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(!r(t[n],e[n],i-1))return!1;return!0}if(Array.isArray(e))return!1;if("object"==typeof t&&"object"==typeof e){const n=Object.keys(t),s=Object.keys(e);if(n.length!==s.length)return!1;for(const o of n){if(!e.hasOwnProperty(o))return!1;if(!r(t[o],e[o],i-1))return!1}return!0}return!1}var s=i(47407),o=i(34210),u=i(55866),l=i(65352),c=i(53563),h=i(63847);class a{constructor(t){this.id=void 0,this.userData={},this.topology=void 0,this.bufferLayout=[],this.vertexCount=void 0,this.indices=void 0,this.attributes=void 0,this.id=t.id||(0,n.hQ)("geometry"),this.topology=t.topology,this.indices=t.indices||null,this.attributes=t.attributes,this.vertexCount=t.vertexCount,this.bufferLayout=t.bufferLayout||[],this.indices&&(0,c.h)(this.indices.usage===h.l.INDEX)}destroy(){var t;this.indices.destroy(),this.attributes.positions.destroy(),this.attributes.normals.destroy(),this.attributes.texCoords.destroy(),null===(t=this.attributes.colors)||void 0===t||t.destroy()}getVertexCount(){return this.vertexCount}getAttributes(){return this.attributes}getIndexes(){return this.indices}_calculateVertexCount(t){return t.byteLength/12}}function p(t,e){if(e instanceof a)return e;const i=function(t,e){if(!e.indices)return;const i=e.indices.value;return t.createBuffer({usage:h.l.INDEX,data:i})}(t,e),{attributes:n,bufferLayout:r}=function(t,e){const i=[],n={};for(const[s,o]of Object.entries(e.attributes)){let e=s;switch(s){case"POSITION":e="positions";break;case"NORMAL":e="normals";break;case"TEXCOORD_0":e="texCoords"}n[e]=t.createBuffer({data:o.value,id:`${s}-buffer`}),i.push({name:e,format:`float32x${o.size}`})}const r=e._calculateVertexCount(e.attributes,e.indices);return{attributes:n,bufferLayout:i,vertexCount:r}}(t,e);return new a({topology:e.topology||"triangle-list",bufferLayout:r,vertexCount:e.vertexCount,indices:i,attributes:n})}var f=i(38908);class d{constructor(t,e){this.device=void 0,this.id=void 0,this.vs=void 0,this.fs=void 0,this.pipelineFactory=void 0,this.userData={},this.parameters=void 0,this.topology=void 0,this.bufferLayout=void 0,this.vertexCount=void 0,this.instanceCount=0,this.indexBuffer=null,this.bufferAttributes={},this.constantAttributes={},this.bindings={},this.uniforms={},this.pipeline=void 0,this.vertexArray=void 0,this._pipelineNeedsUpdate="newly created",this._attributeInfos={},this._gpuGeometry=null,this._getModuleUniforms=void 0,this.props=void 0,this.props={...d.defaultProps,...e},e=this.props,this.id=e.id||(0,n.hQ)("model"),this.device=t,Object.assign(this.userData,e.userData);const i={type:t.info.type,shaderLanguage:t.info.shadingLanguages[0],gpu:t.info.gpu,features:t.features},{vs:r,fs:s,getUniforms:o}=this.props.shaderAssembler.assembleShaders(i,this.props);if(this.vs=r,this.fs=s,this._getModuleUniforms=o,this.vertexCount=this.props.vertexCount,this.instanceCount=this.props.instanceCount,this.topology=this.props.topology,this.bufferLayout=this.props.bufferLayout,this.parameters=this.props.parameters,e.geometry&&(this._gpuGeometry=this.setGeometry(e.geometry)),this.pipelineFactory=e.pipelineFactory||f.g.getDefaultPipelineFactory(this.device),this.pipeline=this._updatePipeline(),this.vertexArray=t.createVertexArray({renderPipeline:this.pipeline}),this._gpuGeometry&&this._setGeometryAttributes(this._gpuGeometry),e.vertexCount&&this.setVertexCount(e.vertexCount),e.instanceCount&&this.setInstanceCount(e.instanceCount),e.indices)throw new Error("Model.props.indices removed. Use props.indexBuffer");e.indexBuffer&&this.setIndexBuffer(e.indexBuffer),e.attributes&&this.setAttributes(e.attributes),e.constantAttributes&&this.setConstantAttributes(e.constantAttributes),e.bindings&&this.setBindings(e.bindings),e.uniforms&&this.setUniforms(e.uniforms),e.moduleSettings&&this.updateModuleSettings(e.moduleSettings),this.setUniforms(this._getModuleUniforms()),Object.seal(this)}destroy(){this.pipelineFactory.release(this.pipeline)}draw(t){this.pipeline=this._updatePipeline(),this.pipeline.setBindings(this.bindings),this.pipeline.setUniforms(this.uniforms),this.pipeline.draw({renderPass:t,vertexArray:this.vertexArray,vertexCount:this.vertexCount,instanceCount:this.instanceCount})}setGeometry(t){const e=t&&p(this.device,t);return this.setTopology(e.topology||"triangle-list"),this.bufferLayout=g(this.bufferLayout,e.bufferLayout),this.vertexArray&&this._setGeometryAttributes(e),e}_setGeometryAttributes(t){this.vertexCount=t.vertexCount,this.setAttributes(t.attributes),this.setIndexBuffer(t.indices)}setTopology(t){t!==this.topology&&(this.topology=t,this._setPipelineNeedsUpdate("topology"))}setBufferLayout(t){this.bufferLayout=this._gpuGeometry?g(t,this._gpuGeometry.bufferLayout):t,this._setPipelineNeedsUpdate("bufferLayout"),this.pipeline=this._updatePipeline(),this.vertexArray=this.device.createVertexArray({renderPipeline:this.pipeline}),this._gpuGeometry&&this._setGeometryAttributes(this._gpuGeometry)}setParameters(t){r(t,this.parameters,2)||(this.parameters=t,this._setPipelineNeedsUpdate("parameters"))}setVertexCount(t){this.vertexCount=t}setInstanceCount(t){this.instanceCount=t}setShaderModuleProps(t){const e=this._getModuleUniforms(t);Object.assign(this.uniforms,e)}updateModuleSettings(t){this.setShaderModuleProps(t)}setBindings(t){Object.assign(this.bindings,t)}setUniforms(t){this.pipeline.setUniforms(t),Object.assign(this.uniforms,t)}setIndexBuffer(t){this.vertexArray.setIndexBuffer(t)}setAttributes(t){t.indices&&s.c.warn(`Model:${this.id} setAttributes() - indexBuffer should be set using setIndexBuffer()`);for(const[i,n]of Object.entries(t)){var e;const t=this.bufferLayout.find((t=>t.name===i));if(!t)continue;const r=t.attributes?null===(e=t.attributes)||void 0===e?void 0:e.map((t=>t.attribute)):[t.name];let o=!1;for(const e of r){const t=this._attributeInfos[e];t&&(this.vertexArray.setBuffer(t.location,n),o=!0)}o||s.c.warn(`Model(${this.id}): Ignoring buffer "${n.id}" for unknown attribute "${i}"`)()}}setConstantAttributes(t){for(const[e,i]of Object.entries(t)){const t=this._attributeInfos[e];t?this.vertexArray.setConstant(t.location,i):s.c.warn(`Model "${this.id}: Ignoring constant supplied for unknown attribute "${e}"`)()}}_setPipelineNeedsUpdate(t){this._pipelineNeedsUpdate=this._pipelineNeedsUpdate||t}_updatePipeline(){return this._pipelineNeedsUpdate&&(this.pipeline&&s.c.log(1,`Model ${this.id}: Recreating pipeline because "${this._pipelineNeedsUpdate}".`)(),this._pipelineNeedsUpdate=!1,this.pipeline=this.device.createRenderPipeline({...this.props,bufferLayout:this.bufferLayout,topology:this.topology,parameters:this.parameters,vs:this.device.createShader({id:"{$this.id}-vertex",stage:"vertex",source:this.vs}),fs:this.fs?this.device.createShader({id:"{$this.id}-fragment",stage:"fragment",source:this.fs}):null}),this._attributeInfos=(0,u.G5)(this.pipeline.shaderLayout,this.bufferLayout)),this.pipeline}}function g(t,e){const i=[...t];for(const n of e){const t=i.findIndex((t=>t.name===n.name));t<0?i.push(n):i[t]=n}return i}d.defaultProps={...o.h.defaultProps,vs:null,fs:null,id:"unnamed",handle:void 0,userData:{},defines:{},modules:[],moduleSettings:{},geometry:null,indexBuffer:null,attributes:{},constantAttributes:{},pipelineFactory:void 0,shaderAssembler:l.q.getDefaultShaderAssembler()}},7206:(t,e,i)=>{i.d(e,{q:()=>s});var n=i(27872);const r={pickingActive:!1,pickingAttribute:!1,pickingSelectedColor:null,pickingHighlightColor:new Uint8Array([0,255,255,255]),pickingColorRange:255};const s={name:"picking",vs:n.H`\
uniform bool picking_uActive;
uniform bool picking_uAttribute;
uniform vec3 picking_uSelectedColor;
uniform bool picking_uSelectedColorValid;
uniform float picking_uColorScale;

out vec4 picking_vRGBcolor_Avalid;

bool picking_isColorValid(vec3 color) {
  return dot(color, vec3(1.0)) > 0.001;
}

bool isVertexPicked(vec3 vertexColor) {
  return
    picking_uSelectedColorValid &&
    !picking_isColorValid(abs(vertexColor - picking_uSelectedColor));
}

void picking_setPickingColor(vec3 pickingColor) {
  if (picking_uActive) {
    // Use alpha as the validity flag. If pickingColor is [0, 0, 0] fragment is non-pickable
    picking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));

    // if (!picking_uAttribute) {
      // Stores the picking color so that the fragment shader can render it during picking
      picking_vRGBcolor_Avalid.rgb = pickingColor * picking_uColorScale;
    // }
  } else {
    // Do the comparison with selected item color in vertex shader as it should mean fewer compares
    picking_vRGBcolor_Avalid.a = float(isVertexPicked(pickingColor));
  }
}

void picking_setPickingAttribute(float value) {
  if (picking_uAttribute) {
    picking_vRGBcolor_Avalid.r = value;
  }
}
void picking_setPickingAttribute(vec2 value) {
  if (picking_uAttribute) {
    picking_vRGBcolor_Avalid.rg = value;
  }
}
void picking_setPickingAttribute(vec3 value) {
  if (picking_uAttribute) {
    picking_vRGBcolor_Avalid.rgb = value;
  }
}
`,fs:n.H`\
uniform bool picking_uActive;
uniform vec3 picking_uSelectedColor;
uniform vec4 picking_uHighlightColor;

in vec4 picking_vRGBcolor_Avalid;

/*
 * Returns highlight color if this item is selected.
 */
vec4 picking_filterHighlightColor(vec4 color) {
  if (picking_uActive) {
    return color;
  }
  bool selected = bool(picking_vRGBcolor_Avalid.a);

  if (selected) {
    float highLightAlpha = picking_uHighlightColor.a;
    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);
    float highLightRatio = highLightAlpha / blendedAlpha;

    vec3 blendedRGB = mix(color.rgb, picking_uHighlightColor.rgb, highLightRatio);
    return vec4(blendedRGB, blendedAlpha);
  } else {
    return color;
  }
}

/*
 * Returns picking color if picking enabled else unmodified argument.
 */
vec4 picking_filterPickingColor(vec4 color) {
  if (picking_uActive) {
    if (picking_vRGBcolor_Avalid.a == 0.0) {
      discard;
    }
    return picking_vRGBcolor_Avalid;
  }
  return color;
}

/*
 * Returns picking color if picking is enabled if not
 * highlight color if this item is selected, otherwise unmodified argument.
 */
vec4 picking_filterColor(vec4 color) {
  vec4 highightColor = picking_filterHighlightColor(color);
  return picking_filterPickingColor(highightColor);
}

`,getUniforms:function(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:r;const e={};if(void 0!==t.pickingActive&&(e.picking_uActive=Boolean(t.pickingActive),e.picking_uAttribute=Boolean(t.pickingAttribute)),void 0!==t.pickingSelectedColor)if(t.pickingSelectedColor){const i=t.pickingSelectedColor.slice(0,3);e.picking_uSelectedColorValid=1,e.picking_uSelectedColor=i}else e.picking_uSelectedColorValid=0;if(t.pickingHighlightColor){const i=Array.from(t.pickingHighlightColor,(t=>t/255));Number.isFinite(i[3])||(i[3]=1),e.picking_uHighlightColor=i}return t.pickingColorRange&&(e.picking_uColorScale=1/t.pickingColorRange),e}}}}]);
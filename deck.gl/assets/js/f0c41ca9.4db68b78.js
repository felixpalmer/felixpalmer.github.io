"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[7212],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var r=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var i=r.createContext({}),s=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):c(c({},t),e)),a},p=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(a),m=o,f=d["".concat(i,".").concat(m)]||d[m]||u[m]||n;return a?r.createElement(f,c(c({ref:t},p),{},{components:a})):r.createElement(f,c({ref:t},p))}));function f(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,c=new Array(n);c[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[d]="string"==typeof e?e:o,c[1]=l;for(var s=2;s<n;s++)c[s]=a[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},37408:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>n,metadata:()=>l,toc:()=>s});var r=a(83117),o=(a(67294),a(3905));const n={},c="@deck.gl/carto",l={unversionedId:"api-reference/carto/overview",id:"api-reference/carto/overview",title:"@deck.gl/carto",description:"Deck.gl is the preferred and official solution for creating modern geospatial web applications using CARTO Location Intelligence platform.",source:"@site/../docs/api-reference/carto/overview.md",sourceDirName:"api-reference/carto",slug:"/api-reference/carto/overview",permalink:"/deck.gl/docs/api-reference/carto/overview",draft:!1,editUrl:"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/carto/overview.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"loadArcGISModules",permalink:"/deck.gl/docs/api-reference/arcgis/load-arcgis-modules"},next:{title:"BASEMAP",permalink:"/deck.gl/docs/api-reference/carto/basemap"}},i={},s=[{value:"Install package",id:"install-package",level:2},{value:"Usage",id:"usage",level:2},{value:"Automatically create layers configured in CARTO Builder",id:"automatically-create-layers-configured-in-carto-builder",level:3},{value:"Custom layers connected to CARTO datasource",id:"custom-layers-connected-to-carto-datasource",level:3},{value:"Examples",id:"examples",level:3},{value:"CARTO Layers",id:"carto-layers",level:3},{value:"CARTO Data sources",id:"carto-data-sources",level:3},{value:"Authentication",id:"authentication",level:4},{value:"Support for other deck.gl layers",id:"support-for-other-deckgl-layers",level:3}],p={toc:s},d="wrapper";function u(e){let{components:t,...a}=e;return(0,o.kt)(d,(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"deckglcarto"},"@deck.gl/carto"),(0,o.kt)("p",null,"Deck.gl is the preferred and official solution for creating modern geospatial web applications using ",(0,o.kt)("a",{parentName:"p",href:"https://carto.com/"},"CARTO Location Intelligence platform"),"."),(0,o.kt)("p",null,"With deck.gl and the ",(0,o.kt)("strong",{parentName:"p"},"CARTO platform")," you can directly access spatial datasets and tilesets that are hosted in your current cloud data warehouse. CARTO provides seamless integrations with Google BigQuery, Amazon Redshift, Snowflake, Databricks and PostgreSQL-compatible databases, eliminating the need to move your data into CARTO."),(0,o.kt)("img",{src:"https://raw.githubusercontent.com/CartoDB/viz-doc/master/deck.gl/img/osm_buildings.jpg"}),(0,o.kt)("p",null,"The platform integrates with the CARTO Maps API to:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Provide a geospatial backend storage for your geospatial data."),(0,o.kt)("li",{parentName:"ul"},"Visualize large datasets overcoming browser memory limitations."),(0,o.kt)("li",{parentName:"ul"},"Provide an SQL spatial interface to work directly with your data.")),(0,o.kt)("img",{src:"https://raw.githubusercontent.com/CartoDB/viz-doc/master/deck.gl/img/eu_rivers.jpg"}),(0,o.kt)("h2",{id:"install-package"},"Install package"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install deck.gl\n# or\nnpm install @deck.gl/core @deck.gl/layers @deck.gl/geo-layers @deck.gl/carto\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("h3",{id:"automatically-create-layers-configured-in-carto-builder"},"Automatically create layers configured in CARTO Builder"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"import {Deck} from '@deck.gl/core';\nimport {fetchMap} from '@deck.gl/carto';\n\nconst cartoMapId = 'ff6ac53f-741a-49fb-b615-d040bc5a96b8';\nfetchMap({cartoMapId}).then(map => new Deck(map));\n")),(0,o.kt)("h3",{id:"custom-layers-connected-to-carto-datasource"},"Custom layers connected to CARTO datasource"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import DeckGL from '@deck.gl/react';\nimport {VectorTileLayer, vectorQuerySource} from '@deck.gl/carto';\n\nfunction App() {\n  const data = vectorQuerySource({\n    accessToken: 'XXX',\n    connectionName: 'carto_dw',\n    sqlQuery: 'SELECT * FROM cartobq.testtables.points_10k',\n  });\n\n  const layer = new VectorTileLayer({\n    data,\n    pointRadiusMinPixels: 2,\n    getLineColor: [0, 0, 0, 200],\n    getFillColor: [238, 77, 90],\n    lineWidthMinPixels: 1\n  });\n\n  return <DeckGL layers={[layer]} />;\n}\n")),(0,o.kt)("h3",{id:"examples"},"Examples"),(0,o.kt)("p",null,"You can view a collection of working examples on the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.carto.com/carto-for-developers/carto-for-deck.gl/examples"},"CARTO documentation website"),"."),(0,o.kt)("h3",{id:"carto-layers"},"CARTO Layers"),(0,o.kt)("p",null,"The CARTO module contains a number of custom layers which can be used to visualize the data, which work in conjunction with the ",(0,o.kt)("a",{parentName:"p",href:"#carto-data-sources"},"data source")," functions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/carto/h3-tile-layer"},"H3TileLayer")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/carto/quadbin-tile-layer"},"QuadbinTileLayer")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/carto/raster-tile-layer"},"RasterTileLayer")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/deck.gl/docs/api-reference/carto/vector-tile-layer"},"VectorTileLayer"))),(0,o.kt)("h3",{id:"carto-data-sources"},"CARTO Data sources"),(0,o.kt)("p",null,"There are a number of ",(0,o.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/carto/data-sources"},"data source functions")," for accessing data from the CARTO platform. These provide a simple way to fetch data from the CARTO platform, which can then be used with deck.gl layers."),(0,o.kt)("h4",{id:"authentication"},"Authentication"),(0,o.kt)("p",null,"When defining a ",(0,o.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/carto/data-sources"},"data source")," it is necessary to provide a:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"accessToken"),": token to ",(0,o.kt)("a",{parentName:"li",href:"https://docs.carto.com/carto-for-developers/key-concepts/authentication-methods"},"authenticate/authorize requests")," to the CARTO API,"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"connectionName"),": name of ",(0,o.kt)("a",{parentName:"li",href:"https://docs.carto.com/carto-for-developers/key-concepts/connections"},"connection")," configured in the CARTO platform.")),(0,o.kt)("h3",{id:"support-for-other-deckgl-layers"},"Support for other deck.gl layers"),(0,o.kt)("p",null,"The CARTO module includes a ",(0,o.kt)("a",{parentName:"p",href:"#carto-layers"},"collection of layers")," for easy visualization of data from the CARTO platfrom. For performace and scalability, this data is served as tiles."),(0,o.kt)("p",null,"It is also straightforward to request data directly using the CARTO ",(0,o.kt)("a",{parentName:"p",href:"https://docs.carto.com/carto-for-developers/key-concepts/apis#sql"},"SQL API"),". It can then be integrated with other deck.gl layers, for example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import DeckGL from '@deck.gl/react';\nimport {GeoJsonLayer} from '@deck.gl/layers';\nimport {query} from '@deck.gl/carto';\n\nfunction App() {\n  const data = query({\n    accessToken: 'XXX',\n    connectionName: 'carto_dw',\n    sqlQuery: 'SELECT * FROM cartobq.testtables.points_10k',\n  });\n\n  const layer = new ScatterplotLayer({\n    data,\n    dataTransform: data => data.rows,\n    getPosition: d => d.geom.coordinates,\n    getRadius: d => d.size\n  });\n\n  return <DeckGL layers={[layer]} />;\n}\n")))}u.isMDXComponent=!0}}]);
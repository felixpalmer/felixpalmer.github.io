"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[4663],{35983:(t,e,s)=>{function r(t){let e=1/0,s=1/0,r=1/0,i=-1/0,o=-1/0,n=-1/0;const a=t.POSITION?t.POSITION.value:[],l=a&&a.length;for(let c=0;c<l;c+=3){const t=a[c],l=a[c+1],h=a[c+2];e=t<e?t:e,s=l<s?l:s,r=h<r?h:r,i=t>i?t:i,o=l>o?l:o,n=h>n?h:n}return[[e,s,r],[i,o,n]]}s.d(e,{l:()=>r})},54663:(t,e,s)=>{s.d(e,{LF:()=>b});var r=s(35983);const i=/^[og]\s*(.+)?/,o=/^mtllib /,n=/^usemtl /;class a{constructor({index:t,name:e="",mtllib:s,smooth:r,groupStart:i}){this.index=t,this.name=e,this.mtllib=s,this.smooth=r,this.groupStart=i,this.groupEnd=-1,this.groupCount=-1,this.inherited=!1}clone(t=this.index){return new a({index:t,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0})}}class l{constructor(t=""){this.name=t,this.geometry={vertices:[],normals:[],colors:[],uvs:[]},this.materials=[],this.smooth=!0,this.fromDeclaration=null}startMaterial(t,e){const s=this._finalize(!1);s&&(s.inherited||s.groupCount<=0)&&this.materials.splice(s.index,1);const r=new a({index:this.materials.length,name:t,mtllib:Array.isArray(e)&&e.length>0?e[e.length-1]:"",smooth:void 0!==s?s.smooth:this.smooth,groupStart:void 0!==s?s.groupEnd:0});return this.materials.push(r),r}currentMaterial(){if(this.materials.length>0)return this.materials[this.materials.length-1]}_finalize(t){const e=this.currentMaterial();if(e&&-1===e.groupEnd&&(e.groupEnd=this.geometry.vertices.length/3,e.groupCount=e.groupEnd-e.groupStart,e.inherited=!1),t&&this.materials.length>1)for(let s=this.materials.length-1;s>=0;s--)this.materials[s].groupCount<=0&&this.materials.splice(s,1);return t&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),e}}class c{constructor(){this.objects=[],this.object=null,this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.materialLibraries=[],this.startObject("",!1)}startObject(t,e=!0){if(this.object&&!this.object.fromDeclaration)return this.object.name=t,void(this.object.fromDeclaration=e);const s=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object=new l(t),this.object.fromDeclaration=e,s&&s.name&&"function"==typeof s.clone){const t=s.clone(0);t.inherited=!0,this.object.materials.push(t)}this.objects.push(this.object)}finalize(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)}parseVertexIndex(t,e){const s=parseInt(t);return 3*(s>=0?s-1:s+e/3)}parseNormalIndex(t,e){const s=parseInt(t);return 3*(s>=0?s-1:s+e/3)}parseUVIndex(t,e){const s=parseInt(t);return 2*(s>=0?s-1:s+e/2)}addVertex(t,e,s){const r=this.vertices,i=this.object.geometry.vertices;i.push(r[t+0],r[t+1],r[t+2]),i.push(r[e+0],r[e+1],r[e+2]),i.push(r[s+0],r[s+1],r[s+2])}addVertexPoint(t){const e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])}addVertexLine(t){const e=this.vertices;this.object.geometry.vertices.push(e[t+0],e[t+1],e[t+2])}addNormal(t,e,s){const r=this.normals,i=this.object.geometry.normals;i.push(r[t+0],r[t+1],r[t+2]),i.push(r[e+0],r[e+1],r[e+2]),i.push(r[s+0],r[s+1],r[s+2])}addColor(t,e,s){const r=this.colors,i=this.object.geometry.colors;i.push(r[t+0],r[t+1],r[t+2]),i.push(r[e+0],r[e+1],r[e+2]),i.push(r[s+0],r[s+1],r[s+2])}addUV(t,e,s){const r=this.uvs,i=this.object.geometry.uvs;i.push(r[t+0],r[t+1]),i.push(r[e+0],r[e+1]),i.push(r[s+0],r[s+1])}addUVLine(t){const e=this.uvs;this.object.geometry.uvs.push(e[t+0],e[t+1])}addFace(t,e,s,r,i,o,n,a,l){const c=this.vertices.length;let h=this.parseVertexIndex(t,c),u=this.parseVertexIndex(e,c),m=this.parseVertexIndex(s,c);if(this.addVertex(h,u,m),void 0!==r&&""!==r){const t=this.uvs.length;h=this.parseUVIndex(r,t),u=this.parseUVIndex(i,t),m=this.parseUVIndex(o,t),this.addUV(h,u,m)}if(void 0!==n&&""!==n){const t=this.normals.length;h=this.parseNormalIndex(n,t),u=n===a?h:this.parseNormalIndex(a,t),m=n===l?h:this.parseNormalIndex(l,t),this.addNormal(h,u,m)}this.colors.length>0&&this.addColor(h,u,m)}addPointGeometry(t){this.object.geometry.type="Points";const e=this.vertices.length;for(const s of t)this.addVertexPoint(this.parseVertexIndex(s,e))}addLineGeometry(t,e){this.object.geometry.type="Line";const s=this.vertices.length,r=this.uvs.length;for(const i of t)this.addVertexLine(this.parseVertexIndex(i,s));for(const i of e)this.addUVLine(this.parseUVIndex(i,r))}}var h=s(91532);function u(t,e){const s={};for(const i in e)"value"!==i&&(s[i]=JSON.stringify(e[i]));let{type:r}=(0,h.IT)(e.value);return 1===e.size||void 0===e.size||(r={type:"fixed-size-list",listSize:e.size,children:[{name:"values",type:r}]}),{name:t,type:r,nullable:!1,metadata:s}}function m(t,e){const{meshes:s}=function(t){const e=new c;-1!==t.indexOf("\r\n")&&(t=t.replace(/\r\n/g,"\n")),-1!==t.indexOf("\\\n")&&(t=t.replace(/\\\n/g,""));const s=t.split("\n");let r="",a="",l=0,h=[];const u="function"==typeof"".trimLeft;for(let c=0,d=s.length;c<d;c++)if(r=s[c],r=u?r.trimLeft():r.trim(),l=r.length,0!==l&&(a=r.charAt(0),"#"!==a))if("v"===a){const t=r.split(/\s+/);switch(t[0]){case"v":e.vertices.push(parseFloat(t[1]),parseFloat(t[2]),parseFloat(t[3])),t.length>=7&&e.colors.push(parseFloat(t[4]),parseFloat(t[5]),parseFloat(t[6]));break;case"vn":e.normals.push(parseFloat(t[1]),parseFloat(t[2]),parseFloat(t[3]));break;case"vt":e.uvs.push(parseFloat(t[1]),parseFloat(t[2]))}}else if("f"===a){const t=r.substr(1).trim().split(/\s+/),s=[];for(let e=0,r=t.length;e<r;e++){const r=t[e];if(r.length>0){const t=r.split("/");s.push(t)}}const i=s[0];for(let r=1,o=s.length-1;r<o;r++){const t=s[r],o=s[r+1];e.addFace(i[0],t[0],o[0],i[1],t[1],o[1],i[2],t[2],o[2])}}else if("l"===a){const t=r.substring(1).trim().split(" ");let s;const i=[];if(-1===r.indexOf("/"))s=t;else{s=[];for(let e=0,r=t.length;e<r;e++){const r=t[e].split("/");""!==r[0]&&s.push(r[0]),""!==r[1]&&i.push(r[1])}}e.addLineGeometry(s,i)}else if("p"===a){const t=r.substr(1).trim().split(" ");e.addPointGeometry(t)}else if(null!==(h=i.exec(r))){const t=(" "+h[0].substr(1).trim()).substr(1);e.startObject(t)}else if(n.test(r))e.object.startMaterial(r.substring(7).trim(),e.materialLibraries);else if(o.test(r))e.materialLibraries.push(r.substring(7).trim());else{if("s"!==a){if("\0"===r)continue;throw new Error(`Unexpected line: "${r}"`)}{if(h=r.split(" "),h.length>1){const t=h[1].trim().toLowerCase();e.object.smooth="0"!==t&&"off"!==t}else e.object.smooth=!0;const t=e.object.currentMaterial();t&&(t.smooth=e.object.smooth)}}e.finalize();const m=[],p=[];for(const i of e.objects){const{geometry:t}=i;if(0===t.vertices.length)continue;const e={header:{vertexCount:t.vertices.length/3},attributes:{}};switch(t.type){case"Points":e.mode=0;break;case"Line":e.mode=1;break;default:e.mode=4}e.attributes.POSITION={value:new Float32Array(t.vertices),size:3},t.normals.length>0&&(e.attributes.NORMAL={value:new Float32Array(t.normals),size:3}),t.colors.length>0&&(e.attributes.COLOR_0={value:new Float32Array(t.colors),size:3}),t.uvs.length>0&&(e.attributes.TEXCOORD_0={value:new Float32Array(t.uvs),size:2}),e.materials=[];for(const s of i.materials){const t={name:s.name,flatShading:!s.smooth};e.materials.push(t),p.push(t)}e.name=i.name,m.push(e)}return{meshes:m,materials:p}}(t),a=s.reduce(((t,e)=>t+e.header.vertexCount),0),l=function(t,e){const s=new Float32Array(3*e);let r,i,o,n=0;for(const l of t){const{POSITION:t,NORMAL:a,COLOR_0:c,TEXCOORD_0:h}=l.attributes;s.set(t.value,3*n),a&&(r=r||new Float32Array(3*e),r.set(a.value,3*n)),c&&(i=i||new Float32Array(3*e),i.set(c.value,3*n)),h&&(o=o||new Float32Array(2*e),o.set(h.value,2*n)),n+=t.value.length/3}const a={};a.POSITION={value:s,size:3},r&&(a.NORMAL={value:r,size:3});i&&(a.COLOR_0={value:i,size:3});o&&(a.TEXCOORD_0={value:o,size:2});return a}(s,a),h={vertexCount:a,boundingBox:(0,r.l)(l)},m=function(t,e={}){const s={};for(const i in e)"value"!==i&&(s[i]=JSON.stringify(e[i]));const r=[];for(const i in t){const e=u(i,t[i]);r.push(e)}return{fields:r,metadata:s}}(l,{mode:4,boundingBox:h.boundingBox});return{loaderData:{header:{}},schema:m,header:h,mode:4,topology:"point-list",attributes:l}}const p=/\s+/;function d(t,e){const s=[];let r={name:"placeholder"};const i=t.split("\n");for(let o of i){if(o=o.trim(),0===o.length||"#"===o.charAt(0))continue;const t=o.indexOf(" ");let e=t>=0?o.substring(0,t):o;e=e.toLowerCase();let i=t>=0?o.substring(t+1):"";switch(i=i.trim(),e){case"newmtl":r={name:i},s.push(r);break;case"ka":r.ambientColor=f(i);break;case"kd":r.diffuseColor=f(i);break;case"map_kd":r.diffuseTextureUrl=i;break;case"ks":r.specularColor=f(i);break;case"map_ks":r.specularTextureUrl=i;break;case"ke":r.emissiveColor=f(i);break;case"map_ke":r.emissiveTextureUrl=i;break;case"ns":r.shininess=parseFloat(i);break;case"map_ns":default:break;case"ni":r.refraction=parseFloat(i);break;case"illum":r.illumination=parseFloat(i)}}return s}function f(t,e){const s=t.split(p,3);return[parseFloat(s[0]),parseFloat(s[1]),parseFloat(s[2])]}const b={...{dataType:null,batchType:null,name:"OBJ",id:"obj",module:"obj",version:"4.3.2",worker:!0,extensions:["obj"],mimeTypes:["text/plain"],testText:function(t){return"v"===t[0]},options:{obj:{}}},parse:async(t,e)=>m((new TextDecoder).decode(t)),parseTextSync:(t,e)=>m(t)}}}]);
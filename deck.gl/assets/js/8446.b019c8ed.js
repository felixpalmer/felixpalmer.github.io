"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[8446],{3905:(t,e,i)=>{i.d(e,{Zo:()=>d,kt:()=>f});var s=i(67294);function r(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}function n(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);e&&(s=s.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,s)}return i}function o(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?n(Object(i),!0).forEach((function(e){r(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):n(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}function u(t,e){if(null==t)return{};var i,s,r=function(t,e){if(null==t)return{};var i,s,r={},n=Object.keys(t);for(s=0;s<n.length;s++)i=n[s],e.indexOf(i)>=0||(r[i]=t[i]);return r}(t,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);for(s=0;s<n.length;s++)i=n[s],e.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(t,i)&&(r[i]=t[i])}return r}var a=s.createContext({}),h=function(t){var e=s.useContext(a),i=e;return t&&(i="function"==typeof t?t(e):o(o({},e),t)),i},d=function(t){var e=h(t.components);return s.createElement(a.Provider,{value:e},t.children)},p="mdxType",c={inlineCode:"code",wrapper:function(t){var e=t.children;return s.createElement(s.Fragment,{},e)}},l=s.forwardRef((function(t,e){var i=t.components,r=t.mdxType,n=t.originalType,a=t.parentName,d=u(t,["components","mdxType","originalType","parentName"]),p=h(i),l=r,f=p["".concat(a,".").concat(l)]||p[l]||c[l]||n;return i?s.createElement(f,o(o({ref:e},d),{},{components:i})):s.createElement(f,o({ref:e},d))}));function f(t,e){var i=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var n=i.length,o=new Array(n);o[0]=l;var u={};for(var a in e)hasOwnProperty.call(e,a)&&(u[a]=e[a]);u.originalType=t,u[p]="string"==typeof t?t:r,o[1]=u;for(var h=2;h<n;h++)o[h]=i[h];return s.createElement.apply(null,o)}return s.createElement.apply(null,i)}l.displayName="MDXCreateElement"},20745:(t,e,i)=>{var s=i(73935);e.s=s.createRoot,s.hydrateRoot},41708:(t,e,i)=>{i.d(e,{Z:()=>n});var s=i(41199),r=i(53563);class n{constructor(t){this.id=void 0,this.topology=void 0,this.vertexCount=void 0,this.indices=void 0,this.attributes=void 0,this.userData={};const{attributes:e={},indices:i=null,vertexCount:n=null}=t;this.id=t.id||(0,s.hQ)("geometry"),this.topology=t.topology,i&&(this.indices=ArrayBuffer.isView(i)?{value:i,size:1}:i),this.attributes={};for(const[s,o]of Object.entries(e)){const t=ArrayBuffer.isView(o)?{value:o}:o;(0,r.h)(ArrayBuffer.isView(t.value),`${this._print(s)}: must be typed array or object with value as typed array`),"POSITION"!==s&&"positions"!==s||t.size||(t.size=3),"indices"===s?((0,r.h)(!this.indices),this.indices=t):this.attributes[s]=t}this.indices&&void 0!==this.indices.isIndexed&&(this.indices=Object.assign({},this.indices),delete this.indices.isIndexed),this.vertexCount=n||this._calculateVertexCount(this.attributes,this.indices)}getVertexCount(){return this.vertexCount}getAttributes(){return this.indices?{indices:this.indices,...this.attributes}:this.attributes}_print(t){return`Geometry ${this.id} attribute ${t}`}_setAttributes(t,e){return this}_calculateVertexCount(t,e){if(e)return e.value.length;let i=1/0;for(const s of Object.values(t)){const{value:t,size:e,constant:r}=s;!r&&t&&e>=1&&(i=Math.min(i,t.length/e))}return(0,r.h)(Number.isFinite(i)),i}}},70138:(t,e,i)=>{i.d(e,{H:()=>f});var s=i(41199);function r(t,e,i){if(t===e)return!0;if(!i||!t||!e)return!1;if(Array.isArray(t)){if(!Array.isArray(e)||t.length!==e.length)return!1;for(let s=0;s<t.length;s++)if(!r(t[s],e[s],i-1))return!1;return!0}if(Array.isArray(e))return!1;if("object"==typeof t&&"object"==typeof e){const s=Object.keys(t),n=Object.keys(e);if(s.length!==n.length)return!1;for(const o of s){if(!e.hasOwnProperty(o))return!1;if(!r(t[o],e[o],i-1))return!1}return!0}return!1}var n=i(47407),o=i(34210),u=i(55866),a=i(65352),h=i(53563),d=i(63847);class p{constructor(t){this.id=void 0,this.userData={},this.topology=void 0,this.bufferLayout=[],this.vertexCount=void 0,this.indices=void 0,this.attributes=void 0,this.id=t.id||(0,s.hQ)("geometry"),this.topology=t.topology,this.indices=t.indices||null,this.attributes=t.attributes,this.vertexCount=t.vertexCount,this.bufferLayout=t.bufferLayout||[],this.indices&&(0,h.h)(this.indices.usage===d.l.INDEX)}destroy(){var t;this.indices.destroy(),this.attributes.positions.destroy(),this.attributes.normals.destroy(),this.attributes.texCoords.destroy(),null===(t=this.attributes.colors)||void 0===t||t.destroy()}getVertexCount(){return this.vertexCount}getAttributes(){return this.attributes}getIndexes(){return this.indices}_calculateVertexCount(t){return t.byteLength/12}}function c(t,e){if(e instanceof p)return e;const i=function(t,e){if(!e.indices)return;const i=e.indices.value;return t.createBuffer({usage:d.l.INDEX,data:i})}(t,e),{attributes:s,bufferLayout:r}=function(t,e){const i=[],s={};for(const[n,o]of Object.entries(e.attributes)){let e=n;switch(n){case"POSITION":e="positions";break;case"NORMAL":e="normals";break;case"TEXCOORD_0":e="texCoords"}s[e]=t.createBuffer({data:o.value,id:`${n}-buffer`}),i.push({name:e,format:`float32x${o.size}`})}const r=e._calculateVertexCount(e.attributes,e.indices);return{attributes:s,bufferLayout:i,vertexCount:r}}(t,e);return new p({topology:e.topology||"triangle-list",bufferLayout:r,vertexCount:e.vertexCount,indices:i,attributes:s})}var l=i(38908);class f{constructor(t,e){this.device=void 0,this.id=void 0,this.vs=void 0,this.fs=void 0,this.pipelineFactory=void 0,this.userData={},this.parameters=void 0,this.topology=void 0,this.bufferLayout=void 0,this.vertexCount=void 0,this.instanceCount=0,this.indexBuffer=null,this.bufferAttributes={},this.constantAttributes={},this.bindings={},this.uniforms={},this.pipeline=void 0,this.vertexArray=void 0,this._pipelineNeedsUpdate="newly created",this._attributeInfos={},this._gpuGeometry=null,this._getModuleUniforms=void 0,this.props=void 0,this.props={...f.defaultProps,...e},e=this.props,this.id=e.id||(0,s.hQ)("model"),this.device=t,Object.assign(this.userData,e.userData);const i={type:t.info.type,shaderLanguage:t.info.shadingLanguages[0],gpu:t.info.gpu,features:t.features},{vs:r,fs:n,getUniforms:o}=this.props.shaderAssembler.assembleShaders(i,this.props);if(this.vs=r,this.fs=n,this._getModuleUniforms=o,this.vertexCount=this.props.vertexCount,this.instanceCount=this.props.instanceCount,this.topology=this.props.topology,this.bufferLayout=this.props.bufferLayout,this.parameters=this.props.parameters,e.geometry&&(this._gpuGeometry=this.setGeometry(e.geometry)),this.pipelineFactory=e.pipelineFactory||l.g.getDefaultPipelineFactory(this.device),this.pipeline=this._updatePipeline(),this.vertexArray=t.createVertexArray({renderPipeline:this.pipeline}),this._gpuGeometry&&this._setGeometryAttributes(this._gpuGeometry),e.vertexCount&&this.setVertexCount(e.vertexCount),e.instanceCount&&this.setInstanceCount(e.instanceCount),e.indices)throw new Error("Model.props.indices removed. Use props.indexBuffer");e.indexBuffer&&this.setIndexBuffer(e.indexBuffer),e.attributes&&this.setAttributes(e.attributes),e.constantAttributes&&this.setConstantAttributes(e.constantAttributes),e.bindings&&this.setBindings(e.bindings),e.uniforms&&this.setUniforms(e.uniforms),e.moduleSettings&&this.updateModuleSettings(e.moduleSettings),this.setUniforms(this._getModuleUniforms()),Object.seal(this)}destroy(){this.pipelineFactory.release(this.pipeline)}draw(t){this.pipeline=this._updatePipeline(),this.pipeline.setBindings(this.bindings),this.pipeline.setUniforms(this.uniforms),this.pipeline.draw({renderPass:t,vertexArray:this.vertexArray,vertexCount:this.vertexCount,instanceCount:this.instanceCount})}setGeometry(t){const e=t&&c(this.device,t);return this.setTopology(e.topology||"triangle-list"),this.bufferLayout=y(this.bufferLayout,e.bufferLayout),this.vertexArray&&this._setGeometryAttributes(e),e}_setGeometryAttributes(t){this.vertexCount=t.vertexCount,this.setAttributes(t.attributes),this.setIndexBuffer(t.indices)}setTopology(t){t!==this.topology&&(this.topology=t,this._setPipelineNeedsUpdate("topology"))}setBufferLayout(t){this.bufferLayout=this._gpuGeometry?y(t,this._gpuGeometry.bufferLayout):t,this._setPipelineNeedsUpdate("bufferLayout"),this.pipeline=this._updatePipeline(),this.vertexArray=this.device.createVertexArray({renderPipeline:this.pipeline}),this._gpuGeometry&&this._setGeometryAttributes(this._gpuGeometry)}setParameters(t){r(t,this.parameters,2)||(this.parameters=t,this._setPipelineNeedsUpdate("parameters"))}setVertexCount(t){this.vertexCount=t}setInstanceCount(t){this.instanceCount=t}setShaderModuleProps(t){const e=this._getModuleUniforms(t);Object.assign(this.uniforms,e)}updateModuleSettings(t){this.setShaderModuleProps(t)}setBindings(t){Object.assign(this.bindings,t)}setUniforms(t){this.pipeline.setUniforms(t),Object.assign(this.uniforms,t)}setIndexBuffer(t){this.vertexArray.setIndexBuffer(t)}setAttributes(t){t.indices&&n.c.warn(`Model:${this.id} setAttributes() - indexBuffer should be set using setIndexBuffer()`);for(const[i,s]of Object.entries(t)){var e;const t=this.bufferLayout.find((t=>t.name===i));if(!t)continue;const r=t.attributes?null===(e=t.attributes)||void 0===e?void 0:e.map((t=>t.attribute)):[t.name];let o=!1;for(const e of r){const t=this._attributeInfos[e];t&&(this.vertexArray.setBuffer(t.location,s),o=!0)}o||n.c.warn(`Model(${this.id}): Ignoring buffer "${s.id}" for unknown attribute "${i}"`)()}}setConstantAttributes(t){for(const[e,i]of Object.entries(t)){const t=this._attributeInfos[e];t?this.vertexArray.setConstant(t.location,i):n.c.warn(`Model "${this.id}: Ignoring constant supplied for unknown attribute "${e}"`)()}}_setPipelineNeedsUpdate(t){this._pipelineNeedsUpdate=this._pipelineNeedsUpdate||t}_updatePipeline(){return this._pipelineNeedsUpdate&&(this.pipeline&&n.c.log(1,`Model ${this.id}: Recreating pipeline because "${this._pipelineNeedsUpdate}".`)(),this._pipelineNeedsUpdate=!1,this.pipeline=this.device.createRenderPipeline({...this.props,bufferLayout:this.bufferLayout,topology:this.topology,parameters:this.parameters,vs:this.device.createShader({id:"{$this.id}-vertex",stage:"vertex",source:this.vs}),fs:this.fs?this.device.createShader({id:"{$this.id}-fragment",stage:"fragment",source:this.fs}):null}),this._attributeInfos=(0,u.G5)(this.pipeline.shaderLayout,this.bufferLayout)),this.pipeline}}function y(t,e){const i=[...t];for(const s of e){const t=i.findIndex((t=>t.name===s.name));t<0?i.push(s):i[t]=s}return i}f.defaultProps={...o.h.defaultProps,vs:null,fs:null,id:"unnamed",handle:void 0,userData:{},defines:{},modules:[],moduleSettings:{},geometry:null,indexBuffer:null,attributes:{},constantAttributes:{},pipelineFactory:void 0,shaderAssembler:a.q.getDefaultShaderAssembler()}}}]);
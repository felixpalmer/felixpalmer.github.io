"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1339],{30819:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>a,frontMatter:()=>c,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"api-reference/test-utils/interaction-test-runner","title":"InteractionTestRunner","description":"Client-side utility for browser-based deck.gl interaction tests.","source":"@site/../docs/api-reference/test-utils/interaction-test-runner.md","sourceDirName":"api-reference/test-utils","slug":"/api-reference/test-utils/interaction-test-runner","permalink":"/deck.gl/docs/api-reference/test-utils/interaction-test-runner","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/test-utils/interaction-test-runner.md","tags":[],"version":"current","frontMatter":{}}');var r=s(74848),i=s(28453);const c={},l="InteractionTestRunner",d={},o=[{value:"Example",id:"example",level:2},{value:"Methods",id:"methods",level:2},{value:"constructor(props: Object)",id:"constructorprops-object",level:3},{value:"add(testCase: Array|object)",id:"addtestcase-arrayobject",level:3},{value:"run(options: Object)",id:"runoptions-object",level:3},{value:"Members",id:"members",level:2},{value:"isHeadless",id:"isheadless",level:3},{value:"Event",id:"event",level:2},{value:"keypress",id:"keypress",level:3},{value:"click",id:"click",level:3},{value:"mousemove",id:"mousemove",level:3},{value:"drag",id:"drag",level:3},{value:"wait",id:"wait",level:3}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"interactiontestrunner",children:"InteractionTestRunner"})}),"\n",(0,r.jsx)(n.p,{children:"Client-side utility for browser-based deck.gl interaction tests."}),"\n",(0,r.jsxs)(n.p,{children:["This class is intended to be used with ",(0,r.jsx)(n.code,{children:"BrowserTestDriver"})," from ",(0,r.jsx)(n.code,{children:"@probe.gl/test-utils"}),". Together they support the following workflow:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Launch a Puppeteer instance (headless or non-headless) to run a test application"}),"\n",(0,r.jsx)(n.li,{children:"In the test application, create a deck.gl canvas."}),"\n",(0,r.jsx)(n.li,{children:"For each test case, dispatch a sequence of keyboard/mouse events, and check the updated state."}),"\n",(0,r.jsx)(n.li,{children:"Proceed to the next test case until done."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsxs)(n.p,{children:["See ",(0,r.jsx)(n.a,{href:"/deck.gl/docs/api-reference/test-utils/snapshot-test-runner",children:"SnapshotTestRunner"})," for Node side set up instructions."]}),"\n",(0,r.jsx)(n.p,{children:"In your script that is run on the browser:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const {InteractionTestRunner} = require('@deck.gl/test-utils');\n\nconst TEST_CASES = [\n  {\n    name: 'MapController',\n    events: [\n      {type: 'drag', startX: 400, startY: 200, endX: 300, endY: 200, steps: 3}\n    ],\n    onBeforeEvents: ({deck}) => ({viewport: deck.getViewports[0]}),\n    onAfterEvents: ({deck, context}) => {\n      const oldViewport = context.viewport;\n      const newViewport = deck.getViewports[0];\n      t.ok(newViewport.longitude > oldViewport.longitude, 'map moved');\n    }\n  }\n];\n\nnew TestRender({\n  width: 800,\n  height: 600,\n  initialViewState: {\n    longitude: -122.4,\n    latitude: 37.8,\n    zoom: 12\n  },\n  controller: true\n})\n  .add(TEST_CASES)\n  .run()\n  .then(window.browserTestDriver_finish);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(n.h3,{id:"constructorprops-object",children:"constructor(props: Object)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"new InteractionTestRunner(deckProps)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Create a InteractionTestRunner instance. The ",(0,r.jsx)(n.code,{children:"deckProps"})," argument is passed to the ",(0,r.jsx)(n.a,{href:"/deck.gl/docs/api-reference/core/deck",children:"Deck"})," constructor."]}),"\n",(0,r.jsx)(n.h3,{id:"addtestcase-arrayobject",children:"add(testCase: Array|object)"}),"\n",(0,r.jsx)(n.p,{children:"Add one or a list of test cases. Each test case may contain the following fields:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (string) - name of the test case."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"events"})," (Array) - a sequence of inputs to dispatch. See ",(0,r.jsx)(n.a,{href:"#event",children:"Event"})," section below."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"onBeforeEvents"})," (Function, optional) - called before the events are dispatched. Receives the following arguments:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"deck"})," - the Deck instance."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"onAfterEvents"})," (Function, optional) - called after the events are dispatched. Receives the following arguments:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"deck"})," - the Deck instance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"layers"})," - the rendered layers."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"context"})," - the return value of ",(0,r.jsx)(n.code,{children:"onBeforeEvents"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"runoptions-object",children:"run(options: Object)"}),"\n",(0,r.jsx)(n.p,{children:"Run all test cases."}),"\n",(0,r.jsx)(n.p,{children:"Options:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"timeout"})," (number) - time to wait for each test case to resolve (by calling the ",(0,r.jsx)(n.code,{children:"done"})," callback) before aborting, in milliseconds. Default ",(0,r.jsx)(n.code,{children:"2000"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Returns: a ",(0,r.jsx)(n.code,{children:"Promise"})," that resolves when all test cases are done."]}),"\n",(0,r.jsx)(n.h2,{id:"members",children:"Members"}),"\n",(0,r.jsx)(n.h3,{id:"isheadless",children:"isHeadless"}),"\n",(0,r.jsx)(n.p,{children:"Whether the test is being run in headless mode. In headless mode, Chromium uses software render which behaves slightly differently from non-headless. Image diffing tolerance may need to be adjusted accordingly."}),"\n",(0,r.jsx)(n.h2,{id:"event",children:"Event"}),"\n",(0,r.jsx)(n.p,{children:"An event is a javascript descriptor of emulated user input. The following event types are supported:"}),"\n",(0,r.jsx)(n.h3,{id:"keypress",children:"keypress"}),"\n",(0,r.jsx)(n.p,{children:"Press a key on the keyboard."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"type: 'keypress'"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"key"})," (string) - see ",(0,r.jsx)(n.a,{href:"https://github.com/GoogleChrome/puppeteer/blob/master/lib/USKeyboardLayout.js",children:"https://github.com/GoogleChrome/puppeteer/blob/master/lib/USKeyboardLayout.js"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"delay"})," (number) - the time between keydown and keyup. Default ",(0,r.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"shiftKey"})," (boolean) - whether to press the key with the shift key down. Default ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ctrlKey"})," (boolean) - whether to press the key with the control key down. Default ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"metaKey"})," (boolean) - whether to press the key with the meta key down. Default ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"click",children:"click"}),"\n",(0,r.jsx)(n.p,{children:"Click the mouse at a given screen coordinate."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"type: 'click'"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"x"})," (number) - the screen x of the click."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"y"})," (number) - the screen y of the click."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"button"})," (string) - ",(0,r.jsx)(n.code,{children:"'left'"}),", ",(0,r.jsx)(n.code,{children:"'right'"})," or ",(0,r.jsx)(n.code,{children:"'middle'"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"delay"})," (number) - the time between mousedown and mouse up. Default ",(0,r.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"shiftKey"})," (boolean) - whether to click with the shift key pressed. Default ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ctrlKey"})," (boolean) - whether to click with the control key pressed. Default ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"metaKey"})," (boolean) - whether to click with the meta key pressed. Default ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"mousemove",children:"mousemove"}),"\n",(0,r.jsx)(n.p,{children:"Move the mouse to a given screen coordinate."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"type: 'mousemove'"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"x"})," (number) - the screen x to move the pointer to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"y"})," (number) - the screen y to move the pointer to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"steps"})," (number) - how many intermediate mousemove events to generate, default ",(0,r.jsx)(n.code,{children:"1"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"drag",children:"drag"}),"\n",(0,r.jsx)(n.p,{children:"Drag the mouse from a given screen coordinate to another."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"type: 'drag'"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"startX"})," (number) - the screen x to drag from."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"startY"})," (number) - the screen y to drag from."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"endX"})," (number) - the screen x to drag to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"endY"})," (number) - the screen y to drag to."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"button"})," (string) - ",(0,r.jsx)(n.code,{children:"'left'"}),", ",(0,r.jsx)(n.code,{children:"'right'"})," or ",(0,r.jsx)(n.code,{children:"'middle'"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"steps"})," (number) - how many intermediate mousemove events to generate, default ",(0,r.jsx)(n.code,{children:"1"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"shiftKey"})," (boolean) - whether to click with the shift key pressed. Default ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ctrlKey"})," (boolean) - whether to click with the control key pressed. Default ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"metaKey"})," (boolean) - whether to click with the meta key pressed. Default ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"wait",children:"wait"}),"\n",(0,r.jsx)(n.p,{children:"Idle for a given period of time before the next event."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"wait"})," (number) - the timeout in milliseconds."]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>l});var t=s(96540);const r={},i=t.createContext(r);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);
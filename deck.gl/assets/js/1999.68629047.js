"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1999],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var s=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,s)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,s,n=function(e,t){if(null==e)return{};var r,s,n={},o=Object.keys(e);for(s=0;s<o.length;s++)r=o[s],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)r=o[s],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=s.createContext({}),c=function(e){var t=s.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return s.createElement(l.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},m=s.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),h=c(r),m=n,f=h["".concat(l,".").concat(m)]||h[m]||p[m]||o;return r?s.createElement(f,i(i({ref:t},u),{},{components:r})):s.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[h]="string"==typeof e?e:n,i[1]=a;for(var c=2;c<o;c++)i[c]=r[c];return s.createElement.apply(null,i)}return s.createElement.apply(null,r)}m.displayName="MDXCreateElement"},78542:(e,t,r)=>{function s(e){let t=1/0,r=1/0,s=1/0,n=-1/0,o=-1/0,i=-1/0;const a=e.POSITION?e.POSITION.value:[],l=a&&a.length;for(let c=0;c<l;c+=3){const e=a[c],l=a[c+1],u=a[c+2];t=e<t?e:t,r=l<r?l:r,s=u<s?u:s,n=e>n?e:n,o=l>o?l:o,i=u>i?u:i}return[[t,r,s],[n,o,i]]}r.d(t,{v:()=>s})},10327:(e,t,r)=>{function s(e){let t=n(e);return"null"!==t?{type:t,nullable:!1}:e.length>0?(t=function(e){return e instanceof Date?"date-millisecond":e instanceof Number?arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32":"string"==typeof e?"utf8":"null"}(e[0]),{type:t,nullable:!0}):{type:"null",nullable:!0}}function n(e){switch(e.constructor){case Int8Array:return"int8";case Uint8Array:case Uint8ClampedArray:return"uint8";case Int16Array:return"int16";case Uint16Array:return"uint16";case Int32Array:return"int32";case Uint32Array:return"uint32";case Float32Array:return"float32";case Float64Array:return"float64";default:return"null"}}r.d(t,{C9:()=>n,gU:()=>s})},25825:(e,t,r)=>{r.d(t,{LU:()=>v});var s=r(78542);const n=/^[og]\s*(.+)?/,o=/^mtllib /,i=/^usemtl /;class a{constructor(e){let{index:t,name:r="",mtllib:s,smooth:n,groupStart:o}=e;this.index=t,this.name=r,this.mtllib=s,this.smooth=n,this.groupStart=o,this.groupEnd=-1,this.groupCount=-1,this.inherited=!1}clone(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.index;return new a({index:e,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0})}}class l{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";this.name=e,this.geometry={vertices:[],normals:[],colors:[],uvs:[]},this.materials=[],this.smooth=!0,this.fromDeclaration=null}startMaterial(e,t){const r=this._finalize(!1);r&&(r.inherited||r.groupCount<=0)&&this.materials.splice(r.index,1);const s=new a({index:this.materials.length,name:e,mtllib:Array.isArray(t)&&t.length>0?t[t.length-1]:"",smooth:void 0!==r?r.smooth:this.smooth,groupStart:void 0!==r?r.groupEnd:0});return this.materials.push(s),s}currentMaterial(){if(this.materials.length>0)return this.materials[this.materials.length-1]}_finalize(e){const t=this.currentMaterial();if(t&&-1===t.groupEnd&&(t.groupEnd=this.geometry.vertices.length/3,t.groupCount=t.groupEnd-t.groupStart,t.inherited=!1),e&&this.materials.length>1)for(let r=this.materials.length-1;r>=0;r--)this.materials[r].groupCount<=0&&this.materials.splice(r,1);return e&&0===this.materials.length&&this.materials.push({name:"",smooth:this.smooth}),t}}class c{constructor(){this.objects=[],this.object=null,this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.materialLibraries=[],this.startObject("",!1)}startObject(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(this.object&&!this.object.fromDeclaration)return this.object.name=e,void(this.object.fromDeclaration=t);const r=this.object&&"function"==typeof this.object.currentMaterial?this.object.currentMaterial():void 0;if(this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0),this.object=new l(e),this.object.fromDeclaration=t,r&&r.name&&"function"==typeof r.clone){const e=r.clone(0);e.inherited=!0,this.object.materials.push(e)}this.objects.push(this.object)}finalize(){this.object&&"function"==typeof this.object._finalize&&this.object._finalize(!0)}parseVertexIndex(e,t){const r=parseInt(e);return 3*(r>=0?r-1:r+t/3)}parseNormalIndex(e,t){const r=parseInt(e);return 3*(r>=0?r-1:r+t/3)}parseUVIndex(e,t){const r=parseInt(e);return 2*(r>=0?r-1:r+t/2)}addVertex(e,t,r){const s=this.vertices,n=this.object.geometry.vertices;n.push(s[e+0],s[e+1],s[e+2]),n.push(s[t+0],s[t+1],s[t+2]),n.push(s[r+0],s[r+1],s[r+2])}addVertexPoint(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])}addVertexLine(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])}addNormal(e,t,r){const s=this.normals,n=this.object.geometry.normals;n.push(s[e+0],s[e+1],s[e+2]),n.push(s[t+0],s[t+1],s[t+2]),n.push(s[r+0],s[r+1],s[r+2])}addColor(e,t,r){const s=this.colors,n=this.object.geometry.colors;n.push(s[e+0],s[e+1],s[e+2]),n.push(s[t+0],s[t+1],s[t+2]),n.push(s[r+0],s[r+1],s[r+2])}addUV(e,t,r){const s=this.uvs,n=this.object.geometry.uvs;n.push(s[e+0],s[e+1]),n.push(s[t+0],s[t+1]),n.push(s[r+0],s[r+1])}addUVLine(e){const t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])}addFace(e,t,r,s,n,o,i,a,l){const c=this.vertices.length;let u=this.parseVertexIndex(e,c),h=this.parseVertexIndex(t,c),p=this.parseVertexIndex(r,c);if(this.addVertex(u,h,p),void 0!==s&&""!==s){const e=this.uvs.length;u=this.parseUVIndex(s,e),h=this.parseUVIndex(n,e),p=this.parseUVIndex(o,e),this.addUV(u,h,p)}if(void 0!==i&&""!==i){const e=this.normals.length;u=this.parseNormalIndex(i,e),h=i===a?u:this.parseNormalIndex(a,e),p=i===l?u:this.parseNormalIndex(l,e),this.addNormal(u,h,p)}this.colors.length>0&&this.addColor(u,h,p)}addPointGeometry(e){this.object.geometry.type="Points";const t=this.vertices.length;for(const r of e)this.addVertexPoint(this.parseVertexIndex(r,t))}addLineGeometry(e,t){this.object.geometry.type="Line";const r=this.vertices.length,s=this.uvs.length;for(const n of e)this.addVertexLine(this.parseVertexIndex(n,r));for(const n of t)this.addUVLine(this.parseUVIndex(n,s))}}var u=r(10327);function h(e,t){const r={};for(const n in t)"value"!==n&&(r[n]=JSON.stringify(t[n]));let{type:s}=(0,u.gU)(t.value);return 1===t.size||void 0===t.size||(s={type:"fixed-size-list",listSize:t.size,children:[{name:"values",type:s}]}),{name:e,type:s,nullable:!1,metadata:r}}function p(e,t){const{meshes:r}=function(e){const t=new c;-1!==e.indexOf("\r\n")&&(e=e.replace(/\r\n/g,"\n")),-1!==e.indexOf("\\\n")&&(e=e.replace(/\\\n/g,""));const r=e.split("\n");let s="",a="",l=0,u=[];const h="function"==typeof"".trimLeft;for(let c=0,f=r.length;c<f;c++)if(s=r[c],s=h?s.trimLeft():s.trim(),l=s.length,0!==l&&(a=s.charAt(0),"#"!==a))if("v"===a){const e=s.split(/\s+/);switch(e[0]){case"v":t.vertices.push(parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3])),e.length>=7&&t.colors.push(parseFloat(e[4]),parseFloat(e[5]),parseFloat(e[6]));break;case"vn":t.normals.push(parseFloat(e[1]),parseFloat(e[2]),parseFloat(e[3]));break;case"vt":t.uvs.push(parseFloat(e[1]),parseFloat(e[2]))}}else if("f"===a){const e=s.substr(1).trim().split(/\s+/),r=[];for(let t=0,s=e.length;t<s;t++){const s=e[t];if(s.length>0){const e=s.split("/");r.push(e)}}const n=r[0];for(let s=1,o=r.length-1;s<o;s++){const e=r[s],o=r[s+1];t.addFace(n[0],e[0],o[0],n[1],e[1],o[1],n[2],e[2],o[2])}}else if("l"===a){const e=s.substring(1).trim().split(" ");let r;const n=[];if(-1===s.indexOf("/"))r=e;else{r=[];for(let t=0,s=e.length;t<s;t++){const s=e[t].split("/");""!==s[0]&&r.push(s[0]),""!==s[1]&&n.push(s[1])}}t.addLineGeometry(r,n)}else if("p"===a){const e=s.substr(1).trim().split(" ");t.addPointGeometry(e)}else if(null!==(u=n.exec(s))){const e=(" "+u[0].substr(1).trim()).substr(1);t.startObject(e)}else if(i.test(s))t.object.startMaterial(s.substring(7).trim(),t.materialLibraries);else if(o.test(s))t.materialLibraries.push(s.substring(7).trim());else{if("s"!==a){if("\0"===s)continue;throw new Error(`Unexpected line: "${s}"`)}{if(u=s.split(" "),u.length>1){const e=u[1].trim().toLowerCase();t.object.smooth="0"!==e&&"off"!==e}else t.object.smooth=!0;const e=t.object.currentMaterial();e&&(e.smooth=t.object.smooth)}}t.finalize();const p=[],m=[];for(const n of t.objects){const{geometry:e}=n;if(0===e.vertices.length)continue;const t={header:{vertexCount:e.vertices.length/3},attributes:{}};switch(e.type){case"Points":t.mode=0;break;case"Line":t.mode=1;break;default:t.mode=4}t.attributes.POSITION={value:new Float32Array(e.vertices),size:3},e.normals.length>0&&(t.attributes.NORMAL={value:new Float32Array(e.normals),size:3}),e.colors.length>0&&(t.attributes.COLOR_0={value:new Float32Array(e.colors),size:3}),e.uvs.length>0&&(t.attributes.TEXCOORD_0={value:new Float32Array(e.uvs),size:2}),t.materials=[];for(const r of n.materials){const e={name:r.name,flatShading:!r.smooth};t.materials.push(e),m.push(e)}t.name=n.name,p.push(t)}return{meshes:p,materials:m}}(e),a=r.reduce(((e,t)=>e+t.header.vertexCount),0),l=function(e,t){const r=new Float32Array(3*t);let s,n,o,i=0;for(const l of e){const{POSITION:e,NORMAL:a,COLOR_0:c,TEXCOORD_0:u}=l.attributes;r.set(e.value,3*i),a&&(s=s||new Float32Array(3*t),s.set(a.value,3*i)),c&&(n=n||new Float32Array(3*t),n.set(c.value,3*i)),u&&(o=o||new Float32Array(2*t),o.set(u.value,2*i)),i+=e.value.length/3}const a={};a.POSITION={value:r,size:3},s&&(a.NORMAL={value:s,size:3});n&&(a.COLOR_0={value:n,size:3});o&&(a.TEXCOORD_0={value:o,size:2});return a}(r,a),u={vertexCount:a,boundingBox:(0,s.v)(l)},p=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const r={};for(const n in t)"value"!==n&&(r[n]=JSON.stringify(t[n]));const s=[];for(const n in e){const t=h(n,e[n]);s.push(t)}return{fields:s,metadata:r}}(l,{mode:4,boundingBox:u.boundingBox});return{loaderData:{header:{}},schema:p,header:u,mode:4,topology:"point-list",attributes:l}}const m="undefined"!=typeof __VERSION__?__VERSION__:"latest";const f=/\s+/;function d(e,t){const r=[];let s={name:"placeholder"};const n=e.split("\n");for(let o of n){if(o=o.trim(),0===o.length||"#"===o.charAt(0))continue;const e=o.indexOf(" ");let t=e>=0?o.substring(0,e):o;t=t.toLowerCase();let n=e>=0?o.substring(e+1):"";switch(n=n.trim(),t){case"newmtl":s={name:n},r.push(s);break;case"ka":s.ambientColor=b(n);break;case"kd":s.diffuseColor=b(n);break;case"map_kd":s.diffuseTextureUrl=n;break;case"ks":s.specularColor=b(n);break;case"map_ks":s.specularTextureUrl=n;break;case"ke":s.emissiveColor=b(n);break;case"map_ke":s.emissiveTextureUrl=n;break;case"ns":s.shininess=parseFloat(n);break;case"map_ns":default:break;case"ni":s.refraction=parseFloat(n);break;case"illum":s.illumination=parseFloat(n)}}return r}function b(e,t){const r=e.split(f,3);return[parseFloat(r[0]),parseFloat(r[1]),parseFloat(r[2])]}const g="undefined"!=typeof __VERSION__?__VERSION__:"latest",v={...{name:"OBJ",id:"obj",module:"obj",version:m,worker:!0,extensions:["obj"],mimeTypes:["text/plain"],testText:function(e){return"v"===e[0]},options:{obj:{}}},parse:async(e,t)=>p((new TextDecoder).decode(e)),parseTextSync:(e,t)=>p(e)}}}]);
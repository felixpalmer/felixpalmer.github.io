"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[9516],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(a),u=n,h=c["".concat(s,".").concat(u)]||c[u]||m[u]||l;return a?r.createElement(h,i(i({ref:t},d),{},{components:a})):r.createElement(h,i({ref:t},d))}));function h(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:n,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},19365:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var r=a(83117),n=(a(67294),a(3905));const l={},i="SimpleMeshLayer",o={unversionedId:"api-reference/mesh-layers/simple-mesh-layer",id:"api-reference/mesh-layers/simple-mesh-layer",title:"SimpleMeshLayer",description:"The SimpleMeshLayer renders a number of instances of an arbitrary 3D geometry. For example, it can be used to visualize a fleet of 3d cars each with a position and an orientation over the map.",source:"@site/../docs/api-reference/mesh-layers/simple-mesh-layer.md",sourceDirName:"api-reference/mesh-layers",slug:"/api-reference/mesh-layers/simple-mesh-layer",permalink:"/deck.gl/docs/api-reference/mesh-layers/simple-mesh-layer",draft:!1,editUrl:"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/mesh-layers/simple-mesh-layer.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ScreenGridLayer",permalink:"/deck.gl/docs/api-reference/aggregation-layers/screen-grid-layer"},next:{title:"SolidPolygonLayer",permalink:"/deck.gl/docs/api-reference/layers/solid-polygon-layer"}},s={},p=[{value:"Installation",id:"installation",level:2},{value:"Properties",id:"properties",level:2},{value:"Mesh",id:"mesh",level:3},{value:"<code>mesh</code> (String|Geometry|Object)",id:"mesh",level:5},{value:"<code>texture</code> (String|Texture2D|Image|ImageData|HTMLCanvasElement|HTMLVideoElement|ImageBitmap|Promise|Object, optional)",id:"texture",level:5},{value:"<code>textureParameters</code> (Object)",id:"textureparameters",level:5},{value:"Render Options",id:"render-options",level:3},{value:"<code>sizeScale</code> (Number, optional) transition-enabled",id:"sizescale",level:5},{value:"<code>wireframe</code> (Boolean, optional)",id:"wireframe",level:5},{value:"<code>material</code> (Object, optional)",id:"material",level:5},{value:"<code>_useMeshColors</code> (Boolean, optional)",id:"_usemeshcolors",level:5},{value:"Data Accessors",id:"data-accessors",level:3},{value:"<code>getPosition</code> (Function, optional) transition-enabled",id:"getposition",level:5},{value:"<code>getColor</code> (Function|Array, optional) transition-enabled",id:"getcolor",level:5},{value:"<code>getOrientation</code> (Function|Array, optional)",id:"getorientation",level:5},{value:"<code>getScale</code> (Function|Array, optional)",id:"getscale",level:5},{value:"<code>getTranslation</code> (Function|Array, optional)",id:"gettranslation",level:5},{value:"<code>getTransformMatrix</code> (Function|Array, optional)",id:"gettransformmatrix",level:5},{value:"Source",id:"source",level:2}],d={toc:p},c="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(c,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"simplemeshlayer"},"SimpleMeshLayer"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"<SimpleMeshLayerDemo />\n")),(0,n.kt)("p",null,"The ",(0,n.kt)("inlineCode",{parentName:"p"},"SimpleMeshLayer")," renders a number of instances of an arbitrary 3D geometry. For example, it can be used to visualize a fleet of 3d cars each with a position and an orientation over the map."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"import DeckGL from '@deck.gl/react';\nimport {SimpleMeshLayer} from '@deck.gl/mesh-layers';\nimport {CubeGeometry} from '@luma.gl/core'\n\nfunction App({data, viewState}) {\n  /**\n   * Data format:\n   * [\n   *   {\n   *     position: [-122.45, 37.7],\n   *     angle: 0,\n   *     color: [255, 0, 0]\n   *   },\n   *   {\n   *     position: [-122.46, 37.73],\n   *     angle: 90,\n   *     color: [0, 255, 0]\n   *   },\n   *   ...\n   * ]\n   */\n  const layer = new SimpleMeshLayer({\n    id: 'mesh-layer',\n    data,\n    texture: 'texture.png',\n    mesh: new CubeGeometry(),\n    getPosition: d => d.position,\n    getColor: d => d.color,\n    getOrientation: d => [0, d.angle, 0]\n  });\n\n  return <DeckGL viewState={viewState} layers={[layer]} />;\n}\n")),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"loaders.gl")," offers a ",(0,n.kt)("a",{parentName:"p",href:"https://loaders.gl/docs/specifications/category-mesh"},"category")," of loaders for loading meshes from standard formats. For example, the following code adds support for OBJ files:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"import {SimpleMeshLayer} from '@deck.gl/mesh-layers';\nimport {OBJLoader} from '@loaders.gl/obj';\n\nnew SimpleMeshLayer({\n  ...\n  mesh: 'path/to/model.obj',\n  loaders: [OBJLoader]\n});\n")),(0,n.kt)("h2",{id:"installation"},"Installation"),(0,n.kt)("p",null,"To install the dependencies from NPM:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash"},"npm install deck.gl\n# or\nnpm install @deck.gl/core @deck.gl/mesh-layers\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"import {SimpleMeshLayer} from '@deck.gl/mesh-layers';\nnew SimpleMeshLayer({});\n")),(0,n.kt)("p",null,"To use pre-bundled scripts:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-html"},'<script src="https://unpkg.com/deck.gl@^8.0.0/dist.min.js"><\/script>\n\x3c!-- or --\x3e\n<script src="https://unpkg.com/@deck.gl/core@^8.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/mesh-layers@^8.0.0/dist.min.js"><\/script>\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"new deck.SimpleMeshLayer({});\n")),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("p",null,"Inherits from all ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/layer"},"Base Layer")," properties."),(0,n.kt)("h3",{id:"mesh"},"Mesh"),(0,n.kt)("h5",{id:"mesh"},(0,n.kt)("inlineCode",{parentName:"h5"},"mesh")," (String|Geometry|Object)"),(0,n.kt)("p",null,"The geometry to render for each data object. One of:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"An URL to a mesh description file in a format supported by ",(0,n.kt)("a",{parentName:"li",href:"https://loaders.gl/docs/specifications/category-mesh"},"loaders.gl"),". The appropriate loader will have to be registered via the loaders.gl ",(0,n.kt)("inlineCode",{parentName:"li"},"registerLoaders")," function for this usage."),(0,n.kt)("li",{parentName:"ul"},"A luma.gl ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/visgl/luma.gl/blob/8.5-release/modules/engine/docs/api-reference/geometry.md"},"Geometry")," instance"),(0,n.kt)("li",{parentName:"ul"},"An object containing the following fields:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"positions")," (Float32Array) - 3d vertex offset from the object center, in meters"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"normals")," (Float32Array) - 3d normals"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"texCoords")," (Float32Array) - 2d texture coordinates")))),(0,n.kt)("h5",{id:"texture"},(0,n.kt)("inlineCode",{parentName:"h5"},"texture")," (String|Texture2D|Image|ImageData|HTMLCanvasElement|HTMLVideoElement|ImageBitmap|Promise|Object, optional)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default ",(0,n.kt)("inlineCode",{parentName:"li"},"null"),".")),(0,n.kt)("p",null,"The texture of the geometries."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If a string is supplied, it is interpreted as a URL or a ",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs"},"Data URL"),"."),(0,n.kt)("li",{parentName:"ul"},"One of the following, or a Promise that resolves to one of the following:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"One of the valid ",(0,n.kt)("a",{parentName:"li",href:"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D"},"pixel sources for WebGL texture")),(0,n.kt)("li",{parentName:"ul"},"A luma.gl ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/visgl/luma.gl/blob/8.5-release/modules/webgl/docs/api-reference/texture-2d.md"},"Texture2D")," instance"),(0,n.kt)("li",{parentName:"ul"},"A plain object that can be passed to the ",(0,n.kt)("inlineCode",{parentName:"li"},"Texture2D")," constructor, e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"{width: <number>, height: <number>, data: <Uint8Array>}"),". Note that whenever this object shallowly changes, a new texture will be created.")))),(0,n.kt)("p",null,"The image data will be converted to a ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/visgl/luma.gl/blob/8.5-release/modules/webgl/docs/api-reference/texture-2d.md"},"Texture2D")," object. See ",(0,n.kt)("inlineCode",{parentName:"p"},"textureParameters")," prop for advanced customization."),(0,n.kt)("p",null,"If ",(0,n.kt)("inlineCode",{parentName:"p"},"texture")," is supplied, texture is used to render the geometries. Otherwise, object color obtained via the ",(0,n.kt)("inlineCode",{parentName:"p"},"getColor")," accessor is used."),(0,n.kt)("h5",{id:"textureparameters"},(0,n.kt)("inlineCode",{parentName:"h5"},"textureParameters")," (Object)"),(0,n.kt)("p",null,"Customize the ",(0,n.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter"},"texture parameters"),"."),(0,n.kt)("p",null,"If not specified, the layer uses the following defaults to create a linearly smoothed texture from ",(0,n.kt)("inlineCode",{parentName:"p"},"texture"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"{\n  [GL.TEXTURE_MIN_FILTER]: GL.LINEAR_MIPMAP_LINEAR,\n  [GL.TEXTURE_MAG_FILTER]: GL.LINEAR,\n  [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n  [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE\n}\n")),(0,n.kt)("h3",{id:"render-options"},"Render Options"),(0,n.kt)("h5",{id:"sizescale"},(0,n.kt)("inlineCode",{parentName:"h5"},"sizeScale")," (Number, optional) ",(0,n.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default ",(0,n.kt)("inlineCode",{parentName:"li"},"1"),".")),(0,n.kt)("p",null,"Multiplier to scale each geometry by."),(0,n.kt)("h5",{id:"wireframe"},(0,n.kt)("inlineCode",{parentName:"h5"},"wireframe")," (Boolean, optional)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"false"))),(0,n.kt)("p",null,"Whether to render the mesh in wireframe mode."),(0,n.kt)("h5",{id:"material"},(0,n.kt)("inlineCode",{parentName:"h5"},"material")," (Object, optional)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"true"))),(0,n.kt)("p",null,"This is an object that contains material props for ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/api-reference/core/lighting-effect"},"lighting effect")," applied on extruded polygons.\nCheck ",(0,n.kt)("a",{parentName:"p",href:"/deck.gl/docs/developer-guide/using-lighting#constructing-a-material-instance"},"the lighting guide")," for configurable settings."),(0,n.kt)("h5",{id:"_usemeshcolors"},(0,n.kt)("inlineCode",{parentName:"h5"},"_useMeshColors")," (Boolean, optional)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"false"))),(0,n.kt)("p",null,"Whether to color pixels using vertex colors supplied in the mesh (the ",(0,n.kt)("inlineCode",{parentName:"p"},"COLOR_0")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"colors")," attribute). If set to ",(0,n.kt)("inlineCode",{parentName:"p"},"true"),", vertex colors will be used. If set to ",(0,n.kt)("inlineCode",{parentName:"p"},"false")," (default) vertex colors will be ignored."),(0,n.kt)("p",null,"Remarks:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"In the next major release of deck.gl, vertex colors are expected to always be used when supplied with a mesh. This property will then likely be removed and effectively default to true.")),(0,n.kt)("h3",{id:"data-accessors"},"Data Accessors"),(0,n.kt)("h5",{id:"getposition"},(0,n.kt)("inlineCode",{parentName:"h5"},"getPosition")," (",(0,n.kt)("a",{parentName:"h5",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Function"),", optional) ",(0,n.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"object => object.position"))),(0,n.kt)("p",null,"Method called to retrieve the center position for each object in the ",(0,n.kt)("inlineCode",{parentName:"p"},"data")," stream."),(0,n.kt)("h5",{id:"getcolor"},(0,n.kt)("inlineCode",{parentName:"h5"},"getColor")," (",(0,n.kt)("a",{parentName:"h5",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Function"),"|Array, optional) ",(0,n.kt)("img",{parentName:"h5",src:"https://img.shields.io/badge/transition-enabled-green.svg?style=flat-square%22",alt:"transition-enabled"})),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"[0, 0, 0, 255]"))),(0,n.kt)("p",null,"If ",(0,n.kt)("inlineCode",{parentName:"p"},"mesh")," does not contain vertex colors, use this color to render each object. If ",(0,n.kt)("inlineCode",{parentName:"p"},"mesh")," contains vertex colors, then the two colors are mixed together. Use ",(0,n.kt)("inlineCode",{parentName:"p"},"[255, 255, 255]")," to use the original mesh colors. If ",(0,n.kt)("inlineCode",{parentName:"p"},"texture")," is assigned, then both colors will be ignored."),(0,n.kt)("p",null,"The color is in the format of ",(0,n.kt)("inlineCode",{parentName:"p"},"[r, g, b, [a]]"),". Each channel is a number between 0-255 and ",(0,n.kt)("inlineCode",{parentName:"p"},"a")," is 255 if not supplied."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If an array is provided, it is used as the color for all objects."),(0,n.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each object to retrieve its color.")),(0,n.kt)("h5",{id:"getorientation"},(0,n.kt)("inlineCode",{parentName:"h5"},"getOrientation")," (",(0,n.kt)("a",{parentName:"h5",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Function"),"|Array, optional)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"[0, 0, 0]"))),(0,n.kt)("p",null,"Object orientation defined as a vec3 of Euler angles, ",(0,n.kt)("inlineCode",{parentName:"p"},"[pitch, yaw, roll]")," in degrees. This will be composed with layer's ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/visgl/deck.gl/blob/master/docs/api-reference/core/layer.md#modelmatrix-number16-optional"},"modelMatrix"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If an array is provided, it is used as the orientation for all objects."),(0,n.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each object to retrieve its orientation.")),(0,n.kt)("h5",{id:"getscale"},(0,n.kt)("inlineCode",{parentName:"h5"},"getScale")," (",(0,n.kt)("a",{parentName:"h5",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Function"),"|Array, optional)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"[1, 1, 1]"))),(0,n.kt)("p",null,"Scaling factor on the mesh along each axis."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If an array is provided, it is used as the scale for all objects."),(0,n.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each object to retrieve its scale.")),(0,n.kt)("h5",{id:"gettranslation"},(0,n.kt)("inlineCode",{parentName:"h5"},"getTranslation")," (",(0,n.kt)("a",{parentName:"h5",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Function"),"|Array, optional)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"[0, 0, 0]"))),(0,n.kt)("p",null,"Translation of the mesh along each axis. Offset from the center position given by ",(0,n.kt)("inlineCode",{parentName:"p"},"getPosition"),". ",(0,n.kt)("inlineCode",{parentName:"p"},"[x, y, z]")," in meters. This will be composed with layer's ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/visgl/deck.gl/blob/master/docs/api-reference/core/layer.md#modelmatrix-number16-optional"},"modelMatrix"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If an array is provided, it is used as the offset for all objects."),(0,n.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each object to retrieve its offset.")),(0,n.kt)("h5",{id:"gettransformmatrix"},(0,n.kt)("inlineCode",{parentName:"h5"},"getTransformMatrix")," (",(0,n.kt)("a",{parentName:"h5",href:"/deck.gl/docs/developer-guide/using-layers#accessors"},"Function"),"|Array, optional)"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Default: ",(0,n.kt)("inlineCode",{parentName:"li"},"null"))),(0,n.kt)("p",null,"Explicitly define a 4x4 column-major model matrix for the mesh. If provided, will override\n",(0,n.kt)("inlineCode",{parentName:"p"},"getOrientation"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"getScale"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"getTranslation"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If an array is provided, it is used as the transform matrix for all objects."),(0,n.kt)("li",{parentName:"ul"},"If a function is provided, it is called on each object to retrieve its transform matrix.")),(0,n.kt)("h2",{id:"source"},"Source"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/visgl/deck.gl/tree/master/modules/mesh-layers/src/simple-mesh-layer"},"modules/mesh-layers/src/simple-mesh-layer")))}m.isMDXComponent=!0}}]);
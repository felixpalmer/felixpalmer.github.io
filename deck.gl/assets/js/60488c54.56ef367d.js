"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[1129],{18403:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"api-reference/extensions/data-filter-extension","title":"DataFilterExtension","description":"The DataFilterExtension adds GPU-based data filtering functionalities to layers. It allows the layer to show/hide objects based on user-defined properties. This extension provides a significantly more performant alternative to filtering the data array on the CPU.","source":"@site/../docs/api-reference/extensions/data-filter-extension.md","sourceDirName":"api-reference/extensions","slug":"/api-reference/extensions/data-filter-extension","permalink":"/deck.gl/docs/api-reference/extensions/data-filter-extension","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/extensions/data-filter-extension.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"CollisionFilterExtension","permalink":"/deck.gl/docs/api-reference/extensions/collision-filter-extension"},"next":{"title":"FillStyleExtension","permalink":"/deck.gl/docs/api-reference/extensions/fill-style-extension"}}');var r=i(74848),s=i(28453);const l={},o="DataFilterExtension",d={},a=[{value:"Installation",id:"installation",level:2},{value:"Constructor",id:"constructor",level:2},{value:"Layer Properties",id:"layer-properties",level:2},{value:"<code>getFilterValue</code> (Accessor&lt;number&gt;|Accessor&lt;number[]&gt;)",id:"getfiltervalue",level:4},{value:"<code>filterRange</code> (number[2] | number[2][])",id:"filterrange",level:4},{value:"<code>filterSoftRange</code> (number[2] | number[2][], optional)",id:"filtersoftrange",level:4},{value:"<code>getFilterCategory</code> (Accessor&lt;number | string&gt;|Accessor&lt;(number | string)[]&gt;, optional)",id:"getfiltercategory",level:4},{value:"<code>filterCategories</code> (string[] | string[][], optional)",id:"filtercategories",level:4},{value:"<code>filterTransformSize</code> (boolean, optional)",id:"filtertransformsize",level:4},{value:"<code>filterTransformColor</code> (boolean, optional)",id:"filtertransformcolor",level:4},{value:"<code>filterEnabled</code> (boolean, optional)",id:"filterenabled",level:4},{value:"<code>onFilteredItemsChange</code> (Function, optional)",id:"onfiltereditemschange",level:4},{value:"Remarks",id:"remarks",level:2},{value:"Filter precision",id:"filter-precision",level:3},{value:"Limitations",id:"limitations",level:2},{value:"Always supported:",id:"always-supported",level:3},{value:"Supported only when aggregation is performed on GPU:",id:"supported-only-when-aggregation-is-performed-on-gpu",level:3},{value:"Not supported:",id:"not-supported",level:3},{value:"Source",id:"source",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"datafilterextension",children:"DataFilterExtension"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"DataFilterExtension"})," adds GPU-based data filtering functionalities to layers. It allows the layer to show/hide objects based on user-defined properties. This extension provides a significantly more performant alternative to filtering the data array on the CPU."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:'Note: This extension does not work with all deck.gl layers. See "limitations" below.'}),"\n"]}),"\n",(0,r.jsx)("div",{style:{position:"relative",height:450}}),"\n",(0,r.jsx)("div",{style:{position:"absolute",transform:"translateY(-450px)",paddingLeft:"inherit",paddingRight:"inherit",left:0,right:0},children:(0,r.jsx)("iframe",{height:"450",style:{width:"100%"},scrolling:"no",title:"deck.gl DataFilterExtension",src:"https://codepen.io/vis-gl/embed/oNYbBMO?height=450&theme-id=light&default-tab=result",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true",children:(0,r.jsxs)(n.p,{children:["See the Pen ",(0,r.jsx)("a",{href:"https://codepen.io/vis-gl/pen/oNYbBMO",children:"deck.gl DataFilterExtension"})," by vis.gl\n(",(0,r.jsx)("a",{href:"https://codepen.io/vis-gl",children:"@vis-gl"}),") on ",(0,r.jsx)("a",{href:"https://codepen.io",children:"CodePen"}),"."]})})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import {GeoJsonLayer} from '@deck.gl/layers';\nimport {DataFilterExtension} from '@deck.gl/extensions';\n\nconst layer = new GeoJsonLayer({\n  id: 'geojson-layer',\n  data: GEOJSON,\n\n  // props from GeoJsonLayer\n  getFillColor: [160, 160, 180],\n  getLineColor: [0, 0, 0],\n  getLineWidth: 10,\n\n  // props added by DataFilterExtension\n  getFilterValue: f => f.properties.timeOfDay,  // in seconds\n  filterRange: [43200, 46800],  // 12:00 - 13:00\n\n  // Define extensions\n  extensions: [new DataFilterExtension({filterSize: 1})]\n});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.p,{children:"To install the dependencies from NPM:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install deck.gl\n# or\nnpm install @deck.gl/core @deck.gl/layers @deck.gl/extensions\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import {DataFilterExtension} from '@deck.gl/extensions';\nnew DataFilterExtension({});\n"})}),"\n",(0,r.jsx)(n.p,{children:"To use pre-bundled scripts:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<script src="https://unpkg.com/deck.gl@^9.0.0/dist.min.js"><\/script>\n\x3c!-- or --\x3e\n<script src="https://unpkg.com/@deck.gl/core@^9.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/layers@^9.0.0/dist.min.js"><\/script>\n<script src="https://unpkg.com/@deck.gl/extensions@^9.0.0/dist.min.js"><\/script>\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"new deck.DataFilterExtension({});\n"})}),"\n",(0,r.jsx)(n.h2,{id:"constructor",children:"Constructor"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"new DataFilterExtension({filterSize, fp64});\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"filterSize"})," (number) - the size of the filter (number of columns to filter by). The data filter can show/hide data based on 1-4 numeric properties of each object. Set to ",(0,r.jsx)(n.code,{children:"0"})," to disable numeric filtering. Default ",(0,r.jsx)(n.code,{children:"1"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"categorySize"})," (number) - the size of the category filter (number of columns to filter by). The category filter can show/hide data based on 1-4 properties of each object. Set to ",(0,r.jsx)(n.code,{children:"0"})," to disable category filtering. Default ",(0,r.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"fp64"})," (boolean) - if ",(0,r.jsx)(n.code,{children:"true"}),", use 64-bit precision instead of 32-bit. Default ",(0,r.jsx)(n.code,{children:"false"}),'. See the "remarks" section below for use cases and limitations.']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"countItems"})," (boolean) - if ",(0,r.jsx)(n.code,{children:"true"}),", reports the number of filtered objects with the ",(0,r.jsx)(n.code,{children:"onFilteredItemsChange"})," callback. Default ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"layer-properties",children:"Layer Properties"}),"\n",(0,r.jsxs)(n.p,{children:["When added to a layer via the ",(0,r.jsx)(n.code,{children:"extensions"})," prop, the ",(0,r.jsx)(n.code,{children:"DataFilterExtension"})," adds the following properties to the layer:"]}),"\n",(0,r.jsxs)(n.h4,{id:"getfiltervalue",children:[(0,r.jsx)(n.code,{children:"getFilterValue"})," (",(0,r.jsx)(n.a,{href:"/deck.gl/docs/developer-guide/using-layers#accessors",children:"Accessor<number>|Accessor<number[]>"}),")"]}),"\n",(0,r.jsxs)(n.p,{children:["Called to retrieve the value for each object that it will be filtered by. Returns either a number (if ",(0,r.jsx)(n.code,{children:"filterSize: 1"}),") or an array."]}),"\n",(0,r.jsx)(n.p,{children:"For example, consider data in the following format:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n  {"timestamp": 0.1, "coordinates": [-122.45, 37.78], "speed": 13.3},\n  ...\n]\n'})}),"\n",(0,r.jsx)(n.p,{children:"To filter by timestamp:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"new ScatterplotLayer({\n  data,\n  getPosition: d => d.coordinates,\n  getFilterValue: d => d.timestamp,\n  filterRange: [0, 1],\n  extensions: [new DataFilterExtension({filterSize: 1})]\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"To filter by both timestamp and speed:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"new ScatterplotLayer({\n  data,\n  getPosition: d => d.coordinates,\n  getFilterValue: d => [d.timestamp, d.speed],\n  filterRange: [[0, 1], [10, 20]],\n  extensions: [new DataFilterExtension({filterSize: 2})]\n})\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Note that all filtered values are uploaded as 32-bit floating numbers, so certain values e.g. raw unix epoch time may not be accurately represented. You may test the validity of a timestamp by calling ",(0,r.jsx)(n.code,{children:"Math.fround(t)"})," to check if there would be any loss of precision."]}),"\n",(0,r.jsxs)(n.h4,{id:"filterrange",children:[(0,r.jsx)(n.code,{children:"filterRange"})," (number[2] | number[2][])"]}),"\n",(0,r.jsx)(n.p,{children:"The bounds which defines whether an object should be rendered. If an object's filtered value is within the bounds, the object will be rendered; otherwise it will be hidden. This prop can be updated on user input or animation with very little cost."}),"\n",(0,r.jsx)(n.p,{children:"Format:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"filterSize"})," is ",(0,r.jsx)(n.code,{children:"1"}),": ",(0,r.jsx)(n.code,{children:"[min, max]"})]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"filterSize"})," is ",(0,r.jsx)(n.code,{children:"2"})," to ",(0,r.jsx)(n.code,{children:"4"}),": ",(0,r.jsx)(n.code,{children:"[[min0, max0], [min1, max1], ...]"})," for each filtered property, respectively."]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"filtersoftrange",children:[(0,r.jsx)(n.code,{children:"filterSoftRange"})," (number[2] | number[2][], optional)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Default: ",(0,r.jsx)(n.code,{children:"null"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["If specified, objects will be faded in/out instead of abruptly shown/hidden. When the filtered value is outside of the bounds defined by ",(0,r.jsx)(n.code,{children:"filterSoftRange"})," but still within the bounds defined by ",(0,r.jsx)(n.code,{children:"filterRange"}),', the object will be rendered as "faded." See ',(0,r.jsx)(n.code,{children:"filterTransformSize"})," and ",(0,r.jsx)(n.code,{children:"filterTransformColor"})," for additional control over this behavior."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"new ScatterplotLayer({\n  data,\n  getPosition: d => d.coordinates,\n  getFilterValue: d => d.timestamp,\n  filterRange: [0, 1],\n  filterSoftRange: [0.2, 0.8],\n  filterTransformSize: true,\n  filterTransformColor: true,\n  extensions: [new DataFilterExtension({filterSize: 1})]\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"Format:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"filterSize"})," is ",(0,r.jsx)(n.code,{children:"1"}),": ",(0,r.jsx)(n.code,{children:"[softMin, softMax]"})]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"filterSize"})," is ",(0,r.jsx)(n.code,{children:"2"})," to ",(0,r.jsx)(n.code,{children:"4"}),": ",(0,r.jsx)(n.code,{children:"[[softMin0, softMax0], [softMin1, softMax1], ...]"})," for each filtered property, respectively."]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"getfiltercategory",children:[(0,r.jsx)(n.code,{children:"getFilterCategory"})," (",(0,r.jsx)(n.a,{href:"/deck.gl/docs/developer-guide/using-layers#accessors",children:"Accessor<number | string>|Accessor<(number | string)[]>"}),", optional)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Default: ",(0,r.jsx)(n.code,{children:"0"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Called to retrieve the category for each object that it will be filtered by. Returns either a category as a number or string (if ",(0,r.jsx)(n.code,{children:"categorySize: 1"}),") or an array."]}),"\n",(0,r.jsx)(n.p,{children:"For example, consider data in the following format:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\n  {"industry": "retail", "coordinates": [-122.45, 37.78], "size": 10},\n  ...\n]\n'})}),"\n",(0,r.jsx)(n.p,{children:"To filter by industry:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"new ScatterplotLayer({\n  data,\n  getPosition: d => d.coordinates,\n  getFilterCategory: d => d.industry,\n  filterCategories: ['retail', 'health'],\n  extensions: [new DataFilterExtension({categorySize: 1})]\n})\n"})}),"\n",(0,r.jsx)(n.p,{children:"To filter by both industry and size:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"new ScatterplotLayer({\n  data,\n  getPosition: d => d.coordinates,\n  getFilterCategory: d => [d.industry, d.size],\n  filterCategories: [['retail', 'health'], [10, 20, 50]],\n  extensions: [new DataFilterExtension({categorySize: 2})]\n})\n"})}),"\n",(0,r.jsxs)(n.h4,{id:"filtercategories",children:[(0,r.jsx)(n.code,{children:"filterCategories"})," (string[] | string[][], optional)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Default: ",(0,r.jsx)(n.code,{children:"[0]"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The list of categories that should be rendered. If an object's filtered category is in the list, the object will be rendered; otherwise it will be hidden. This prop can be updated on user input or animation with very little cost."}),"\n",(0,r.jsx)(n.p,{children:"Format:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"categorySize"})," is ",(0,r.jsx)(n.code,{children:"1"}),": ",(0,r.jsx)(n.code,{children:"['category1', 'category2']"})]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"categorySize"})," is ",(0,r.jsx)(n.code,{children:"2"})," to ",(0,r.jsx)(n.code,{children:"4"}),": ",(0,r.jsx)(n.code,{children:"[['category1', 'category2', ...], ['category3', ...], ...]"})," for each filtered property, respectively."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The maximum number of supported is determined by the ",(0,r.jsx)(n.code,{children:"categorySize"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"categorySize"})," is ",(0,r.jsx)(n.code,{children:"1"}),": 128 categories"]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"categorySize"})," is ",(0,r.jsx)(n.code,{children:"2"}),": 64 categories per dimension"]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"categorySize"})," is ",(0,r.jsx)(n.code,{children:"3"})," or ",(0,r.jsx)(n.code,{children:"4"}),": 32 categories per dimension"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"If this value is exceeded any categories beyond the limit will be ignored."}),"\n",(0,r.jsxs)(n.h4,{id:"filtertransformsize",children:[(0,r.jsx)(n.code,{children:"filterTransformSize"})," (boolean, optional)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Default: ",(0,r.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:['When an object is "faded", manipulate its size so that it appears smaller or thinner. Only works if ',(0,r.jsx)(n.code,{children:"filterSoftRange"})," is specified."]}),"\n",(0,r.jsxs)(n.h4,{id:"filtertransformcolor",children:[(0,r.jsx)(n.code,{children:"filterTransformColor"})," (boolean, optional)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Default: ",(0,r.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:['When an object is "faded", manipulate its opacity so that it appears more translucent. Only works if ',(0,r.jsx)(n.code,{children:"filterSoftRange"})," is specified."]}),"\n",(0,r.jsxs)(n.h4,{id:"filterenabled",children:[(0,r.jsx)(n.code,{children:"filterEnabled"})," (boolean, optional)"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Default: ",(0,r.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Enable/disable the data filter. If the data filter is disabled, all objects are rendered."}),"\n",(0,r.jsxs)(n.h4,{id:"onfiltereditemschange",children:[(0,r.jsx)(n.code,{children:"onFilteredItemsChange"})," (Function, optional)"]}),"\n",(0,r.jsxs)(n.p,{children:["Only used if the ",(0,r.jsx)(n.code,{children:"countItems"})," option is enabled. Called with the following arguments when the filter changes:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"event"})," (object)","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"id"})," (string) - the id of the source layer. Note when this prop is specified on a ",(0,r.jsx)(n.a,{href:"/deck.gl/docs/api-reference/core/composite-layer",children:"CompositeLayer"}),", such as ",(0,r.jsx)(n.code,{children:"GeoJsonLayer"}),", the callback is called once by each sub layer."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"count"})," (number) - the number of data objects that pass the filter."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"remarks",children:"Remarks"}),"\n",(0,r.jsx)(n.h3,{id:"filter-precision",children:"Filter precision"}),"\n",(0,r.jsxs)(n.p,{children:["By default, both the filter values and the filter range are uploaded to the GPU as 32-bit floats. When using very large filter values, most commonly Epoch timestamps, 32-bit float representation could lead to an error margin of >1 minute. Enabling 64-bit precision by setting ",(0,r.jsx)(n.code,{children:"fp64: true"})," would allow the filter range to be evaluated more accurately. However, 64-bit support requires one extra attribute slot, which increases the risk of exceeding the hardware limit on vertex attributes. Depending on the layer that the ",(0,r.jsx)(n.code,{children:"DataFilterExtension"})," is used with, it may interfere with the layer's ability to use other extensions."]}),"\n",(0,r.jsx)(n.p,{children:'If this becomes an issue, an alternative technique is to transform each filter value by subtracting a fixed "origin" value, thus making the numbers smaller:'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"getFilterValue: d => d.timestamp - ORIGIN_TS,\nfilterRange: [rangeStart - ORIGIN_TS, rangeEnd - ORIGIN_TS]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["32-bit floats can accurately represent each second within ~190 days (",(0,r.jsx)(n.code,{children:"2^24"}),"). Unless the filter values require both a large span and fine granularity, 32-bit floats should be sufficient."]}),"\n",(0,r.jsx)(n.h2,{id:"limitations",children:"Limitations"}),"\n",(0,r.jsxs)(n.p,{children:["Given data filtering happens on GPU, not all layers of ",(0,r.jsx)(n.code,{children:"@deck.gl/aggregation-layers"})," module, support this feature."]}),"\n",(0,r.jsx)(n.h3,{id:"always-supported",children:"Always supported:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"HeatMapLayer"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"GPUGridLayer"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"supported-only-when-aggregation-is-performed-on-gpu",children:"Supported only when aggregation is performed on GPU:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"ScreenGridlayer"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"ContourLayer"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"GridLayer"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"not-supported",children:"Not supported:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"CPUGridLayer"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"HexagonLayer"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"source",children:"Source"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://github.com/visgl/deck.gl/tree/master/modules/extensions/src/data-filter",children:"modules/extensions/src/data-filter"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var t=i(96540);const r={},s=t.createContext(r);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[8243],{93377:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"api-reference/widgets/geocoder-widget","title":"GeocoderWidget","description":"The GeocoderWidget helps the user find positions on the map.","source":"@site/../docs/api-reference/widgets/geocoder-widget.md","sourceDirName":"api-reference/widgets","slug":"/api-reference/widgets/geocoder-widget","permalink":"/deck.gl/docs/api-reference/widgets/geocoder-widget","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/widgets/geocoder-widget.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"FullscreenWidget","permalink":"/deck.gl/docs/api-reference/widgets/fullscreen-widget"},"next":{"title":"GimbalWidget","permalink":"/deck.gl/docs/api-reference/widgets/gimbal-widget"}}');var i=t(74848),n=t(28453);const s={},d="GeocoderWidget",c={},a=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"<code>geocoder</code> (string, optional)",id:"geocoder",level:4},{value:"<code>apiKey</code> (string, optional)",id:"apikey",level:4},{value:"<code>customGeocoder</code> (optional)",id:"customgeocoder",level:4},{value:"<code>_geolocation</code> (optional)",id:"_geolocation",level:4}];function l(e){const o={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",strong:"strong",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(o.header,{children:(0,i.jsx)(o.h1,{id:"geocoderwidget",children:"GeocoderWidget"})}),"\n",(0,i.jsx)(o.p,{children:"The GeocoderWidget helps the user find positions on the map."}),"\n",(0,i.jsx)(o.p,{children:"This widget provides an input box for entering an address or a pair of coordinates."}),"\n",(0,i.jsxs)(o.p,{children:["The user types an address or coordinates into the text field and press ",(0,i.jsx)(o.strong,{children:"Go"})," to move the map.  The most recent addresses that have been successfully located are  presented in a drop-down menu."]}),"\n",(0,i.jsx)(o.p,{children:"Addresses that return a valid location are stored in browser local storage (up to five entries). They will appear in the drop-down for quick re-use during later visits."}),"\n",(0,i.jsx)(o.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(o.pre,{children:(0,i.jsx)(o.code,{className:"language-ts",children:"import {GeocoderWidget} from '@deck.gl/widgets';\nimport {Deck} from '@deck.gl/core';\n\nnew Deck({\n  widgets: [new GeocoderWidget()]\n});\n"})}),"\n",(0,i.jsx)(o.h2,{id:"props",children:"Props"}),"\n",(0,i.jsxs)(o.p,{children:["The ",(0,i.jsx)(o.code,{children:"GeocoderWidget"})," shares the base properties listed on the ",(0,i.jsx)(o.a,{href:"/deck.gl/docs/api-reference/widgets/overview",children:"widget overview page"}),". Additional options are listed below."]}),"\n",(0,i.jsxs)(o.h4,{id:"geocoder",children:[(0,i.jsx)(o.code,{children:"geocoder"})," (string, optional)"]}),"\n",(0,i.jsxs)(o.p,{children:["Default: ",(0,i.jsx)(o.code,{children:"'coordinates'"})]}),"\n",(0,i.jsxs)(o.p,{children:["Which geocoding service to use. Supported values are ",(0,i.jsx)(o.code,{children:"'coordinates'"}),", ",(0,i.jsx)(o.code,{children:"'google'"}),", ",(0,i.jsx)(o.code,{children:"'mapbox'"}),", ",(0,i.jsx)(o.code,{children:"'opencage'"}),", or ",(0,i.jsx)(o.code,{children:"'custom'"}),"."]}),"\n",(0,i.jsxs)(o.h4,{id:"apikey",children:[(0,i.jsx)(o.code,{children:"apiKey"})," (string, optional)"]}),"\n",(0,i.jsxs)(o.p,{children:["Required if ",(0,i.jsx)(o.code,{children:"geocoder"})," is set to a third party provider. For quick testing, applications can use the  ",(0,i.jsx)(o.code,{children:"coordinates"})," geocode does not require an api key."]}),"\n",(0,i.jsxs)(o.h4,{id:"customgeocoder",children:[(0,i.jsx)(o.code,{children:"customGeocoder"})," (optional)"]}),"\n",(0,i.jsxs)(o.p,{children:["Only used when ",(0,i.jsx)(o.code,{children:"geocoder"})," is ",(0,i.jsx)(o.code,{children:"'custom'"}),". A function that receives the entered text and an API key, and resolves to a ",(0,i.jsx)(o.code,{children:"{longitude, latitude}"})," object when successful."]}),"\n",(0,i.jsxs)(o.h4,{id:"_geolocation",children:[(0,i.jsx)(o.code,{children:"_geolocation"})," (optional)"]}),"\n",(0,i.jsxs)(o.p,{children:["In addition to addresses / coordinates, one position of obvious interest is the user's own current position. This experimental option adds a ",(0,i.jsx)(o.code,{children:"current"})," menu item that calls the browser's geolocation API and navigates to the user's current position. Note that this requires the user to enable geolocation in the browser."]}),"\n",(0,i.jsxs)(o.p,{children:["If ",(0,i.jsx)(o.code,{children:"props._geolocation"})," ",(0,i.jsx)(o.strong,{children:"Current position"})," from the drop-down uses ",(0,i.jsx)(o.code,{children:"navigator.geolocation"})," to center the map. The option is hidden if the browser does not provide the Geolocation API or the user denies access."]})]})}function h(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,i.jsx)(o,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,o,t)=>{t.d(o,{R:()=>s,x:()=>d});var r=t(96540);const i={},n=r.createContext(i);function s(e){const o=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function d(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(n.Provider,{value:o},e.children)}}}]);
"use strict";(self.webpackChunkproject_website=self.webpackChunkproject_website||[]).push([[4010],{76149:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"api-reference/json/conversion-reference","title":"Conversion Reference","description":"| Prefix | Description | Example usage |","source":"@site/../docs/api-reference/json/conversion-reference.md","sourceDirName":"api-reference/json","slug":"/api-reference/json/conversion-reference","permalink":"/deck.gl/docs/api-reference/json/conversion-reference","draft":false,"unlisted":false,"editUrl":"https://github.com/visgl/deck.gl/tree/master/website/../docs/api-reference/json/conversion-reference.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"JSONConfiguration","permalink":"/deck.gl/docs/api-reference/json/json-configuration"},"next":{"title":"@deck.gl/mapbox","permalink":"/deck.gl/docs/api-reference/mapbox/overview"}}');var r=s(74848),o=s(28453);const a={},i="Conversion Reference",c={},l=[{value:"Classes and using <code>@@type</code>",id:"classes-and-using-type",level:2},{value:"React components and using <code>@@type</code> (experimental)",id:"react-components-and-using-type-experimental",level:2},{value:"Functions and using <code>@@function</code>",id:"functions-and-using-function",level:2},{value:"Constants and using the <code>@@#</code> prefix",id:"constants-and-using-the--prefix",level:3},{value:"Enumerations and using the <code>@@#</code> prefix",id:"enumerations-and-using-the--prefix",level:3},{value:"Functions and using the <code>@@=</code> prefix",id:"functions-and-using-the--prefix",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"conversion-reference",children:"Conversion Reference"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Prefix"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Example usage"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"@@type"})}),(0,r.jsx)(n.td,{children:"Interpret a string as a JavaScript class or React component, resolving in the JSONConfiguration."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"@@type": "ScatterplotLayer"'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"@@function"})}),(0,r.jsx)(n.td,{children:"Interpret a string as a JavaScript function, resolving in the JSONConfiguration."}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"@@function": "calculateRadius"'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"@@="})}),(0,r.jsx)(n.td,{children:"Interpret the rest of the string as a function, parsing unquoted character strings as identifiers"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"@@=[lng, lat]"'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"@@#"})}),(0,r.jsx)(n.td,{children:"Interpret the rest of the string as a constant, resolving in the JSON configuration"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"@@#MapController"'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"@@#<enum-name>.<enum-value>"})}),(0,r.jsx)(n.td,{children:"Interpret the rest of the string as a enumeration, resolving in the JSON configuration"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'"@@#GL.ONE"'})})]})]})]}),"\n",(0,r.jsx)(n.p,{children:'The @deck.g/json framework inspects the "raw" parsed JSON data structure before supplying it to deck.gl as props. This conversion process replaces certain objects in the structure with instances of objects.'}),"\n",(0,r.jsxs)(n.h2,{id:"classes-and-using-type",children:["Classes and using ",(0,r.jsx)(n.code,{children:"@@type"})]}),"\n",(0,r.jsxs)(n.p,{children:["Conversion happens by default for classes. For example, when this configuration of classes is passed to a\n",(0,r.jsx)(n.code,{children:"JSONConverter"}),"\u2013"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"const configuration = {\n  classes: Object.assign({}, require('@deck.gl/layers'), require('@deck.gl/aggregation-layers'))\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:"and used to resolve this JSON object\u2013"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "layers": [\n    {\n      "@@type": "ScatterplotLayer",\n      "data": ...,\n      "getColor": [0, 128, 255],\n      "getRadius": 1\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"it will replace the layers descriptor with"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"{\n  layers: [\n    new ScatterplotLayer({\n      data: ...,\n      getColor: [0, 128, 255],\n      getRadius: 1\n    })\n  ]\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"A warning will be raised if the named layer is not registered."}),"\n",(0,r.jsxs)(n.p,{children:["Whenever the ",(0,r.jsx)(n.code,{children:"JSONConverter"})," component finds the ",(0,r.jsx)(n.code,{children:"@@type"}),' field, it looks into the "class catalog"\nlike that in the configuration object above. These classes can be layers, views, or other objects,\nprovided the classes have been registered.']}),"\n",(0,r.jsxs)(n.h2,{id:"react-components-and-using-type-experimental",children:["React components and using ",(0,r.jsx)(n.code,{children:"@@type"})," (experimental)"]}),"\n",(0,r.jsxs)(n.p,{children:["Conversion happens by default for react components. For example, when this configuration of classes is passed to a\n",(0,r.jsx)(n.code,{children:"JSONConverter"}),"\u2013"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import React from 'react';\n\nimport TestComponent from '@/components/test';\n\nconst configuration = {\n  React,\n  reactComponents: {\n    TestComponent\n  }\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:"and used to resolve this JSON object\u2013"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "@@type": "TestComponent",\n  // props for the component\n  "color": [0, 128, 255],\n  "anotherProp": 1\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"it will replace it with a React component."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"{\n  $$typeof: Symbol(react.element),\n  key: null,\n  props: {\n    color: [0, 128, 255],\n    anotherProp: 1\n  },\n  // ...\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can use it directly to render a react component."}),"\n",(0,r.jsx)(n.p,{children:"A warning will be raised if the named react component is not registered."}),"\n",(0,r.jsxs)(n.h2,{id:"functions-and-using-function",children:["Functions and using ",(0,r.jsx)(n.code,{children:"@@function"})]}),"\n",(0,r.jsxs)(n.p,{children:["Any JavaScript function can be passed. For example, when this configuration of functions is passed to a\n",(0,r.jsx)(n.code,{children:"JSONConverter"}),"\u2013"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"function calculateRadius({base, exponent}) {\n  return Math.pow(base, exponent);\n}\n\nconst configuration = {\n  ...,\n  functions: {calculateRadius}\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:"and used to resolve this JSON object\u2013"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "layers": [\n    {\n      "@@type": "ScatterplotLayer",\n      "data": ...,\n      "getColor": [0, 128, 255],\n      "getRadius": {\n        "@@function": "calculateRadius",\n        "base": 2,\n        "exponent": 3\n      }\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"it will replace the layers descriptor with"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"{\n  layers: [\n    new ScatterplotLayer({\n      data: ...,\n      getColor: [0, 128, 255],\n      getRadius: 8\n    })\n  ]\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:"A warning will be raised if the function is not registered."}),"\n",(0,r.jsxs)(n.p,{children:["Whenever the ",(0,r.jsx)(n.code,{children:"JSONConverter"})," component finds the ",(0,r.jsx)(n.code,{children:"@@function"}),' field, it looks into the "function catalog"\nlike that in the configuration object above.']}),"\n",(0,r.jsxs)(n.h3,{id:"constants-and-using-the--prefix",children:["Constants and using the ",(0,r.jsx)(n.code,{children:"@@#"})," prefix"]}),"\n",(0,r.jsxs)(n.p,{children:["A map of constants that should be made available to the JSON string resolver. This is also helpful to evaluate a prop that does not need to be instantiated. The ",(0,r.jsx)(n.code,{children:"@@#"})," prefix on an constant triggers this lookup."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, when this configuration is passed to ",(0,r.jsx)(n.code,{children:"JSONConverter"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import {MapController} from '@deck.gl/core';\n\nconst configuration = {\n  ...\n  constants: {\n    MapController\n  }\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:"and used to resolve in this JSON object:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "controller": "@@#MapController",\n  "layers": [\n    {\n      "@@type": "ScatterplotLayer",\n      "data": ...,\n      ...\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"will replace the constants' value with the value provided in configuration declaration:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"{\n  controller: MapController, // MapController class from '@deck.gl/core'\n  layers: [\n    new ScatterplotLayer({\n      data: ...,\n      ...\n    })\n  ]\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Whenever the ",(0,r.jsx)(n.code,{children:"JSONConverter"})," component finds a string prefixed with ",(0,r.jsx)(n.code,{children:"@@#"}),', it looks into a "constants catalog" first and then the "enumerations catalog".']}),"\n",(0,r.jsxs)(n.h3,{id:"enumerations-and-using-the--prefix",children:["Enumerations and using the ",(0,r.jsx)(n.code,{children:"@@#"})," prefix"]}),"\n",(0,r.jsxs)(n.p,{children:["Often deck.gl visualizations require access to particular enumerations. For this reason, a configuration\nobject can also contain a map of enumerations that should be made available to the @deck.gl/json string\nresolver. The ",(0,r.jsx)(n.code,{children:"@@#"})," prefix on an enumeration triggers this lookup."]}),"\n",(0,r.jsxs)(n.p,{children:["For example, when this configuration is passed to the ",(0,r.jsx)(n.code,{children:"JSONConverter"}),"\u2013"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import {COORDINATE_SYSTEM} from '@deck.gl/core';\nimport GL from '@luma.gl/constants';\n\nconst configuration = {\n  ...\n  enumerations: {\n    COORDINATE_SYSTEM,\n    GL\n  }\n};\n"})}),"\n",(0,r.jsx)(n.p,{children:"and used to resolve this JSON object\u2013"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "layers": [\n    {\n      "@@type": "ScatterplotLayer",\n      "data": ...,\n      "coordinateSystem": "@@#COORDINATE_SYSTEM.METER_OFFSETS",\n      "parameters": {\n        "blend": true,\n        "blendFunc": ["@@#GL.ONE", "@@#GL.ZERO", "@@#GL.SRC_ALPHA", "@@#GL.DST_ALPHA"]\n      }\n    }\n  ]\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["the ",(0,r.jsx)(n.code,{children:"@@#<enum-name>.<enum-value>"})," will be resolved to values in the ",(0,r.jsx)(n.code,{children:"enumerations"})," config:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"{\n  layers: [\n    new ScatterplotLayer({\n      data: ...,\n      coordinateSystem: 2,  // The enumerated value of COORDINATE_SYSTEM.METER_OFFSETS\n      parameters: {\n        blend: true,\n        blendFunc: [1, 0, 770, 772]\n      }\n    })\n  ]\n}\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"functions-and-using-the--prefix",children:["Functions and using the ",(0,r.jsx)(n.code,{children:"@@="})," prefix"]}),"\n",(0,r.jsxs)(n.p,{children:["Functions are parsed from value strings with a ",(0,r.jsx)(n.code,{children:"@@="})," prefix."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'    "layers": [{\n        "@@type": "HexagonLayer",\n        "data": [\n            {"lat":0,"lng":0},\n            {"lat":0,"lng":0},\n            {"lat":0,"lng":0},\n            {"lat":1.2,"lng":1.2},\n            {"lat":1.2,"lng":1.2},\n            {"lat":1.2,"lng":1.2}\n        ],\n        "getPosition": "@@=[lng, lat]",\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In this case, a function is generated of the format ",(0,r.jsx)(n.code,{children:'(datum) => [datum["lng"], datum["lng"]]'}),", reading\nfrom the JSON data rows."]}),"\n",(0,r.jsxs)(n.p,{children:["Passing ",(0,r.jsx)(n.code,{children:"@@=-"})," will simply return a function of the format ",(0,r.jsx)(n.code,{children:"(datum) => (datum)"}),". For example, if data were\nan array of coordinates (e.g., ",(0,r.jsx)(n.code,{children:"[[0, 1], [0, 5]]"}),"), passing ",(0,r.jsx)(n.code,{children:"@@=-"})," would return those values."]}),"\n",(0,r.jsxs)(n.p,{children:["Additionally, ",(0,r.jsx)(n.code,{children:"@@="})," provides access to a small Javascript expression parser. You can apply basic Boolean,\ninline conditionals, and arithmetic operations via this parser.\nFor example, the following are all valid functions\u2013"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'"getPosition": "@@=[lng, lat, altitudeMeters]",\n"getFillColor": "@@=[color / 255, 200, 20]",\n"getLineColor": "@@=value > 10 ? [255, 0, 0] : [0, 255, 200]",\n'})}),"\n",(0,r.jsx)(n.p,{children:"Each would be evaluated to an expression equivalent to\u2013"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"datum => [datum.lng, datum.lat, altitudeMeters / 1000]\ndatum => [datum.color / 255, 200, 20]\ndatum => datum.value > 10 ? [255, 0, 0] : [0, 255, 200]\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var t=s(96540);const r={},o=t.createContext(r);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);
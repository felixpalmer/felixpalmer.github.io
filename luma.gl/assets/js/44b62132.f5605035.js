/*! For license information please see 44b62132.f5605035.js.LICENSE.txt */
"use strict";(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[6726],{2028:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>a});var n=s(5893),i=s(1151);const t={},c="Device",d={id:"api-reference/core/device",title:"Device",description:"The Device class manages the application's connection with the GPU,",source:"@site/../docs/api-reference/core/device.md",sourceDirName:"api-reference/core",slug:"/api-reference/core/device",permalink:"/luma.gl/docs/api-reference/core/device",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/luma.gl/tree/main/docs/../docs/api-reference/core/device.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Overview",permalink:"/luma.gl/docs/api-reference/core/"},next:{title:"DeviceFeature",permalink:"/luma.gl/docs/api-reference/core/device-features"}},l={},a=[{value:"Usage",id:"usage",level:2},{value:"Types",id:"types",level:2},{value:"<code>DeviceProps</code>",id:"deviceprops",level:3},{value:"Static Methods",id:"static-methods",level:2},{value:"create",id:"create",level:3},{value:"Fields",id:"fields",level:2},{value:"id",id:"id",level:3},{value:"statsManager",id:"statsmanager",level:3},{value:"props",id:"props",level:3},{value:"userData",id:"userdata",level:3},{value:"info",id:"info",level:3},{value:"features",id:"features",level:3},{value:"limits",id:"limits",level:3},{value:"isTextureFormatSupported",id:"istextureformatsupported",level:3},{value:"isTextureFormatFilterable",id:"istextureformatfilterable",level:3},{value:"isTextureFormatRenderable",id:"istextureformatrenderable",level:3},{value:"isLost",id:"islost",level:3},{value:"lost",id:"lost",level:3},{value:"canvasContext",id:"canvascontext",level:3},{value:"Methods",id:"methods",level:2},{value:"constructor",id:"constructor",level:3},{value:"destroy()",id:"destroy",level:3},{value:"createCanvasContext()",id:"createcanvascontext",level:3},{value:"getCanvasContext()",id:"getcanvascontext",level:3},{value:"submit",id:"submit",level:3},{value:"createBuffer",id:"createbuffer",level:3},{value:"createTexture",id:"createtexture",level:3},{value:"createSampler",id:"createsampler",level:3},{value:"createFramebuffer",id:"createframebuffer",level:3},{value:"createShader",id:"createshader",level:3},{value:"createRenderPipeline",id:"createrenderpipeline",level:3},{value:"createComputePipeline",id:"createcomputepipeline",level:3},{value:"beginRenderPass",id:"beginrenderpass",level:3},{value:"beginComputePass",id:"begincomputepass",level:3},{value:"getDefaultRenderPass",id:"getdefaultrenderpass",level:3},{value:"Remarks",id:"remarks",level:2},{value:"loseDevice",id:"losedevice",level:3}];function o(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"device",children:"Device"}),"\n",(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.code,{children:"Device"})," class manages the application's connection with the GPU,\nproviding methods to:"]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"create GPU resources"}),"\n",(0,n.jsx)(r.li,{children:"query the capabilities of the GPU"}),"\n",(0,n.jsx)(r.li,{children:"detect error conditions."}),"\n"]}),"\n",(0,n.jsxs)(r.p,{children:["A ",(0,n.jsx)(r.code,{children:"Device"})," is created through static ",(0,n.jsx)(r.code,{children:"Device.create(...)"})," method."]}),"\n",(0,n.jsxs)(r.p,{children:["Note that the actual ",(0,n.jsx)(r.code,{children:"Device"})," returned by ",(0,n.jsx)(r.code,{children:"Device.create()"})," will be either\na ",(0,n.jsx)(r.code,{children:"WebGLDevice"})," wrapping a WebGL context or a ",(0,n.jsx)(r.code,{children:"WebGPUDevice"})," wrapping a WebGPU device\nbased on what the run-time environment (ie. browser or Node.js) supports."]}),"\n",(0,n.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(r.p,{children:"TODO - fixme"}),"\n",(0,n.jsx)(r.p,{children:"Creates a WebGL 2 context, auto creating a canvas"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"import {Device} from '@luma.gl/core';\nconst device = new Device(); \n"})}),"\n",(0,n.jsx)(r.p,{children:"Attaching a Device to an externally created WebGLRendering context instruments it\nso that it works with other luma.gl classes."}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"import {Device} from '@luma.gl/core';\nimport {Model} from '@luma.gl/engine';\n\nconst gl = canvas.createContext('webgl2');\nconst device = Device.attach(gl);\n\n// Instrumentation ensures the context works with higher-level classes.\nconst vao = device.gl.createVertexArray();\nconst model = new Model(gl, options);\n"})}),"\n",(0,n.jsx)(r.p,{children:"Handle GPU disconnections:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"if (!device.isLost) {\n  ...\n}\n\nconst {message} = await device.lost;\nconsole.error(message);\n"})}),"\n",(0,n.jsx)(r.h2,{id:"types",children:"Types"}),"\n",(0,n.jsx)(r.h3,{id:"deviceprops",children:(0,n.jsx)(r.code,{children:"DeviceProps"})}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Parameter"}),(0,n.jsx)(r.th,{children:"Default"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"type"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"'best-available'"})}),(0,n.jsxs)(r.td,{children:[(0,n.jsx)(r.code,{children:"'webgpu"}),"', ",(0,n.jsx)(r.code,{children:"'webgl'"}),", ",(0,n.jsx)(r.code,{children:"'webgl1'"}),", ",(0,n.jsx)(r.code,{children:"'webgl2'"})]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"canvas"})}),(0,n.jsx)(r.td,{children:"N/A"}),(0,n.jsxs)(r.td,{children:["A ",(0,n.jsx)(r.em,{children:"string"})," ",(0,n.jsx)(r.code,{children:"id"})," of an existing HTML element or a ",(0,n.jsx)(r.em,{children:"DOMElement"}),". If not provided, a new canvas will be created."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:"priority."}),(0,n.jsx)(r.td,{}),(0,n.jsx)(r.td,{})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"debug?: boolean"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"false"})}),(0,n.jsx)(r.td,{children:"WebGL API calls will be logged to the console and WebGL errors will generate JavaScript exceptions."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"break?: string[]"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"[]"})}),(0,n.jsxs)(r.td,{children:["Insert a break point (",(0,n.jsx)(r.code,{children:"debugger"}),") if one of the listed gl functions is called."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"alpha?: boolean"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"true"})}),(0,n.jsx)(r.td,{children:"Default render target has an alpha buffer."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"depth?: boolean"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"true"})}),(0,n.jsxs)(r.td,{children:["Default render target has a depth buffer of at least ",(0,n.jsx)(r.code,{children:"16"})," bits."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"stencil?"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"false"})}),(0,n.jsxs)(r.td,{children:["Default render target has a stencil buffer of at least ",(0,n.jsx)(r.code,{children:"8"})," bits."]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"antialias?"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"true"})}),(0,n.jsx)(r.td,{children:"Boolean that indicates whether or not to perform anti-aliasing."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"premultipliedAlpha?"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"true"})}),(0,n.jsx)(r.td,{children:"Boolean that indicates that the page compositor will assume the drawing buffer contains colors with pre-multiplied alpha."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"preserveDrawingBuffer?"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"false"})}),(0,n.jsx)(r.td,{children:"Default render target buffers will preserve their values until cleared or overwritten. Useful for screen capture."})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"failIfMajorPerformanceCaveat?"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"false"})}),(0,n.jsx)(r.td,{children:"Do not create if the system performance is low."})]})]})]}),"\n",(0,n.jsx)(r.h2,{id:"static-methods",children:"Static Methods"}),"\n",(0,n.jsx)(r.h3,{id:"create",children:"create"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"Device.create(props: DeviceProps): Promise<Device>\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Creating device is done with the static ",(0,n.jsx)(r.code,{children:"Device.create()"})," method.\nCreates and returns a WebGL context, both in browsers and in Node.js."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"const device = await Device.create(props);\n"})}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"props"})," (",(0,n.jsx)(r.em,{children:"Object"}),") - key/value pairs containing context creation options"]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"fields",children:"Fields"}),"\n",(0,n.jsx)(r.h3,{id:"id",children:"id"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"readonly id: string\n"})}),"\n",(0,n.jsx)(r.p,{children:"A string identifier, for debug purposes."}),"\n",(0,n.jsx)(r.h3,{id:"statsmanager",children:"statsManager"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"statsManager: StatsManager\n"})}),"\n",(0,n.jsx)(r.p,{children:"Provides access to bags of stats containing information about resource usage and performance of the device."}),"\n",(0,n.jsx)(r.h3,{id:"props",children:"props"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"props: Required<DeviceProps>\n"})}),"\n",(0,n.jsx)(r.p,{children:"A readonly copy of the props that were used to create this device."}),"\n",(0,n.jsx)(r.h3,{id:"userdata",children:"userData"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"userData: Record<string, any>\n"})}),"\n",(0,n.jsx)(r.p,{children:"Reserved for the application."}),"\n",(0,n.jsx)(r.h3,{id:"info",children:"info"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"info: DeviceInfo\n"})}),"\n",(0,n.jsx)(r.p,{children:"Information about the device (vendor, versions etc)."}),"\n",(0,n.jsx)(r.p,{children:"Get debug information about the device:"}),"\n",(0,n.jsxs)(r.table,{children:[(0,n.jsx)(r.thead,{children:(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.th,{children:"Field"}),(0,n.jsx)(r.th,{children:"Type"}),(0,n.jsx)(r.th,{children:"Description"})]})}),(0,n.jsxs)(r.tbody,{children:[(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"vendor"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"string"})}),(0,n.jsx)(r.td,{children:"GPU vendor (unmasked if possible)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"renderer"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"string"})}),(0,n.jsx)(r.td,{children:"Renderer (unmasked if possible)"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"version"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"string"})}),(0,n.jsx)(r.td,{children:"WebGL version"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"gpu"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"string"})}),(0,n.jsx)(r.td,{children:"GPU name"})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"gpuBackend?"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"string"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"'angle' | 'metal' | 'unknown'"})})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"shadingLanguage"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"string"})}),(0,n.jsxs)(r.td,{children:["shading language (",(0,n.jsx)(r.code,{children:"'glsl' | 'wgsl'"}),")"]})]}),(0,n.jsxs)(r.tr,{children:[(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"shadingLanguageVersion"})}),(0,n.jsx)(r.td,{children:(0,n.jsx)(r.code,{children:"number"})}),(0,n.jsx)(r.td,{children:"shading language version"})]})]})]}),"\n",(0,n.jsx)(r.p,{children:"Remarks:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"Shading language version is the highest supported version of the device's shading language."}),"\n",(0,n.jsxs)(r.li,{children:["Version numbers are calculated as:  ",(0,n.jsx)(r.code,{children:"<major version> * 100 + <minor version> * 10 + <patch version>"}),"."]}),"\n",(0,n.jsxs)(r.li,{children:["The WGSL version is always ",(0,n.jsx)(r.code,{children:"100"})]}),"\n",(0,n.jsxs)(r.li,{children:["The GLSL version is always ",(0,n.jsx)(r.code,{children:"300"})," (WebGL2)."]}),"\n",(0,n.jsx)(r.li,{children:"Sometimes a vendor provides multiple backends (e.g. Apple ANGLE vs Apple Metal)"}),"\n",(0,n.jsx)(r.li,{children:"WebGPU Devices currently do not provide much information due to limitations in the WebGPU API."}),"\n",(0,n.jsxs)(r.li,{children:["WebGL Devices can usually provide rich information (through the ",(0,n.jsx)(r.code,{children:"WEBGL_debug_renderer_info"})," extension)."]}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"features",children:"features"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"features: Set<DeviceFeature>\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Applications can determine whether the device implements an optional features by checking ",(0,n.jsx)(r.code,{children:"device.features.has(...)"}),"."]}),"\n",(0,n.jsx)(r.h3,{id:"limits",children:"limits"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"limits: DeviceLimits\n"})}),"\n",(0,n.jsx)(r.p,{children:"An object with various device limits. WebGPU style."}),"\n",(0,n.jsx)(r.h3,{id:"istextureformatsupported",children:"isTextureFormatSupported"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"isTextureFormatSupported(format: TextureFormat): boolean\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Check if device supports a specific texture format (creation and ",(0,n.jsx)(r.code,{children:"nearest"})," sampling)."]}),"\n",(0,n.jsx)(r.h3,{id:"istextureformatfilterable",children:"isTextureFormatFilterable"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"isTextureFormatFilterable(format: TextureFormat): boolean\n"})}),"\n",(0,n.jsx)(r.p,{children:"Check if linear filtering (sampler interpolation) is supported for a specific texture format."}),"\n",(0,n.jsx)(r.h3,{id:"istextureformatrenderable",children:"isTextureFormatRenderable"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"isTextureFormatRenderable(format: TextureFormat): boolean\n"})}),"\n",(0,n.jsx)(r.p,{children:"Check if device supports rendering to a specific texture format."}),"\n",(0,n.jsx)(r.h3,{id:"islost",children:"isLost"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"isLost: boolean\n"})}),"\n",(0,n.jsx)(r.p,{children:"True if the device is already lost (GPU is disconnected)."}),"\n",(0,n.jsx)(r.h3,{id:"lost",children:"lost"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"lost: Promise<{reason: 'destroyed', message: string}>\n"})}),"\n",(0,n.jsx)(r.p,{children:"Promise that resolves with an error message if the device is lost (GPU is disconnected)."}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["GPU disconnections normally happen when the computer goes to sleep but it can also happen\nwhen too many applications use the GPU, too many ",(0,n.jsx)(r.code,{children:"Device"})," instances are created etc."]})}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsx)(r.p,{children:"Recovering from a lost GPU device is typically challenging as all GPU resources need to be\nrecreated. For applications that auto-save state, it may be better to simply reload the page\nor ask the user to reload the page."})}),"\n",(0,n.jsx)(r.h3,{id:"canvascontext",children:"canvasContext"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"canvasContext?: CanvasContext\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Returns the default ",(0,n.jsx)(r.a,{href:"./canvas-context",children:(0,n.jsx)(r.code,{children:"CanvasContext"})}),"."]}),"\n",(0,n.jsxs)(r.p,{children:["Note that a WebGPU ",(0,n.jsx)(r.code,{children:"Device"})," may not have a canvas context."]}),"\n",(0,n.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsx)(r.h3,{id:"constructor",children:"constructor"}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:[(0,n.jsx)(r.code,{children:"Device"})," is an abstract class and the constructor should not be called directly.\nUse the static ",(0,n.jsx)(r.code,{children:"Device.create()"})," method to create classes."]})}),"\n",(0,n.jsx)(r.h3,{id:"destroy",children:"destroy()"}),"\n",(0,n.jsxs)(r.p,{children:["Releases resources associated with this ",(0,n.jsx)(r.code,{children:"Device"}),"."]}),"\n",(0,n.jsxs)(r.admonition,{type:"info",children:[(0,n.jsxs)(r.p,{children:["Whether destroying a device actually releases resources depends on the underlying ",(0,n.jsx)(r.code,{children:"Device"})," implementation in use."]}),(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"WebGL does not have a context destroy function."}),"\n",(0,n.jsx)(r.li,{children:"However, if headless gl is running the destroy extension will be called."}),"\n"]})]}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsxs)(r.p,{children:["Interaction between ",(0,n.jsx)(r.code,{children:"Device.destroy()"}),", ",(0,n.jsx)(r.code,{children:"Device.lost"})," and ",(0,n.jsx)(r.code,{children:"Device.isLost"})," is implementation-dependent.\nWhether destroying a device trigger a device loss, the order of isLost promise resolution versus API errors caused by destroyed device etc, should not be relied upon."]})}),"\n",(0,n.jsx)(r.h3,{id:"createcanvascontext",children:"createCanvasContext()"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"createCanvasContext(props?: CanvasContextProps): CanvasContext\n"})}),"\n",(0,n.jsx)(r.admonition,{type:"info",children:(0,n.jsx)(r.p,{children:"WebGPU only. (WebGL devices can only render into the canvas they were created with)."})}),"\n",(0,n.jsxs)(r.p,{children:["Creates a new ",(0,n.jsx)(r.a,{href:"./canvas-context",children:(0,n.jsx)(r.code,{children:"CanvasContext"})}),"."]}),"\n",(0,n.jsx)(r.h3,{id:"getcanvascontext",children:"getCanvasContext()"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"getCanvasContext(): CanvasContext\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Returns the primary canvas context of a device.\nIn TypeScript applications this helps applications avoid having to repeatedly check if ",(0,n.jsx)(r.code,{children:"device.canvasContext"})," is null,\notherwise the two are equivalent."]}),"\n",(0,n.jsx)(r.p,{children:"Throws an error if no canvas context is available (a WebGPU compute device)."}),"\n",(0,n.jsx)(r.h3,{id:"submit",children:"submit"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"submit(): void\n"})}),"\n",(0,n.jsx)(r.p,{children:"Call after rendering a frame is complete."}),"\n",(0,n.jsx)(r.h3,{id:"createbuffer",children:"createBuffer"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"createBuffer(props: BufferProps): Buffer\ncreateBuffer(data: ArrayBuffer | ArrayBufferView): Buffer\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Creates a ",(0,n.jsx)(r.a,{href:"./resources/buffer",children:(0,n.jsx)(r.code,{children:"Buffer"})})," used to manage memory on the GPU."]}),"\n",(0,n.jsxs)(r.p,{children:["Deduces ",(0,n.jsx)(r.code,{children:"indexType"})," if usage."]}),"\n",(0,n.jsx)(r.h3,{id:"createtexture",children:"createTexture"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"createTexture(props: TextureProps): Texture\ncreateTexture(data: Promise<TextureData>): Texture\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Creates a ",(0,n.jsx)(r.a,{href:"./resources/texture",children:(0,n.jsx)(r.code,{children:"Texture"})}),", used to manage image data memory on the GPU."]}),"\n",(0,n.jsx)(r.h3,{id:"createsampler",children:"createSampler"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"createSampler(props: SamplerProps): Sampler\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Creates a ",(0,n.jsx)(r.a,{href:"./resources/sampler",children:(0,n.jsx)(r.code,{children:"Sampler"})}),"."]}),"\n",(0,n.jsx)(r.h3,{id:"createframebuffer",children:"createFramebuffer"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"createFramebuffer(props: FramebufferProps): Framebuffer\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Creates a ",(0,n.jsx)(r.a,{href:"./resources/framebuffer",children:(0,n.jsx)(r.code,{children:"Framebuffer"})}),"."]}),"\n",(0,n.jsx)(r.h3,{id:"createshader",children:"createShader"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"createShader(props: ShaderProps): Shader\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Creates a ",(0,n.jsx)(r.a,{href:"./resources/shader",children:(0,n.jsx)(r.code,{children:"Shader"})}),"."]}),"\n",(0,n.jsx)(r.h3,{id:"createrenderpipeline",children:"createRenderPipeline"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"createRenderPipeline(props: RenderPipelineProps): RenderPipeline\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Creates a ",(0,n.jsx)(r.a,{href:"./resources/render-pipeline",children:(0,n.jsx)(r.code,{children:"RenderPipeline"})})," (aka program)"]}),"\n",(0,n.jsx)(r.h3,{id:"createcomputepipeline",children:"createComputePipeline"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"createComputePipeline(props: ComputePipelineProps): ComputePipeline\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Creates a ",(0,n.jsx)(r.a,{href:"./resources/compute-pipeline",children:(0,n.jsx)(r.code,{children:"ComputePipeline"})})," (aka program)"]}),"\n",(0,n.jsx)(r.h3,{id:"beginrenderpass",children:"beginRenderPass"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"beginRenderPass(props: RenderPassProps): RenderPass\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Creates a ",(0,n.jsx)(r.a,{href:"./resources/render-pass",children:(0,n.jsx)(r.code,{children:"RenderPass"})}),"."]}),"\n",(0,n.jsx)(r.h3,{id:"begincomputepass",children:"beginComputePass"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"beginComputePass(props?: ComputePassProps): ComputePass\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Creates a ",(0,n.jsx)(r.a,{href:"./resources/compute-pass",children:(0,n.jsx)(r.code,{children:"ComputePass"})})," which can be used to bind data and run compute operations using compute pipelines."]}),"\n",(0,n.jsx)(r.h3,{id:"getdefaultrenderpass",children:"getDefaultRenderPass"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"getDefaultRenderPass(): RenderPass\n"})}),"\n",(0,n.jsxs)(r.p,{children:["A default ",(0,n.jsx)(r.code,{children:"RenderPass"})," is provided for applications that don't need to create\nmultiple or specially configured render passes."]}),"\n",(0,n.jsxs)(r.p,{children:["Note that a new default ",(0,n.jsx)(r.code,{children:"RenderPass"})," is returned every animation frame."]}),"\n",(0,n.jsx)(r.h2,{id:"remarks",children:"Remarks"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["Note that the actual ",(0,n.jsx)(r.code,{children:"Device"})," returned by ",(0,n.jsx)(r.code,{children:"Device.create()"})," can be either\na ",(0,n.jsx)(r.code,{children:"WebGLDevice"})," wrapping a WebGL context or a ",(0,n.jsx)(r.code,{children:"WebGPUDevice"})," wrapping a WebGPU device\nbased on what the run-time environment (ie. browser or Node.js) supports."]}),"\n",(0,n.jsxs)(r.li,{children:["The ",(0,n.jsx)(r.code,{children:"Device"})," API is intentionally similar, but not identical, to the ",(0,n.jsxs)(r.a,{href:"https://www.w3.org/TR/webgpu/#gpu-device",children:["WebGPU ",(0,n.jsx)(r.code,{children:"GPUDevice"})]})," class API."]}),"\n"]}),"\n",(0,n.jsx)(r.h3,{id:"losedevice",children:"loseDevice"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-typescript",children:"loseDevice(): boolean\n"})}),"\n",(0,n.jsxs)(r.p,{children:["Triggers device loss (see below). After this call, the ",(0,n.jsx)(r.code,{children:"Device.lost"})," promise will be resolved with an error message and ",(0,n.jsx)(r.code,{children:"Device.isLost"})," will be set to true."]}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["Returns ",(0,n.jsx)(r.code,{children:"true"})," if an actual or emulated device loss was triggered, ",(0,n.jsx)(r.code,{children:"false"})," otherwise. Note that even if device loss emulation is not supported by the platform this function will still update the ",(0,n.jsx)(r.code,{children:"Device"})," instance to indicate that the device was lost, however the device can still be used."]}),"\n"]}),"\n",(0,n.jsx)(r.admonition,{type:"note",children:(0,n.jsxs)(r.p,{children:["The ",(0,n.jsx)(r.code,{children:"loseDevice()"})," method is primarily intended for debugging of device loss handling and should not be relied upon for production code.\n",(0,n.jsx)(r.code,{children:"loseDevice()"})," can currently only emulate context loss on WebGL devices on platform's where WebGL API provides the required ",(0,n.jsx)(r.code,{children:"WEBGL_lose_context"})," WebGL debug extension."]})})]})}function h(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(o,{...e})}):o(e)}},5251:(e,r,s)=>{var n=s(7294),i=Symbol.for("react.element"),t=Symbol.for("react.fragment"),c=Object.prototype.hasOwnProperty,d=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function a(e,r,s){var n,t={},a=null,o=null;for(n in void 0!==s&&(a=""+s),void 0!==r.key&&(a=""+r.key),void 0!==r.ref&&(o=r.ref),r)c.call(r,n)&&!l.hasOwnProperty(n)&&(t[n]=r[n]);if(e&&e.defaultProps)for(n in r=e.defaultProps)void 0===t[n]&&(t[n]=r[n]);return{$$typeof:i,type:e,key:a,ref:o,props:t,_owner:d.current}}r.Fragment=t,r.jsx=a,r.jsxs=a},5893:(e,r,s)=>{e.exports=s(5251)},1151:(e,r,s)=>{s.d(r,{Z:()=>d,a:()=>c});var n=s(7294);const i={},t=n.createContext(i);function c(e){const r=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function d(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(t.Provider,{value:r},e.children)}}}]);
/*! For license information please see f0da7a16.8713cf97.js.LICENSE.txt */
"use strict";(self.webpackChunkwebsite_docusaurus=self.webpackChunkwebsite_docusaurus||[]).push([[6322],{5913:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>u,toc:()=>f});var t=n(5893),o=n(1151);const s={},i="Using GPU Buffers",u={id:"api-guide/buffers",title:"Using GPU Buffers",description:"Buffer Operations",source:"@site/../docs/api-guide/buffers.md",sourceDirName:"api-guide",slug:"/api-guide/buffers",permalink:"/luma.gl/docs/api-guide/buffers",draft:!1,unlisted:!1,editUrl:"https://github.com/visgl/luma.gl/tree/main/docs/../docs/api-guide/buffers.md",tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"GPU Memory Management",permalink:"/luma.gl/docs/api-guide/memory"},next:{title:"Using GPU Textures",permalink:"/luma.gl/docs/api-guide/textures"}},a={},f=[{value:"Buffer Operations",id:"buffer-operations",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"using-gpu-buffers",children:"Using GPU Buffers"}),"\n",(0,t.jsx)(r.h2,{id:"buffer-operations",children:"Buffer Operations"}),"\n",(0,t.jsx)(r.p,{children:"The ability to copy memory between CPU, buffers and textures"}),"\n",(0,t.jsxs)(r.p,{children:["| Dimension             | WebGPU | WebGL2 | Description                                           |\n| --------------------- | ------ | ------ | ----------------------------------------------------- |  |\n| ",(0,t.jsx)(r.code,{children:"writeBuffer"}),"         | \u2705      | \u2705      | Read a buffer synchronously                           |\n| ",(0,t.jsx)(r.code,{children:"readBuffer (sync)"}),"   | \u274c      | \u2705      | Read a buffer synchronously                           |\n| ",(0,t.jsx)(r.code,{children:"readBuffer (async)"}),"  | \u2705      | \u274c *   | Read a buffer asynchronously                          |\n| ",(0,t.jsx)(r.code,{children:"copyBufferToBuffer"}),"  | \u2705      | \u2705      | Copy a buffer to another buffer without CPU roundtrip |\n| ",(0,t.jsx)(r.code,{children:"copyBufferToTexture"})," | \u2705      | \u2705      | Copy a buffer to a texture without CPU roundtrip      |\n| ",(0,t.jsx)(r.code,{children:"copyTextureToBuffer"})," | \u2705      | \u2705      | Copy a buffer to a texture without CPU roundtrip      |"]}),"\n",(0,t.jsx)(r.p,{children:"Remarks:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"A WebGL extension does exist that enables asynchronous buffer reads, but it is not implemented on MacOS which is the primary development environment for luma.gl."}),"\n",(0,t.jsx)(r.li,{children:"Asynchronous reads are emulated by luma.gl by providing a Promise style API. The actual reads are still asynchronous though."}),"\n"]})]})}function d(e={}){const{wrapper:r}={...(0,o.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},5251:(e,r,n)=>{var t=n(7294),o=Symbol.for("react.element"),s=Symbol.for("react.fragment"),i=Object.prototype.hasOwnProperty,u=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function f(e,r,n){var t,s={},f=null,c=null;for(t in void 0!==n&&(f=""+n),void 0!==r.key&&(f=""+r.key),void 0!==r.ref&&(c=r.ref),r)i.call(r,t)&&!a.hasOwnProperty(t)&&(s[t]=r[t]);if(e&&e.defaultProps)for(t in r=e.defaultProps)void 0===s[t]&&(s[t]=r[t]);return{$$typeof:o,type:e,key:f,ref:c,props:s,_owner:u.current}}r.Fragment=s,r.jsx=f,r.jsxs=f},5893:(e,r,n)=>{e.exports=n(5251)},1151:(e,r,n)=>{n.d(r,{Z:()=>u,a:()=>i});var t=n(7294);const o={},s=t.createContext(o);function i(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function u(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);